[{"path":"https://caravagnalab.github.io/ProCESS/articles/ProCESS.html","id":"pipeline-overview","dir":"Articles","previous_headings":"","what":"Pipeline overview","title":"ProCESS","text":"high-level overview pipeline ProCESS three-steps process, : discrete tissue first simulated, distinct clones defined stochastic rates growth death. compete colonise tissue standard stochastic birth-death process, ProCESS empowered time-varying structure allows weasily modelling complex evolutionary forces vary time (e.g., therapy-induced negative selection). tissue can sampled multiple time-points multiple spatially-separated positions. sampled cells, simulated phylogenetic history tumour can extracted. distance among involved cells represent lineage history simulated clones, mutational processes can used attach genomes simulated cells. ProCESS supports standard germline somatic mutations, including single-nucleotide variants (SNVs), insertion-deletions (indels) copy number alterations (CNAs). SNVs indels time-varying mutational signatures can also included. simulated phylogenetic history tumour possible generate tumour-matched-normal synthetic data benchmarking bioinformatics tools, infer parameters real sequencing data. ProCESS output include common VCF formats, well low-level SAM outputs can used aligment downstream analysis. Every simulated sample can assigned custom coverage purity.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/articles/ProCESS.html","id":"main-features","dir":"Articles","previous_headings":"Pipeline overview","what":"Main features","title":"ProCESS","text":"ProCESS engine number features, relevant : cells associated species proliferate stochastic fashion 2D lattice; every species defined () abstract “mutant” (ii) epi-state; epi-state binary (0/1, -). combination mutant epi-state determine evolutionary parameters species, can can change time mimicking treatment-related evolutionary pressures, instance. Species evolution stochastic follows -back mutations model, every cell division mutant status heritable, epistate can stochastically reversible; molecular level, genome tumour cells mutated simple mutations (SNVs indels) complex CNAs. Mutations - broad sense - can either passengers drivers ones, can linked realistic mutational processes. rates accumulation can change time, mimicking emergence time-varying mutational forces (e.g., model treatment). Moreover, realistic germline samples can simulated interfacing UK biobank database. arbitrary tissue sampling schema can simulated, including multi-region longitudinal datasets number samples time-points; realistic read-counts based bulk sequencing data can generated, level whole-genome, whole-exome targeted panels, well level pre-processed outputs (VCFs) low-level sequencing outputs (SAM); full access evolutionary process output available, allowing easy testing complex clonal architecture identification methods, mutation callers, etc.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/articles/ProCESS.html","id":"detailed-pipeline","dir":"Articles","previous_headings":"","what":"Detailed pipeline","title":"ProCESS","text":"ProCESS simulation follows steps (required, optional) disucssd . state simulation can saved (resumed) several time-points.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/articles/ProCESS.html","id":"tissue-simulation","dir":"Articles","previous_headings":"Detailed pipeline","what":"Tissue simulation","title":"ProCESS","text":"Initialise: squared tissue initialised, species defined single cell placed onto ; Evolve tissue: cells tissue left grow stochastically; Sample cells: cells can sampled tissue mimic measurement; Updates/add species: parameters species can modified, cells new species can defined added tissue (subclones). Steps 2-4 represent iterative interface “programmable tumour dynamics” gives user flexibility code custom evolutionary process.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/articles/ProCESS.html","id":"mutations-generation","dir":"Articles","previous_headings":"Detailed pipeline","what":"Mutations generation","title":"ProCESS","text":"Phylogeny: sampled cells, phylogeny built reflects evolutionary history simulated tumour. Mutational processes: mutational processes can mapped onto temporal-evolution process. Mutational engine: engine simulate mutations built using real reference genome. Map mutations: mutations stochatically attached simulated phylogeny.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/articles/ProCESS.html","id":"sequencing-data-generation","dir":"Articles","previous_headings":"Detailed pipeline","what":"Sequencing data generation","title":"ProCESS","text":"VCF: given mutations phylogenetic tree, custom coverage sample purity, VCF can simulated mimic variant-calling Beta-Binomial noise. SAM: mutations possible generate reads tumour matched-normal assay, fed data custom biorinformatics pipeline.","code":""},{"path":[]},{"path":"https://caravagnalab.github.io/ProCESS/articles/SCOUT.html","id":"summary-statistics","dir":"Articles","previous_headings":"","what":"Summary statistics","title":"SCOUT","text":"cohort generated, report total number mutations, CNas, clones etc etc.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/articles/SCOUT.html","id":"simulated-tumours","dir":"Articles","previous_headings":"","what":"Simulated tumours","title":"SCOUT","text":"Type (clones) Legend: Primary (P), Relapse (R), Number simulated clones (n), Number sampled time-points (t), Total number biopsies (b).","code":""},{"path":"https://caravagnalab.github.io/ProCESS/articles/SCOUT.html","id":"spn01","dir":"Articles","previous_headings":"Simulated tumours","what":"SPN01","title":"SCOUT","text":"SPN01 SPN01 prototype micro-satellite stable (MSS) colorectal cancer composed 4 clones, one dominant clone sampling. dominant clone harbours full inactivation APC gene point mutation concurrent loss heterozygosity (LOH) wildtype allele, together two activating mutations KRAS PIK3CA oncogenes. SPN01 profiled multi-region 3 samples collected time-point.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/articles/SCOUT.html","id":"spn02","dir":"Articles","previous_headings":"Simulated tumours","what":"SPN02","title":"SCOUT","text":"SPN02 SPN02 prototype micro-satellite instable (MSI) colorectal cancer composed 3 clones, one dominant clone sampling. dominant clone harbours mutant BRAF, PIK3CA MSH6. MSH6 mutation makes tumour hypermutant, enabling specific mutational signature. SPN02 profiled multi-region 2 samples collected time-point.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/articles/SCOUT.html","id":"spn03","dir":"Articles","previous_headings":"Simulated tumours","what":"SPN03","title":"SCOUT","text":"SPN03 SPN03 prototype chronic lymphocitic leukemia composed 3 clones, eventually one largely dominant one still expanding. largest clone harbours activating mutations NOTCH1 KRAS, last expanding subclone linked specific genetic mutation copy number driver event. SPN03 profiled watch--wait scenario (active survaillance scenario patient observed untill white blood counts exceed predefined threshould), acquiring one sample 4 time-points, distinct clonal compositions reflecting ongoing dynamics.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/articles/SCOUT.html","id":"spn04","dir":"Articles","previous_headings":"Simulated tumours","what":"SPN04","title":"SCOUT","text":"SPN04 SPN02 prototype acute myeloyd leukemia composed 3 clones, one becoming dominant every sampling. dominant clone harbours mutant IDH1, copy number gain KRAS mutant NRAS. SPN01 profiled platinum-based chemotherapy, relapsing clone presented treatment. Chemotherapy generates mutational signature specific exposure.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/articles/SCOUT.html","id":"spn05","dir":"Articles","previous_headings":"Simulated tumours","what":"SPN05","title":"SCOUT","text":"SPN05 SPN05 prototype mismatch-repair deficient breast cancer composed 5 clones, three detectable sampling. ancestral clone harbours mutant TP53, full BRCA2 inactivation joint mutation LOH (also linked specific mutational signature). two expanding subclones associated copy numbers: one ongoing TP53 LOH, CDKN2A LOH. SPN05 profiled single time-point three biopsies, reflecting distinct tumour composition terms clones distribution.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/articles/SCOUT.html","id":"spn06","dir":"Articles","previous_headings":"Simulated tumours","what":"SPN06","title":"SCOUT","text":"SPN06 SPN06 prototype smoking-associated lung adenocarcinoma, 6 clones compete time two lines treatment. main clonal population driven mutant TP53 STK11, manifests two subclones: one associated EGFR amplification, one KEAP1 mutation. Upon chemo-immunotherapy (leaves mutational signature), KRAS-driven subclone drives relapse, whereas two subclones eradicated treatment. Upon second line chemotherapy (leave mutational signature), resistance driven aquired amplification mutant KRAS allele. SPN06 profiled three time-points, treatment relapse treatment. two diagnostic biopsies polyclonal, whereas relapse biopsies monoclonal.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/articles/SCOUT.html","id":"spn07","dir":"Articles","previous_headings":"Simulated tumours","what":"SPN07","title":"SCOUT","text":"SPN07 SPN06 prototype glioblastoma 6 clones compete time single line treatment. main clonal population driven inactivated PTEN (mutation LOH), manifests two subclones: one associated ATRX1 mutation, one NF1 mutation. Upon chemotherapy timolozomide (causes MSH6 mutation microsatellite instability), resistance achieved hypermutant subclone. Within relapse clone, extra subclone emerges due TP53 mutation. SPN07 profiled two time-points, treatment relapse treatment. three diagnostic two relapse biopsies polyclonal.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/articles/custom_engine.html","id":"customizing-the-mutation-engine","dir":"Articles","previous_headings":"","what":"Customizing the mutation engine","title":"Customizing mutation engine","text":"convient way invoke MutationEngine() using parameter setup_code (see vignette[\"mutations\"]), cases custom set-required. cases, function MutationEngine() can called specifying name set-directory, path URL reference sequence, signature files, driver mutation file, passenger CNAs file, germline data directory.","code":"library(\"ProCESS\")  reference_url <- paste0(\"https://ftp.ensembl.org/pub/grch37/release-111/\",                         \"fasta/homo_sapiens/dna/Homo_sapiens.GRCh37.\",                         \"dna.chromosome.22.fa.gz\")  sbs_url <- paste0(\"https://cancer.sanger.ac.uk/signatures/documents/2123/\",                   \"COSMIC_v3.4_SBS_GRCh37.txt\")  indel_url <- paste0(\"https://cancer.sanger.ac.uk/signatures/documents/\",                     \"2121/COSMIC_v3.4_ID_GRCh37.txt\")  drivers_url <- paste0(\"https://raw.githubusercontent.com/\",                       \"caravagnalab/ProCESS/main/inst/extdata/\",                       \"driver_mutations_hg19.csv\")  passenger_cnas_url <- paste0(\"https://raw.githubusercontent.com/\",                              \"caravagnalab/ProCESS/main/inst/extdata/\",                              \"passenger_CNAs_hg19.csv\")  germline_url <- paste0(\"https://zenodo.org/records/13166780/files/\",                        \"germline_data_demo.tar.gz\")  # build a mutation engine and place all the files in the directory \"Test\" m_engine <- MutationEngine(directory = \"Test\",                            reference_src = reference_url,                            SBS_signatures_src = sbs_url,                            indel_signatures_src = indel_url,                            drivers_src = drivers_url,                            passenger_CNAs_src = passenger_cnas_url,                            germline_src = germline_url) #> Downloading reference genome... #> Reference genome downloaded #> Decompressing reference file...done #> Downloading SBS file... #> SBS file downloaded #> Downloading indel file... #> indel file downloaded #> Downloading driver mutation file... #> Driver mutation file downloaded #> Downloading passenger CNAs file... #> Passenger CNAs file downloaded #> Downloading germline mutations... #> Germline mutations downloaded #> Building context index... #>  [█---------------------------------------] 0% [00m:00s] Processing chr. 22 [█████████████---------------------------] 32% [00m:01s] Processing chr. 22 [███████████████████████-----------------] 57% [00m:03s] Processing chr. 22 [████████████████████████████████████----] 89% [00m:04s] Processing chr. 22 [████████████████████████████████████████] 100% [00m:04s] Context index built #>  [█---------------------------------------] 0% [00m:00s] Saving context index [████████████████████████████████████████] 100% [00m:00s] Context index saved #> done #> Building repeated sequence index... #>  [█---------------------------------------] 0% [00m:00s] Processing chr. 22 [█---------------------------------------] 0% [00m:00s] Processing chr. 22 [█---------------------------------------] 0% [00m:04s] Processing chr. 22 [█---------------------------------------] 0% [00m:07s] Processing chr. 22 [█---------------------------------------] 0% [00m:09s] Processing chr. 22 [█---------------------------------------] 0% [00m:11s] Processing chr. 22 [█---------------------------------------] 0% [00m:13s] Processing chr. 22 [█---------------------------------------] 0% [00m:17s] Processing chr. 22 [████████████████████████████████████████] 100% [00m:17s] RS index built #>  [█---------------------------------------] 0% [00m:00s] Saving RS index [█---------------------------------------] 0% [00m:01s] Saving RS index [████████████████████████████------------] 68% [00m:02s] Saving RS indexdone #>  [████████████████████████████████████████] 100% [00m:02s] RS index saved #>  [█---------------------------------------] 0% [00m:00s] Loading germline [████████████████████████████████████████] 100% [00m:00s] Germline loaded #>  [█---------------------------------------] 0% [00m:00s] Saving germline [████████████████████████████████████████] 100% [00m:00s] Germline saved  dir.exists(\"Test\") #> [1] TRUE"},{"path":"https://caravagnalab.github.io/ProCESS/articles/custom_engine.html","id":"the-context-index","dir":"Articles","previous_headings":"Customizing the mutation engine","what":"The Context Index","title":"Customizing mutation engine","text":"SBS signatures fixes, every possible context (.e., triplet consetutive nucleotides), probability SNV occur context (see (Alexandrov et al. 2020)). Hence, function MutationEngine() builds context index reference sequence place SNVs forest cells. complete context index sequence whose size 4Gbps takes 4 times length sequence memory disk 4 bytes per nucleotide required store context position. instance, complete contex index human genome takes 12GBytes. order avoid requirement memory disk space, MutationEngine() allows sample reference genome contexts stores context index. achieved optional parameter context_sampling specifies many occurences context must identified adding one context index. larger number context sampling, larger context index. side, lower number context sampling, lower number sites refernce genome can affected simulated mutations. context_sampling set 100 default, can specified MutationEngine() call. Let us rebuild context index sampling one context every 50. call uses already downloaded data directory \"demo\" build context produces file \"demo/context_index_50.cif\".","code":"m_engine <- MutationEngine(setup_code = \"demo\") #> Downloading reference genome... #> Reference genome downloaded #> Decompressing reference file...done #> Downloading SBS file... #> SBS file downloaded #> Downloading indel file... #> indel file downloaded #> Downloading driver mutation file... #> Driver mutation file downloaded #> Downloading passenger CNAs file... #> Passenger CNAs file downloaded #> Downloading germline mutations... #> Germline mutations downloaded #> Building context index... #>  [█---------------------------------------] 0% [00m:00s] Processing chr. 22 [█████████████████-----------------------] 40% [00m:01s] Processing chr. 22 [█████████████████████████████████-------] 81% [00m:02s] Processing chr. 22 [████████████████████████████████████████] 100% [00m:02s] Context index built #>  [█---------------------------------------] 0% [00m:00s] Saving context index [████████████████████████████████████████] 100% [00m:00s] Context index saved #> done #> Building repeated sequence index... #>  [█---------------------------------------] 0% [00m:00s] Processing chr. 22 [█---------------------------------------] 0% [00m:03s] Processing chr. 22 [█---------------------------------------] 0% [00m:04s] Processing chr. 22 [█---------------------------------------] 0% [00m:05s] Processing chr. 22 [█---------------------------------------] 0% [00m:06s] Processing chr. 22 [█---------------------------------------] 0% [00m:08s] Processing chr. 22 [█---------------------------------------] 0% [00m:11s] Processing chr. 22 [████████████████████████████████████████] 100% [00m:11s] RS index built #>  [█---------------------------------------] 0% [00m:00s] Saving RS index [█---------------------------------------] 0% [00m:01s] Saving RS index [█████████████████████████████-----------] 71% [00m:02s] Saving RS indexdone #>  [████████████████████████████████████████] 100% [00m:02s] RS index saved #>  [█---------------------------------------] 0% [00m:00s] Loading germline [████████████████████████████████████████] 100% [00m:00s] Germline loaded #>  [█---------------------------------------] 0% [00m:00s] Saving germline [████████████████████████████████████████] 100% [00m:00s] Germline saved  # get the size of the context index when `context_sampling` is 100 utils:::format.object_size(file.size(\"demo/context_index_100.cif\"), \"auto\") #> [1] \"1,3 Mb\" # building a mutation engine by using the \"demo\" set-up configuration # and setting context_sampling to 50 m_engine <- MutationEngine(setup_code = \"demo\", context_sampling = 50) #> Building context index... #>  [█---------------------------------------] 0% [00m:00s] Processing chr. 22 [█████████████████-----------------------] 40% [00m:01s] Processing chr. 22 [█████████████████████████████████-------] 81% [00m:02s] Processing chr. 22 [████████████████████████████████████████] 100% [00m:02s] Context index built #>  [█---------------------------------------] 0% [00m:00s] Saving context index [████████████████████████████████████████] 100% [00m:00s] Context index saved #> done #>  [█---------------------------------------] 0% [00m:00s] Loading RS index [█████████████████-----------------------] 41% [00m:01s] Loading RS index [████████████████████████████████--------] 79% [00m:02s] Loading RS index [████████████████████████████████████████] 100% [00m:02s] RS index loaded #>  [█---------------------------------------] 0% [00m:00s] Loading germline [████████████████████████████████████████] 100% [00m:00s] Germline loaded # get the size of the context index when `context_sampling` is 50 utils:::format.object_size(file.size(\"demo/context_index_50.cif\"), \"auto\") #> [1] \"2,7 Mb\""},{"path":"https://caravagnalab.github.io/ProCESS/articles/custom_engine.html","id":"the-repeated-sequence-index","dir":"Articles","previous_headings":"Customizing the mutation engine","what":"The Repeated Sequence Index","title":"Customizing mutation engine","text":"Analoguosly SBS signatures, ID (indel) signatures fixes, kinds repeated sequences, probability indel occur (see (Alexandrov et al. 2020)). Thus, MutationEngine function also builds index repeated sequences reference. case SBS signatures, ID signatures can memory eager. mitigate memory requirement, function MutationEngine() accepts parameters maximum size considered indel (parameter max_index_size) maximum number reference position stored per repetition type (parameter max_repetition_storage). larger two parameters, larger repetition index. far building time concerns, larger max_index_size, longer takes index construction. contrary, max_repetition_storage directly affects computation time. default, two parameters set 50 500000, respectively. However, values can specified MutationEngine() call. Let us rebuild context index sampling one context every 50. call uses already downloaded data directory \"demo\" build repeated sequence index produces file \"demo/rs_index_50_10000000.rsif\".","code":"# get the size of the repeated index when the default parameter values # are used utils:::format.object_size(file.size(\"demo/rs_index_50_500000.rsif\"), \"auto\") #> [1] \"212,5 Mb\" # building a mutation engine by using the \"demo\" set-up configuration # and setting max_repetition_storage to 10,000,000 m_engine <- MutationEngine(setup_code = \"demo\",                            max_repetition_storage = 10000000) #>  [█---------------------------------------] 0% [00m:00s] Loading context index [████████████████████████████████████████] 100% [00m:00s] Context index loaded #> Building repeated sequence index... #>  [█---------------------------------------] 0% [00m:00s] Processing chr. 22 [█---------------------------------------] 0% [00m:03s] Processing chr. 22 [█---------------------------------------] 0% [00m:06s] Processing chr. 22 [█---------------------------------------] 0% [00m:07s] Processing chr. 22 [█---------------------------------------] 0% [00m:09s] Processing chr. 22 [█---------------------------------------] 0% [00m:12s] Processing chr. 22 [█---------------------------------------] 0% [00m:16s] Processing chr. 22 [████████████████████████████████████████] 100% [00m:16s] RS index built #>  [█---------------------------------------] 0% [00m:00s] Saving RS index [█---------------------------------------] 0% [00m:00s] Saving RS index [█---------------------------------------] 0% [00m:01s] Saving RS index [█---------------------------------------] 0% [00m:02s] Saving RS index [█---------------------------------------] 0% [00m:03s] Saving RS index [███-------------------------------------] 5% [00m:05s] Saving RS index [█████████████---------------------------] 31% [00m:06s] Saving RS index [████████████████████████----------------] 58% [00m:07s] Saving RS index [██████████████████████████████████------] 83% [00m:08s] Saving RS indexdone #>  [████████████████████████████████████████] 100% [00m:08s] RS index saved #>  [█---------------------------------------] 0% [00m:00s] Loading germline [████████████████████████████████████████] 100% [00m:00s] Germline loaded # get the size of the context index when `context_sampling` is 50 utils:::format.object_size(file.size(\"demo/rs_index_50_10000000.rsif\"),                            \"auto\") #> [1] \"732,1 Mb\""},{"path":"https://caravagnalab.github.io/ProCESS/articles/growth_models.html","id":"homogeneous-growth","dir":"Articles","previous_headings":"","what":"Homogeneous Growth","title":"Growth Models","text":"First need create new SpatialSimulation object set border_growth_model FALSE. Add mutant epigenetic state, let simulation evolve 1300 cells species +, take two samples, let simulation evolve 15 time units. Add new mutant “B”, let one cells “” generate cell “B”, let simulation evolve 5000 cells “B+”, take two samples. Let us look simulated tissue plot simulation Muller plot.   Finally, let us build ancestor forest samples.  use special highlight parameter add edges connecting cells sample.","code":"library(ProCESS)  set.seed(0)  sim <- SpatialSimulation(\"Homogeneous Growth\")  # Set the homogeneous growth model sim$border_growth_model <- FALSE  # Set the death activation level to avoid drift sim$death_activation_level <- 50 # Add a mutant sim$add_mutant(name = \"A\",                epigenetic_rates = c(\"+-\" = 0.01, \"-+\" = 0.01),                growth_rates = c(\"+\" = 0.1, \"-\" = 0.08),                death_rates = c(\"+\" = 0.1, \"-\" = 0.01))  sim$place_cell(\"A+\", 500, 500)  # Let the simulation evolve until \"A+\" consists of 1300 cells sim$run_up_to_size(\"A+\", 1300) #>  [████████████████████████████████████████] 100% [00m:00s] Saving snapshot  bbox_width <- 15  # Takes two samples sim$sample_cells(\"S_1_1\",                  bottom_left = c(480, 480),                  top_right = c(480 + bbox_width, 480 + bbox_width))  sim$sample_cells(\"S_1_2\",                  bottom_left = c(500, 500),                  top_right = c(500 + bbox_width, 500 + bbox_width))  # Let the simulation evolve again for 15 time units sim$run_up_to_time(sim$get_clock() + 15) #>  [████████████████████████████████████████] 100% [00m:00s] Saving snapshot sim$add_mutant(name = \"B\",                epigenetic_rates = c(\"+-\" = 0.05, \"-+\" = 0.1),                growth_rates = c(\"+\" = 0.8, \"-\" = 0.3),                death_rates = c(\"+\" = 0.05, \"-\" = 0.05))  sim$mutate_progeny(sim$choose_cell_in(\"A\"), \"B\")  sim$run_up_to_size(\"B+\", 5000) #>  [████████████████████████████████████████] 100% [00m:00s] Saving snapshot  ncells <- 0.9 * bbox_width * bbox_width  bbox <- sim$search_sample(c(\"B\" = ncells), bbox_width, bbox_width) sim$sample_cells(\"S_2_1\", bbox$lower_corner, bbox$upper_corner)  bbox <- sim$search_sample(c(\"A\" = ncells), bbox_width, bbox_width) sim$sample_cells(\"S_2_2\", bbox$lower_corner, bbox$upper_corner) plot_tissue(sim, num_of_bins = 500) plot_muller(sim) library(dplyr) #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union  forest <- sim$get_samples_forest()  plot_forest(forest) %>%   annotate_forest(forest) plot_forest(forest, highlight = \"S_1_1\") %>%   annotate_forest(forest) plot_forest(forest, highlight = \"S_1_2\") %>%   annotate_forest(forest) plot_forest(forest, highlight = \"S_2_1\") %>%   annotate_forest(forest) plot_forest(forest, highlight = \"S_2_2\") %>%   annotate_forest(forest)"},{"path":"https://caravagnalab.github.io/ProCESS/articles/growth_models.html","id":"border-growth","dir":"Articles","previous_headings":"","what":"“Border” Growth","title":"Growth Models","text":"now build spatial simulation use “border” growth model. Let us repeat homogeneous growth model example. Let us look simulated tissue plot simulation Muller plot.   , let us build ancestor forest samples.  use special highlight parameter add edges connecting cells sample.     easy see differences analoguous plots examples. First , cancer growth slower subject “border”-growth model homogeneous-growth model used. due fact internal cells duplicate former growth model, thus, number cells active duplication always greater , homogeneous-growth model. Moreover, spatial closeness closeness samples ancestor forest strictly related “border” growth model, whereas appear loosely related homogeneous growth model. features can easily spotted forest plots sample S_2_1 selected near external tumour border.","code":"set.seed(0)  sim <- SpatialSimulation(\"Border Growth\")  # Setting the \"border\" growth model is not needed as the # border growth model is the default. sim$border_growth_model #> [1] TRUE  # Set the death activation level to avoid drift sim$death_activation_level <- 50 # Add a mutant sim$add_mutant(name = \"A\",                epigenetic_rates = c(\"+-\" = 0.01, \"-+\" = 0.01),                growth_rates = c(\"+\" = 0.1, \"-\" = 0.08),                death_rates = c(\"+\" = 0.1, \"-\" = 0.01))  sim$place_cell(\"A+\", 500, 500)  # Let the simulation evolve until \"A+\" consists of 1300 cells sim$run_up_to_size(\"A+\", 1300) #>  [████████████████████████████------------] 69% [00m:00s] Cells: 22848 [███████████████████████████████████████-] 96% [00m:01s] Cells: 33782 [████████████████████████████████████████] 100% [00m:01s] Saving snapshot  bbox_width <- 15  # Takes two samples sim$sample_cells(\"S_1_1\",                  bottom_left = c(480, 480),                  top_right = c(480 + bbox_width, 480 + bbox_width))  sim$sample_cells(\"S_1_2\",                  bottom_left = c(500, 500),                  top_right = c(500 + bbox_width, 500 + bbox_width))  # Let the simulation evolve again for 15 time units sim$run_up_to_time(sim$get_clock() + 15) #>  [████████████████████████████████████████] 100% [00m:00s] Saving snapshot  # Add a new mutant sim$add_mutant(name = \"B\",                epigenetic_rates = c(\"+-\" = 0.05, \"-+\" = 0.1),                growth_rates = c(\"+\" = 0.8, \"-\" = 0.3),                death_rates = c(\"+\" = 0.05, \"-\" = 0.05))   # Let one of the \"A\" cells generate a cell in \"B\" sim$mutate_progeny(sim$choose_cell_in(\"A\"), \"B\")  # Let the simulation evolve until \"B+\" consists of 5000 cells sim$run_up_to_size(\"B+\", 5000) #>  [█████████████████████████---------------] 61% [00m:00s] Cells: 65594 [████████████████████████████████████████] 100% [00m:00s] Saving snapshot  ncells <- 0.9 * bbox_width * bbox_width  bbox <- sim$search_sample(c(\"B\" = ncells), bbox_width, bbox_width) sim$sample_cells(\"S_2_1\", bbox$lower_corner, bbox$upper_corner)  bbox <- sim$search_sample(c(\"A\" = ncells), bbox_width, bbox_width) sim$sample_cells(\"S_2_2\", bbox$lower_corner, bbox$upper_corner) plot_tissue(sim, num_of_bins = 500) plot_muller(sim) forest <- sim$get_samples_forest()  plot_forest(forest) %>%   annotate_forest(forest) plot_forest(forest, highlight = \"S_1_1\") %>%   annotate_forest(forest) plot_forest(forest, highlight = \"S_1_2\") %>%   annotate_forest(forest) plot_forest(forest, highlight = \"S_2_1\") %>%   annotate_forest(forest) plot_forest(forest, highlight = \"S_2_2\") %>%   annotate_forest(forest)"},{"path":"https://caravagnalab.github.io/ProCESS/articles/mutations.html","id":"setting-up-mutation-engine","dir":"Articles","previous_headings":"","what":"Setting Up Mutation Engine","title":"Simulating Mutations","text":"creation object type MutationEngine requires download reference sequence signature files build corresponding two signature indices. function MutationEngine() performs steps single call. function quite flexible allows customize mutation engine many ways. However, vast majority ProCESS users aim standard setup instance involving human genome. , ProCESS provides predefined setups. list can obtained invoking function get_mutation_engine_codes(). Let us build MutationEngine using \"demo\" setup. call creates directory demo, downloads data required mutation engine, builds . execution function MutationEngine() may takes time, meant performed one , long user need change reference genome signature files, required. spirit, call function MutationEngine checks whether building process sub-tasks really needed , case, avoids performs .","code":"library(ProCESS)  get_mutation_engine_codes() #>     name           description #> 1 GRCh37 Homo sapiens (GRCh37) #> 2 GRCh38 Homo sapiens (GRCh38) #> 3   demo  A demostative set-up # building a mutation engine by using the \"demo\" setup m_engine <- MutationEngine(setup_code = \"demo\") #> Downloading reference genome... #> Reference genome downloaded #> Decompressing reference file...done #> Downloading SBS file... #> SBS file downloaded #> Downloading indel file... #> indel file downloaded #> Downloading driver mutation file... #> Driver mutation file downloaded #> Downloading passenger CNAs file... #> Passenger CNAs file downloaded #> Downloading germline mutations... #> Germline mutations downloaded #> Building context index... #>  [█---------------------------------------] 0% [00m:00s] Processing chr. 22 [█████████████---------------------------] 32% [00m:01s] Processing chr. 22 [███████████████████████-----------------] 57% [00m:02s] Processing chr. 22 [████████████████████████████████████----] 89% [00m:03s] Processing chr. 22 [████████████████████████████████████████] 100% [00m:04s] Context index built #>  [█---------------------------------------] 0% [00m:00s] Saving context index [████████████████████████████████████████] 100% [00m:00s] Context index saved #> done #> Building repeated sequence index... #>  [█---------------------------------------] 0% [00m:00s] Processing chr. 22 [█---------------------------------------] 0% [00m:00s] Processing chr. 22 [█---------------------------------------] 0% [00m:06s] Processing chr. 22 [█---------------------------------------] 0% [00m:07s] Processing chr. 22 [█---------------------------------------] 0% [00m:09s] Processing chr. 22 [█---------------------------------------] 0% [00m:10s] Processing chr. 22 [█---------------------------------------] 0% [00m:18s] Processing chr. 22 [█---------------------------------------] 0% [00m:22s] Processing chr. 22 [████████████████████████████████████████] 100% [00m:22s] RS index built #>  [█---------------------------------------] 0% [00m:00s] Saving RS index [█---------------------------------------] 0% [00m:01s] Saving RS index [█████████████████████████---------------] 61% [00m:02s] Saving RS indexdone #>  [████████████████████████████████████████] 100% [00m:02s] RS index saved #>  [█---------------------------------------] 0% [00m:00s] Loading germline [████████████████████████████████████████] 100% [00m:00s] Germline loaded #>  [█---------------------------------------] 0% [00m:00s] Saving germline [████████████████████████████████████████] 100% [00m:00s] Germline saved  m_engine #> MutationEngine #>  Passenger rates #>  #>  Driver mutations #>  #>  Timed Exposure #>    SBS Timed Exposures #>  #>    indel Timed Exposures dir.exists(\"demo\") #> [1] TRUE  list.files(\"demo\") #>  [1] \"context_index_100.cif\"     \"drivers.txt\"               #>  [3] \"germline_data\"             \"germline_data_demo.tar.gz\" #>  [5] \"indel_signatures.txt\"      \"passenger_CNAs.txt\"        #>  [7] \"reference.fasta\"           \"rs_index_50_500000.rsif\"   #>  [9] \"SBS_signatures.txt\"        \"sources.csv\" # building a mutation engine by using the \"demo\" set-up configuration m_engine <- MutationEngine(setup_code = \"demo\") #>  [█---------------------------------------] 0% [00m:00s] Loading context index [████████████████████████████████████████] 100% [00m:00s] Context index loaded #>  [█---------------------------------------] 0% [00m:00s] Loading RS index [████████████████------------------------] 39% [00m:01s] Loading RS index [███████████████████████████████---------] 76% [00m:02s] Loading RS index [████████████████████████████████████████] 100% [00m:02s] RS index loaded #>  [█---------------------------------------] 0% [00m:00s] Loading germline [████████████████████████████████████████] 100% [00m:00s] Germline loaded"},{"path":"https://caravagnalab.github.io/ProCESS/articles/mutations.html","id":"mutant-genetic-characterization","dir":"Articles","previous_headings":"Setting Up Mutation Engine","what":"Mutant Genetic Characterization","title":"Simulating Mutations","text":"mutation engine built, can define mutant genotype declare species mutation rates. Let us consider simulation peformed Section “Two populations epigenetic state” vignette(\"sampling\"). involves two mutants “B”. two possible epigenetic states, + -, leading four species +, -, B+, B-, respectively. species passenger mutation rate must declated mutation engine labeling samples forest. Let 1e-9, 3e-8, 8e-7, 5e-8 passenger SNV rates species +, -, B+, B-, respectively. Let indel rates 0 species, + indel rate 1e-8. Furthermore, let 0, 1e-11, 0, 0 passenger CNA rates species, respectively. two mutants may also genetically characterized driver mutations. driver mutations associated mutants must occur cell belonging mutant . Hence, must declared mutant engine labeling. method MutationEngine$add_mutant() takes care declarations. sake example, let us assume characterized one driver mutation chromosome 22, B three driver mutations chromosome. genetic specification mutant can declared follows. code, driver CNAs, SNVs, indels declared calling functions CNA(), SNV(), Mutation(), respectively. function allow specify allele mutation must lay. mutant also characterized whole genome doubling (WGD): genomic event simultaneously duplicates chromosome alleles. driver mutations applied according specification order. instance, following two pieces code specify two different genomic characterizations mutant E. former snippet places SNV , afterwards, duplicates alleles producing genome two alleles contain placed SNV. Instead, latter snippet requires whole genome doubling event , , places SNV yielding single occurrence SNV final genome. far SNVs indels concern, ProCESS provides users compact , sometimes, convenient approach. mutation engine stores list known driver mutations labels code can used mutant declaration. corresponding data frame can obtained using method MutationEngine$get_known_drivers(). code known driver mutations can used place full specification follows.","code":"# add the mutant \"A\" characterized by one driver SNV on the allele 1 of # chromosome 22, one indel deletion on the same chromosome, two CNAs (a # deletion on the allele 1 of chromosome 22 and an amplification on a random # allele of the same chromosome) and, finally, a whole genome doubling event # (WGD). The mutant has two epigenetic states and its species \"A+\" and \"A-\" # have passenger SNV rates 1e-9 and 3e-8, respectively, passenger indel rates # 1e-10 and 0, respectively, and passenger CNA rates 0 and 1e-11, respectively. m_engine$add_mutant(mutant_name = \"A\",                     passenger_rates = list(\"+\" = c(SNV = 1e-9, indel = 1e-8),                                            \"-\" = c(SNV = 3e-8, CNA = 1e-11)),                     drivers = list(SNV(\"22\", 10510210, \"C\", allele = 1),                                    Mutation(\"22\", 15220157, \"GTTTTTTTT\", \"G\"),                                    CNA(type = \"A\", chr = \"22\",                                        chr_pos = 10303470, len = 200000),                                    CNA(\"D\", \"22\", 5010000, 200000,                                        allele = 1),                                    WGD)) #>  [█---------------------------------------] 0% [00m:00s] Retrieving \"A\" SNVs [█---------------------------------------] 0% [00m:00s] Found 22 [█---------------------------------------] 0% [00m:00s] Reading 22 [█---------------------------------------] 0% [00m:01s] Reading 22 [████████████████████████████████████████] 100% [00m:01s] \"A\" SNVs retrieved  m_engine #> MutationEngine #>  Passenger rates #>    \"A+\": {SNV: 1e-09, indel: 1e-08} #>    \"A-\": {SNV: 3e-08, CNA: 1e-11} #>  #>  Driver mutations #>    \"A\": #>        chr22(10510210)[N>C](allele: 1) #>        chr22(15220157)[GTTTTTTTT>G](allele: random) #>        CNA(\"A\",chr22(10303470), len: 200000) #>        CNA(\"D\",chr22(5010000), len: 200000, allele: 1) #>        Whole genome duplication #>  #>  Timed Exposure #>    SBS Timed Exposures #>  #>    indel Timed Exposures m_engine$add_mutant(\"E\", passenger_rates,                     drivers = list(SNV(\"22\", 10510210, \"C\", allele = 1),                                    WGD)) m_engine$add_mutant(\"E\", passenger_rates,                     drivers = list(WGD,                                    SNV(\"22\", 10510210, \"C\", allele = 1))) library(dplyr) #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union  m_engine$get_known_drivers() %>% filter(chr == \"22\") #>   chr     from       to ref alt mutation_type tumour_type driver_gene #> 1  22 30057302 30057302   C   T           SNV          OV         NF2 #> 2  22 30057302 30057302   C   T           SNV          OV         NF2 #>   driver_code #> 1   NF2 R221* #> 2   NF2 R262* # add the mutant \"B\" characterized by two driver SNVs on chromosome 22 (no # CNA) and two epigenetic states. The first SNV is \"NF2 R221*\" and it must  # lay in the allele 1. The remaining SNV is specified by using the SNV function # as done above. The species \"B+\" and \"B-\" have passenger SNV rates 8e-8 # and 5e-8, respectively, and CNA rates 0 for both species. m_engine$add_mutant(\"B\", list(\"+\" = c(SNV = 8e-8), \"-\" = c(SNV = 5e-8)),                     list(list(\"NF2 R221*\", allele = 1),   # the first SNV                          SNV(\"22\", 12028576, \"G\")))       # the second SNV #>  [█---------------------------------------] 0% [00m:00s] Retrieving \"B\" SNVs [█---------------------------------------] 0% [00m:00s] Found 22 [█---------------------------------------] 0% [00m:00s] Reading 22 [█---------------------------------------] 0% [00m:01s] Reading 22 [████████████████████████████████████████] 100% [00m:01s] \"B\" SNVs retrieved  m_engine #> MutationEngine #>  Passenger rates #>    \"A+\": {SNV: 1e-09, indel: 1e-08} #>    \"A-\": {SNV: 3e-08, CNA: 1e-11} #>    \"B+\": {SNV: 8e-08} #>    \"B-\": {SNV: 5e-08} #>  #>  Driver mutations #>    \"A\": #>        chr22(10510210)[N>C](allele: 1) #>        chr22(15220157)[GTTTTTTTT>G](allele: random) #>        CNA(\"A\",chr22(10303470), len: 200000) #>        CNA(\"D\",chr22(5010000), len: 200000, allele: 1) #>        Whole genome duplication #>    \"B\": #>        chr22(30057302)[C>T](allele: 1) #>        chr22(12028576)[N>G](allele: random) #>  #>  Timed Exposure #>    SBS Timed Exposures #>  #>    indel Timed Exposures"},{"path":"https://caravagnalab.github.io/ProCESS/articles/mutations.html","id":"mutational-exposures","dir":"Articles","previous_headings":"Setting Up Mutation Engine","what":"Mutational Exposures","title":"Simulating Mutations","text":"probability mutation occur depends genomic environmental context. signature mutation probability distribution mutation contexts mutation structure. SBS (single base substitution) signatures provide genomic context (.e., triplet bases) probability SNV occur context. contrary, ID (indel) signatures associates probability indel length structure (see (Alexandrov et al. 2020)). signature depends environmental context , , one signature may active time different probabilities. mutational exposure (exposure) discrete probability distribution among signatures. order simulate passeger mutations given type, need specify default exposure type. can achieved follows. exposures can also defined specifying activation time , .e., new exposures used specified time next exposure change. default exposures simultaneous changes SNV ID exposures can specified sigle call function MutationEngine$add_exposure() follows.","code":"# add SNV and indel default exposures. This will be used from simulated time 0 # up to the successive exposure change. m_engine$add_exposure(coefficients = c(SBS13 = 0.2, SBS1 = 0.8)) m_engine$add_exposure(c(ID2 = 0.6, ID13 = 0.2, ID21 = 0.2)) # add a new SNV exposure that will be used from simulated # time 100 up to the successive exposure change. m_engine$add_exposure(time = 100, c(SBS5 = 0.3, SBS2 = 0.2, SBS3 = 0.5))  m_engine #> MutationEngine #>  Passenger rates #>    \"A+\": {SNV: 1e-09, indel: 1e-08} #>    \"A-\": {SNV: 3e-08, CNA: 1e-11} #>    \"B+\": {SNV: 8e-08} #>    \"B-\": {SNV: 5e-08} #>  #>  Driver mutations #>    \"A\": #>        chr22(10510210)[N>C](allele: 1) #>        chr22(15220157)[GTTTTTTTT>G](allele: random) #>        CNA(\"A\",chr22(10303470), len: 200000) #>        CNA(\"D\",chr22(5010000), len: 200000, allele: 1) #>        Whole genome duplication #>    \"B\": #>        chr22(30057302)[C>T](allele: 1) #>        chr22(12028576)[N>G](allele: random) #>  #>  Timed Exposure #>    SBS Timed Exposures #>      [0, 100[: {\"SBS1\": 0.8, \"SBS13\": 0.2} #>      [100, ∞[: {\"SBS2\": 0.2, \"SBS3\": 0.5, \"SBS5\": 0.3} #>  #>    indel Timed Exposures #>      [0, ∞[: {\"ID13\": 0.2, \"ID2\": 0.6, \"ID21\": 0.2} m_engine$add_exposure(time = 120, c(SBS5 = 0.3, SBS2 = 0.2, SBS3 = 0.5,                                     ID1 = 0.8, ID9 = 0.2))  m_engine #> MutationEngine #>  Passenger rates #>    \"A+\": {SNV: 1e-09, indel: 1e-08} #>    \"A-\": {SNV: 3e-08, CNA: 1e-11} #>    \"B+\": {SNV: 8e-08} #>    \"B-\": {SNV: 5e-08} #>  #>  Driver mutations #>    \"A\": #>        chr22(10510210)[N>C](allele: 1) #>        chr22(15220157)[GTTTTTTTT>G](allele: random) #>        CNA(\"A\",chr22(10303470), len: 200000) #>        CNA(\"D\",chr22(5010000), len: 200000, allele: 1) #>        Whole genome duplication #>    \"B\": #>        chr22(30057302)[C>T](allele: 1) #>        chr22(12028576)[N>G](allele: random) #>  #>  Timed Exposure #>    SBS Timed Exposures #>      [0, 100[: {\"SBS1\": 0.8, \"SBS13\": 0.2} #>      [100, 120[: {\"SBS2\": 0.2, \"SBS3\": 0.5, \"SBS5\": 0.3} #>      [120, ∞[: {\"SBS2\": 0.2, \"SBS3\": 0.5, \"SBS5\": 0.3} #>  #>    indel Timed Exposures #>      [0, 120[: {\"ID13\": 0.2, \"ID2\": 0.6, \"ID21\": 0.2} #>      [120, ∞[: {\"ID1\": 0.8, \"ID9\": 0.2}"},{"path":"https://caravagnalab.github.io/ProCESS/articles/mutations.html","id":"passenger-cnas-and-tumour-type","dir":"Articles","previous_headings":"Setting Up Mutation Engine","what":"Passenger CNAs and Tumour Type","title":"Simulating Mutations","text":"passenger CNAs applied simulation depend tumour type. type tumour can specified building mutation engine using parameters tumour_type tumour_study. instance, passenger CNAs file used build mutation engine contains data identified breast carcinoma UK, specific CNA can applied simulation follows. complete list available tumour types studies set-can obtained using function get_available_tumours_in().","code":"m_engine <- MutationEngine(setup_code = \"demo\",                            tumour_type = \"BRCA\",                            tumour_study = \"UK\") get_available_tumours_in(setup_code = \"demo\") %>% head() #>   type study #> 1 BLCA    US #> 2 BOCA    UK #> 3 BRCA    EU #> 4 BRCA    UK #> 5 BRCA    US #> 6 BTCA    SG"},{"path":"https://caravagnalab.github.io/ProCESS/articles/mutations.html","id":"germline-mutations","dir":"Articles","previous_headings":"Setting Up Mutation Engine","what":"Germline Mutations","title":"Simulating Mutations","text":"ProCESS allows users apply germline mutations one subjects available germline data provided building mutation engine. feature enable users simulate specific cancer type’s evolution individual desired gender ethnicity. available subjects, together sex ethnicity, can obtained using method [MutationEngine$get_germline_subjects()]. column sample contains names available subjects. columns pop super_pop report subjects’ population super-population codes. last column, gender, includes subject gender. method MutationEngine$get_population_descriptions() clarifies meaning codes reported pop columns. method MutationEngine$get_active_germline() returns active germline subject. Users can change germline subject using method MutationEngine$set_germline_subject(). subject selected first time, ProCESS builds binary representation subject genome, saving future use. step may take minutes. However, successive selections subject directly load binary file.","code":"subjects <- m_engine$get_germline_subjects()  subjects #>    sample pop super_pop gender #> 1 NA18941 JPT       EAS female #> 2 NA20513 TSI       EUR   male m_engine$get_population_descriptions() #>    code          description #> 1   CHB          Han Chinese #> 2   JPT             Japanese #> 3   CHS Southern Han Chinese #> 4   CDX          Dai Chinese #> 5   KHV      Kinh Vietnamese #> 6   CHD       Denver Chinese #> 7   CEU                 CEPH #> 8   TSI               Tuscan #> 9   GBR              British #> 10  FIN              Finnish #> 11  IBS              Spanish #> 12  YRI               Yoruba #> 13  LWK                Luhya #> 14  GWD              Gambian #> 15  MSL                Mende #> 16  ESN                 Esan #> 17  ASW  African-American SW #> 18  ACB    African-Caribbean #> 19  MXL     Mexican-American #> 20  PUR         Puerto Rican #> 21  CLM            Colombian #> 22  PEL             Peruvian #> 23  GIH             Gujarati #> 24  PJL              Punjabi #> 25  BEB              Bengali #> 26  STU           Sri Lankan #> 27  ITU               Indian #>                                                      long.description #> 1                                       Han Chinese in Beijing, China #> 2                                            Japanese in Tokyo, Japan #> 3                                                   Han Chinese South #> 4                                 Chinese Dai in Xishuangbanna, China #> 5                                   Kinh in Ho Chi Minh City, Vietnam #> 6                          Chinese in Denver, Colorado (pilot 3 only) #> 7  Utah residents (CEPH) with Northern and Western European ancestry  #> 8                                                  Toscani in Italia  #> 9                                    British in England and Scotland  #> 10                                                Finnish in Finland  #> 11                                      Iberian populations in Spain  #> 12                                          Yoruba in Ibadan, Nigeria #> 13                                             Luhya in Webuye, Kenya #> 14                           Gambian in Western Division, The Gambia  #> 15                                              Mende in Sierra Leone #> 16                                                    Esan in Nigeria #> 17                                  African Ancestry in Southwest US  #> 18                                      African Caribbean in Barbados #> 19                        Mexican Ancestry in Los Angeles, California #> 20                                        Puerto Rican in Puerto Rico #> 21                                    Colombian in Medellin, Colombia #> 22                                             Peruvian in Lima, Peru #> 23                                     Gujarati Indian in Houston, TX #> 24                                        Punjabi in Lahore, Pakistan #> 25                                              Bengali in Bangladesh #> 26                                         Sri Lankan Tamil in the UK #> 27                                            Indian Telugu in the UK m_engine$get_active_germline() #>    sample pop super_pop gender #> 1 NA18941 JPT       EAS female m_engine$set_germline_subject(subjects[2, \"sample\"]) #>  [█---------------------------------------] 0% [00m:00s] Loading germline [████████████████████████████████████████] 100% [00m:00s] Germline loaded #>  [█---------------------------------------] 0% [00m:00s] Saving germline [████████████████████████████████████████] 100% [00m:00s] Germline saved  m_engine$get_active_germline() #>    sample pop super_pop gender #> 1 NA20513 TSI       EUR   male"},{"path":"https://caravagnalab.github.io/ProCESS/articles/mutations.html","id":"building-phylogenetic-forests","dir":"Articles","previous_headings":"","what":"Building Phylogenetic Forests","title":"Simulating Mutations","text":"configurated mutation engine can used label node samples forest mutations. Since mutation engine configurated deal simulation peformed Section “Two populations epigenetic state” vignette(\"sampling\"), can load samples forest file \"samples_forest.sff\" saved article. phylogenetic forest stores mutations labeling sampled cells represented forest leaves. Users can retrieve data using methods PhylogeneticForest$get_sampled_cell_mutations() PhylogeneticForest$get_sampled_cell_CNAs(). method PhylogeneticForest$get_samples_info() analogous DescendantForest$get_samples_info(): returns dataframe containing information forest samples. However, former method adds two columns result latter: “DNA_quantity” “equivalent_normal_cells”. former column reports overall quantity tumoral DNA sample, .e., sum lengths alleles corresponding sample. quantity natural number, nevertheless, stored real number usually usually exceeds largest natural number can natively represented R. column “equivalent_normal_cells” instead contains number normal cells contain much DNA sample tumoral cells. method PhylogeneticForest$get_germline_mutations() returns SNVs indels germline. Users can also identify cell mutation emerged even cell sampled. exposures used placing mutations cells phylogenetic forest can obtained using method PhylogeneticForest$get_exposures(). method MutationEngine$get_bulk_allelic_fragmentation() returns dataframe reporting allelic type per genome fragment. Instead, method MutationEngine$get_cell_allelic_fragmentation() returns allelic fragmentation per cell. details SNV indel signatures adopted evolution available mutation engine can retrieved using methods MutationEngine$get_SNV_signatures() MutationEngine$get_indel_signatures(). Finally, data subject whose germline corresponds wild-type genome phylogenetic forest can obtained method Phylogenetic$get_germline_subject().","code":"samples_forest <- load_samples_forest(\"samples_forest.sff\")  # place mutations on the sample forest assuming 1000 pre-neoplastic SNVs and # 500 indels phylo_forest <- m_engine$place_mutations(samples_forest, 1000, 500) #>  [█---------------------------------------] 0% [00m:00s] Placing mutations [██████████------------------------------] 23% [00m:01s] Placing mutations [███████████████████---------------------] 47% [00m:02s] Placing mutations [█████████████████████████████-----------] 71% [00m:03s] Placing mutations [████████████████████████████████████----] 89% [00m:04s] Placing mutations [████████████████████████████████████████] 100% [00m:04s] Mutations placed  phylo_forest #> PhylogeneticForest #>   # of trees: 1 #>   # of nodes: 18845 #>   # of leaves: 5396 #>   samples: {\"S_1_1\", \"S_1_2\", \"S_2_1\", \"S_2_2\"} #>  #>   # of emerged SNVs and indels: 113353 #>   # of emerged CNAs: 39 library(dplyr)  # select the first mutations among all the mutations occuring in # the genomes of the sampled cells phylo_forest$get_sampled_cell_mutations() %>% head() #>   cell_id chr  chr_pos allele       ref     alt  type cause          class #> 1    2790  22 15220157      0 GTTTTTTTT       G indel     A         driver #> 2    2790  22 16079553      0         G       A   SNV  SBS1 pre-neoplastic #> 3    2790  22 16135375      0         C CAAAAAA indel   ID1 pre-neoplastic #> 4    2790  22 16149260      0         G       A   SNV  SBS1 pre-neoplastic #> 5    2790  22 16200607      0         G       A   SNV  SBS1 pre-neoplastic #> 6    2790  22 16251672      0         C  CTTTTT indel   ID1 pre-neoplastic  # select the first CNAs among all the mutations occuring in # the genomes of the sampled cells phylo_forest$get_sampled_cell_CNAs() %>% head() #>   cell_id type chr    begin      end allele src.allele  class #> 1    2790    A  22 10303470 10503469      2          1 driver #> 2    2790    D  22  5010000  5209999      1         NA driver #> 3    5000    A  22 10303470 10503469      2          1 driver #> 4    5000    D  22  5010000  5209999      1         NA driver #> 5    8774    A  22 10303470 10503469      2          1 driver #> 6    8774    D  22  5010000  5209999      1         NA driver  # get the sampled cells sampled_cells <- phylo_forest$get_nodes() %>%   filter(!is.na(.data$sample))  # show the first of them sampled_cells %>% head() #>   cell_id ancestor mutant epistate sample birth_time #> 1    2790     2694      A        -  S_1_1   127,8854 #> 2    5000     4671      A        -  S_1_2   152,6275 #> 3    8774     8274      A        -  S_1_1   180,3081 #> 4    9651     8069      A        -  S_1_1   185,6496 #> 5   11533     7757      A        -  S_1_1   195,7661 #> 6   12905    12464      A        -  S_1_1   202,1142  # get the identifier of the 3rd cell in `sampled_cells` cell_id <- sampled_cells[3, 1]  # get the SNVs and the indels of the 3rd cell in `sampled_cells` phylo_forest$get_sampled_cell_mutations(cell_id) %>% head() #>   cell_id chr  chr_pos allele       ref     alt  type cause          class #> 1    8774  22 15220157      0 GTTTTTTTT       G indel     A         driver #> 2    8774  22 16079553      0         G       A   SNV  SBS1 pre-neoplastic #> 3    8774  22 16135375      0         C CAAAAAA indel   ID1 pre-neoplastic #> 4    8774  22 16149260      0         G       A   SNV  SBS1 pre-neoplastic #> 5    8774  22 16200607      0         G       A   SNV  SBS1 pre-neoplastic #> 6    8774  22 16251672      0         C  CTTTTT indel   ID1 pre-neoplastic  # get the CNAs of the 3rd cell in `sampled_cells` phylo_forest$get_sampled_cell_CNAs(cell_id) %>% head() #>   cell_id type chr    begin      end allele src.allele  class #> 1    8774    A  22 10303470 10503469      2          1 driver #> 2    8774    D  22  5010000  5209999      1         NA driver phylo_forest$get_samples_info() #>    name id xmin ymin xmax ymax tumour_cells tumour_cells_in_bbox     time #> 1 S_1_1  0  480  480  530  530         2588                 2588 365,9279 #> 2 S_1_2  1  500  500  550  550         1632                 1632 365,9279 #> 3 S_2_1  2  370  498  394  522          572                  572 421,2143 #> 4 S_2_2  3  370  373  394  397          604                  604 421,2143 #>   DNA_quantity equivalent_normal_cells #> 1 530855879155                5173,573 #> 2 333071264048                3246,020 #> 3 117255398095                1142,738 #> 4 123951831456                1208,000 # extract the germline mutation phylo_forest$get_germline_mutations() %>% head() #>   chr  chr_pos allele ref   alt  type cause    class #> 1  22 16051493      0   G     A   SNV       germinal #> 2  22 16052167      0   A AAAAC indel       germinal #> 3  22 16053659      0   A     C   SNV       germinal #> 4  22 16054740      0   A     G   SNV       germinal #> 5  22 16055942      0   C     T   SNV       germinal #> 6  22 16058070      0   A     G   SNV       germinal # select one of the mutations mutation_row <- phylo_forest$get_sampled_cell_mutations(cell_id)[2, ]  # rebuild the corresponding mutation mutation <- Mutation(mutation_row[\"chr\"][1, ],                      mutation_row[\"chr_pos\"][1, ],                      mutation_row[\"ref\"][1, ],                      mutation_row[\"alt\"][1, ])  # get the identifier of the oldest cells in which the mutation occurs phylo_forest$get_first_occurrences(mutation) #> [[1]] #> [1] 0 # get the exposures used in placing the mutations phylo_forest$get_exposures() #>    time signature exposure  type #> 1     0      SBS1      0,8   SNV #> 2     0     SBS13      0,2   SNV #> 3   100      SBS2      0,2   SNV #> 4   100      SBS3      0,5   SNV #> 5   100      SBS5      0,3   SNV #> 6   120      SBS2      0,2   SNV #> 7   120      SBS3      0,5   SNV #> 8   120      SBS5      0,3   SNV #> 9     0      ID13      0,2 indel #> 10    0       ID2      0,6 indel #> 11    0      ID21      0,2 indel #> 12  120       ID1      0,8 indel #> 13  120       ID9      0,2 indel # get the name of the first sample sample_name <- phylo_forest$get_samples_info()[[\"name\"]][1]  # print the bulk allelic fragmentation phylo_forest$get_bulk_allelic_fragmentation(sample_name) %>% head() #>   chr   begin      end major minor       ratio #> 1  22       1  5009999     2     2 0,998840804 #> 2  22       1  5009999     3     2 0,001159196 #> 3  22 5010000  5209999     2     0 0,998840804 #> 4  22 5010000  5209999     3     0 0,001159196 #> 5  22 5210000 10303469     2     2 0,998840804 #> 6  22 5210000 10303469     3     2 0,001159196 # print the cell allelic fragmentation phylo_forest$get_cell_allelic_fragmentation() %>% head() #>   cell_id chr    begin      end major minor #> 1    2790  22        1  5009999     2     2 #> 2    2790  22  5010000  5209999     2     0 #> 3    2790  22  5210000 10303469     2     2 #> 4    2790  22 10303470 10503469     4     2 #> 5    2790  22 10503470 51304566     2     2 #> 6    5000  22        1  5009999     2     2 # get the SNV signatures used in placing the mutations m_engine$get_SNV_signatures()[1:6, 1:5] #>      Type        SBS1        SBS2       SBS3        SBS4 #> 1 A[C>A]A 0,000886157 5,80000e-07 0,02080832 0,042196498 #> 2 A[C>A]C 0,002280405 1,48004e-04 0,01650660 0,033297236 #> 3 A[C>A]G 0,000177031 5,23000e-05 0,00175070 0,015598705 #> 4 A[C>A]T 0,001280227 9,78000e-05 0,01220488 0,029497552 #> 5 A[C>G]A 0,001860330 2,23000e-16 0,01970788 0,006889428 #> 6 A[C>G]C 0,001220217 1,33004e-04 0,01170468 0,002839764  # get the indel signatures used in placing the mutations m_engine$get_indel_signatures()[1:6, 1:5] #>        Type          ID1         ID2        ID3         ID4 #> 1 1:Del:C:0 1,598890e-04 0,004824116 0,12472711 0,007249717 #> 2 1:Del:C:1 7,735230e-04 0,000022100 0,20887617 0,002734869 #> 3 1:Del:C:2 3,310000e-18 0,000003110 0,17632422 0,002041063 #> 4 1:Del:C:3 1,907613e-03 0,002472076 0,06404276 0,001112283 #> 5 1:Del:C:4 7,059900e-04 0,003856976 0,04398981 0,001075684 #> 6 1:Del:C:5 3,370115e-03 0,014615424 0,02241749 0,002246178 phylo_forest$get_germline_subject() #>    sample pop super_pop gender #> 1 NA20513 TSI       EUR   male"},{"path":"https://caravagnalab.github.io/ProCESS/articles/mutations.html","id":"storing-phylogenetic-forests","dir":"Articles","previous_headings":"","what":"Storing Phylogenetic Forests","title":"Simulating Mutations","text":"case samples forests, phylogenetic forests can saved using method PhylogeneticForest$save() load function load_phylogenetic_forest().","code":"# save the phylogenetic forest in the file \"phylo_forest.sff\" phylo_forest$save(\"phylo_forest.sff\") #>  [█---------------------------------------] 0% [00m:00s] Saving forest [█---------------------------------------] 0% [00m:01s] Saving forest [█---------------------------------------] 0% [00m:02s] Saving forest [█---------------------------------------] 0% [00m:03s] Saving forest [█---------------------------------------] 0% [00m:04s] Saving forest [█---------------------------------------] 0% [00m:05s] Saving forest [█---------------------------------------] 0% [00m:06s] Saving forest [█---------------------------------------] 0% [00m:07s] Saving forest [█---------------------------------------] 0% [00m:08s] Saving forest [█---------------------------------------] 0% [00m:09s] Saving forest [██████----------------------------------] 13% [00m:10s] Saving forest [██████████------------------------------] 23% [00m:11s] Saving forest [█████████████---------------------------] 30% [17m:02s] Saving forest [█████████████████-----------------------] 40% [17m:03s] Saving forest [█████████████████████-------------------] 50% [17m:04s] Saving forest [█████████████████████████---------------] 61% [17m:05s] Saving forest [████████████████████████████------------] 69% [17m:06s] Saving forest [████████████████████████████████--------] 79% [17m:07s] Saving forest [█████████████████████████████████████---] 90% [17m:08s] Saving forest [████████████████████████████████████████] 100% [17m:09s] Forest saved  # loading the saved forest loaded_phylo_forest <- load_phylogenetic_forest(\"phylo_forest.sff\") #>  [█---------------------------------------] 0% [00m:00s] Loading forest [█████-----------------------------------] 10% [00m:01s] Loading forest [███████---------------------------------] 17% [00m:02s] Loading forest [██████████------------------------------] 23% [00m:03s] Loading forest [█████████████---------------------------] 30% [00m:04s] Loading forest [███████████████-------------------------] 37% [00m:05s] Loading forest [██████████████████----------------------] 44% [00m:06s] Loading forest [█████████████████████-------------------] 51% [00m:07s] Loading forest [████████████████████████----------------] 58% [00m:08s] Loading forest [██████████████████████████--------------] 64% [00m:09s] Loading forest [█████████████████████████████-----------] 71% [00m:10s] Loading forest [████████████████████████████████--------] 78% [00m:12s] Loading forest [███████████████████████████████████-----] 85% [00m:13s] Loading forest [█████████████████████████████████████---] 91% [00m:14s] Loading forest [███████████████████████████████████████-] 97% [00m:15s] Loading forest [████████████████████████████████████████] 100% [00m:15s] Forest loaded  loaded_phylo_forest #> PhylogeneticForest #>   # of trees: 1 #>   # of nodes: 18845 #>   # of leaves: 5396 #>   samples: {\"S_1_1\", \"S_1_2\", \"S_2_1\", \"S_2_2\"} #>  #>   # of emerged SNVs and indels: 113353 #>   # of emerged CNAs: 39"},{"path":"https://caravagnalab.github.io/ProCESS/articles/mutations.html","id":"getting-and-setting-the-reference-genome-path","dir":"Articles","previous_headings":"","what":"Getting and Setting the Reference Genome Path","title":"Simulating Mutations","text":"phylogenetic forest object contains reference genome FASTA file path. methods PhylogeneticForest$get_reference_path() PhylogeneticForest$set_reference_path() can used get path set , respectively.","code":"phylo_forest$get_reference_path() #> [1] \"/Users/alberto/sign/ProCESS/vignettes/demo/reference.fasta\"  phylo_forest$set_reference_path(\"demo/reference.fasta\")  phylo_forest$get_reference_path() #> [1] \"/Users/alberto/sign/ProCESS/vignettes/demo/reference.fasta\""},{"path":"https://caravagnalab.github.io/ProCESS/articles/run_until.html","id":"variables","dir":"Articles","previous_headings":"","what":"Variables","title":"Formula-based simulation constraints","text":"variables represent one among following quantities: cardinality species; number fired event among deaths, duplications switches species; elapse simulation time. variables can built using method SpatialSimulation$var(). parameter string \"Time\", elapsed simulation time variable returned. parameter name species, variable representing cardinality species built. Finally, parameter name species followed . name event among deaths, duplications, switches, SpatialSimulation$var() returns variable associated number corresponding event specified species.","code":"library(ProCESS)  # set the seed of the random number generator set.seed(0)  # build a spatial simulation and add two species to it sim <- SpatialSimulation() sim$add_mutant(name = \"A\",                epigenetic_rates = c(\"+-\" = 0.01, \"-+\" = 0.01),                growth_rates = c(\"+\" = 0.2, \"-\" = 0.08),                death_rates = c(\"+\" = 0.1, \"-\" = 0.01))  # get the variable representing the simulation time v_time <- sim$var(\"Time\")  v_time #> Time # get the variable representing the cardinality of A+ in sim va_p <- sim$var(\"A+\") va_p #> |A+|  # get the variable representing the cardinality of A- in sim va_m <- sim$var(\"A-\") va_m #> |A-| # get the variable representing the number of epigenetic # switches from A+ va_ps <- sim$var(\"A+.switches\") va_ps #> |A+.switches|  # get the variable representing the number of duplications in A+ sim$var(\"A+.duplications\") #> |A+.duplications|  # get the variable representing the number of deaths in A+ sim$var(\"A+.deaths\") #> |A+.deaths|"},{"path":"https://caravagnalab.github.io/ProCESS/articles/run_until.html","id":"expressions-and-formulas","dir":"Articles","previous_headings":"","what":"Expressions and Formulas","title":"Formula-based simulation constraints","text":"expression one following object: variable, e.g., sim$var(\"+\"); numeric value, e.g., 3.4; sum two expressions, e.g., sim$var(\"+\") + 3.4; subtraction two expressions, e.g., sim$var(\"+\") - 3.4; multiplication two expressions, e.g., sim$var(\"+\") * 3.4. Two expression can related <=, <, ==, !=, > >=. formula : relation among two expressions, e.g., sim$var(\"+\")>=2; conjunction two formulas, e.g., sim$var(\"+\")>=2 & sim$var(\"+\")<=500; disjunction two formulas, e.g., sim$var(\"+\")>=2 | sim$var(\"+\")<=500.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/articles/run_until.html","id":"the-method-spatialsimulationrun_until","dir":"Articles","previous_headings":"","what":"The method SpatialSimulation$run_until()","title":"Formula-based simulation constraints","text":"method SpatialSimulation$run_until() takes parameter formula lets simulation evolve formula hold.","code":"# build a condition stating that the cardinality of A+ doubles # that of A- c1 <- va_p >= 2 * va_m c1 #> |A+|>=2*|A-|  # build a condition that holds when there are more than # 100000 live cells of mutant A c2 <- va_p + va_m > 1e5 c2 #> |A+|+|A-|>100000  # build a condition that holds when less than 4000 # epigenetic switches from the species A+ have occured c3 <- va_ps < 4000 c3 #> 4000>|A+.switches|  # build a condition that holds when 40 time unit have been # simulated at least c4 <- v_time >= 40 c4 #> Time>=40  # build a condition that holds when c4 and at least one # among c1, c2, and c3 hold c5 <- c4 & (c1 | c2 | c3) c5 #> Time>=40 and (|A+|>=2*|A-| or |A+|+|A-|>100000 or 4000>|A+.switches|)  # place the initial cell sim$place_cell(\"A+\", 500, 500)  # run the simulation while c5 does not hold sim$run_until(c5) #>  [████████████████████████████████████████] 100% [00m:00s] Saving snapshot  sim #> ──  ProCESS   D   S   M  /var/folders/tb/jqmdpgxs2t5129bny6pb96680000gn/T/ProCES #>  #> ── Species: 2, with epigenetics #>     #>    =======  ====  ====  ====  ======  === #>    species   λ      δ    ε    counts   %  #>    =======  ====  ====  ====  ======  === #>         A-  0.08  0.01  0.01    30    75  #>         A+  0.20  0.10  0.01    10    25  #>    =======  ====  ====  ====  ======  === #>  #> ── Firings: 73 total #>  #>  Species [A-]:  5 (deaths), 37 (duplications) and  5 (switches) #>  Species [A+]:  8 (deaths), 15 (duplications) and  3 (switches) #> ✖ The simulation has no samples yet! sim$get_clock() #> [1] 40.34598"},{"path":"https://caravagnalab.github.io/ProCESS/articles/sampling.html","id":"custom-multi-region-sampling","dir":"Articles","previous_headings":"","what":"Custom multi-region sampling","title":"Tissue sampling","text":"consider simple monoclonal model, without epimutants.  sample defined name bounding box, (x,y)(x,y) coordinate bottom left point, top right point. simulation, define two samples names \"S_1_2\" \"S_1_2\".  Note: Sampling removes cells tissue, tissue surgically resected. Therefore, cells mapped bounding box application SpatialSimulation$sample_cells() longer part simulation. new call plot_tissue() show box cells removed white.  also reflected SpatialSimulation$get_cells(), now find tumour cell sampled region. also remarked sampling process exclusively collects tumour cells, excludes wild-type cells.","code":"library(ProCESS)  # set the seed of the random number generator set.seed(0)  # Monoclonal model, no epimutants sim <- SpatialSimulation(\"Monoclonal\")  sim$add_mutant(name = \"A\", growth_rates = 0.1, death_rates = 0.01)  sim$place_cell(\"A\", 500, 500) sim$run_up_to_size(\"A\", 60000) #>  [████████████████████████████████████----] 88% [00m:00s] Cells: 53181 [████████████████████████████████████████] 100% [00m:00s] Saving snapshot current <- plot_tissue(sim) current # We collect a squared box of (bbox_width x bbox_width) cells bbox_width <- 50  # Box A1 bbox1_p <- c(400, 400) bbox1_q <- bbox1_p + bbox_width  # Box B1 bbox2_p <- c(500, 500) bbox2_q <- bbox2_p + bbox_width  library(ggplot2)  # View the boxes current +   geom_rect(xmin = bbox1_p[1], xmax = bbox1_q[2],             ymin = bbox1_p[1], ymax = bbox1_q[2],             fill = NA, color = \"black\") +   geom_rect(xmin = bbox2_p[1], xmax = bbox2_q[2],             ymin = bbox2_p[1], ymax = bbox2_q[2],             fill = NA, color = \"black\") # Sampling sim$sample_cells(\"S_1_1\", bottom_left = bbox1_p, top_right = bbox1_q) sim$sample_cells(\"S_1_2\", bottom_left = bbox2_p, top_right = bbox2_q) plot_tissue(sim) library(dplyr) #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union  # This should be empty sim$get_cells(c(400, 400), c(400 + bbox_width, 400 + bbox_width)) %>% head #> [1] cell_id    mutant     epistate   position_x position_y #> <0 rows> (or 0-length row.names)"},{"path":"https://caravagnalab.github.io/ProCESS/articles/sampling.html","id":"cell-division-tree-for-sampled-cells","dir":"Articles","previous_headings":"Custom multi-region sampling","what":"Cell division tree for sampled cells","title":"Tissue sampling","text":"Every sampled cell linked, evolutionary level, cells originate initial cell. helps visualise evolutionary information cells sampled forest trees (one seeded multiple initial cells). forest object S4 class SamplesForest. forest methods obtain nodes sampled cells. leaves forest sampled cells, internal nodes ancestors. field sample available internal nodes, reports sample name otherwise. roots forest ancestors. can also query forest samples used build . can visualise forest. plot reports cells , y-axis, time birth.  plot shows also samples annotations species , large number cells, might complicated view full tree, unless large canvas used. reaason, possible subset tree.  general, plots can annotated extra information, sampling times, MRCAs sample tree.","code":"forest <- sim$get_samples_forest()  forest #> SamplesForest #>   # of trees: 1 #>   # of nodes: 18255 #>   # of leaves: 5181 #>   samples: {\"S_1_1\", \"S_1_2\"} forest$get_nodes() %>% head #>   cell_id ancestor mutant epistate sample birth_time #> 1       0       NA      A            <NA>   0.000000 #> 2       1        0      A            <NA>   5.741436 #> 3       2        0      A            <NA>   5.741436 #> 4       3        2      A            <NA>   8.545185 #> 5       4        2      A            <NA>   8.545185 #> 6       5        1      A            <NA>  11.583620 # The leaves in the forest represent sampled cells forest$get_nodes() %>%   filter(!is.na(.data$sample)) %>%   head #>   cell_id ancestor mutant epistate sample birth_time #> 1   14350     3768      A           S_1_2   181.9186 #> 2   18621    14799      A           S_1_2   197.6872 #> 3   21101     3988      A           S_1_2   205.8270 #> 4   26307    18963      A           S_1_2   220.3426 #> 5   27246    22386      A           S_1_2   222.8447 #> 6   27814    17642      A           S_1_1   224.2599 # If it is one cell, than the forest is a tree forest$get_nodes() %>%   filter(is.na(.data$ancestor)) #>   cell_id ancestor mutant epistate sample birth_time #> 1       0       NA      A            <NA>          0 forest$get_samples_info() #>    name id xmin ymin xmax ymax tumour_cells tumour_cells_in_bbox     time #> 1 S_1_1  0  400  400  450  450         2588                 2588 397.0568 #> 2 S_1_2  1  500  500  550  550         2593                 2593 397.0568 plot_forest(forest) # Extract the subforest linked to sample S_1_1_forest <- forest$get_subforest_for(\"S_1_1\")  plot_forest(S_1_1_forest) # Full plot plot_forest(forest) %>%   annotate_forest(forest) # S_1_1 plot plot_forest(S_1_1_forest) %>%   annotate_forest(S_1_1_forest)"},{"path":"https://caravagnalab.github.io/ProCESS/articles/sampling.html","id":"randomised-multi-region-samples","dir":"Articles","previous_headings":"","what":"Randomised multi-region samples","title":"Tissue sampling","text":"include new mutant let grow. new mutant much higher growth rates ancestor.  Since mutant start randomised SpatialSimulation$choose_cell_in(), exact idea sample obtain example, 100100 cells. can look visually simulation, slow. ProCESS provides SpatialSimulation$search_sample() function sample bounding boxes contain desired number cells. function takes input: bounding box size; number nn cells sample species interest. SpatialSimulation$search_sample() attempt fixed number times sample box, starting positions occupied species interest. box contains least nn cells found within number attempts, one largest number samples returned. allows program sampling without clear idea tissue conformation.  Something similar species .  two samples extracted.  Cell division tree.","code":"# set the seed of the random number generator set.seed(0)  sim <- SpatialSimulation(\"Randomised\")  sim$add_mutant(name = \"A\", growth_rates = 0.1, death_rates = 0.01)  sim$place_cell(\"A\", 500, 500) sim$run_up_to_size(\"A\", 60000) #>  [██████████████████████████████----------] 74% [00m:00s] Cells: 44811 [████████████████████████████████████████] 100% [00m:00s] Saving snapshot # Add a new mutant sim$add_mutant(name = \"B\", growth_rates = 1, death_rates = 0.01) sim$mutate_progeny(sim$choose_cell_in(\"A\"), \"B\")  sim$run_up_to_size(\"B\", 10000) #>  [██████████████████████████████----------] 74% [00m:00s] Cells: 100251 [████████████████████████████████████████] 100% [00m:00s] Saving snapshot  current <- plot_tissue(sim) current # A bounding box 50x50 with at least 100 cells of species B n_w <- n_h <- 50 ncells <- 0.8 * n_w * n_h  # Sampling ncells with random box sampling of boxes of size n_w x n_h bbox <- sim$search_sample(c(\"B\" = ncells), n_w, n_h)  # plot the bounding box current +   geom_rect(xmin = bbox$lower_corner[1], xmax = bbox$upper_corner[1],             ymin = bbox$lower_corner[2], ymax = bbox$upper_corner[2],             fill = NA, color = \"black\") # sample the tissue sim$sample_cells(\"S_2_1\", bbox$lower_corner, bbox$upper_corner) bbox <- sim$search_sample(c(\"A\" = ncells), n_w, n_h)  # plot the bounding box current +   geom_rect(xmin = bbox$lower_corner[1], xmax = bbox$upper_corner[1],             ymin = bbox$lower_corner[2], ymax = bbox$upper_corner[2],             fill = NA, color = \"black\") # sample the tissue sim$sample_cells(\"S_2_2\", bbox$lower_corner, bbox$upper_corner) plot_tissue(sim) forest <- sim$get_samples_forest()  plot_forest(forest) %>%   annotate_forest(forest)"},{"path":"https://caravagnalab.github.io/ProCESS/articles/sampling.html","id":"randomised-cell-sampling-liquid-biopsy","dir":"Articles","previous_headings":"","what":"Randomised cell sampling (Liquid biopsy)","title":"Tissue sampling","text":"ProCESS supports randomized cell sampling full tissue rectangle thereof.","code":"# collect up to 2500 tumour cells randomly selected over the whole tissue sim$sample_cells(\"S_2_3\", num_of_cells = 2500)  bbox <- sim$search_sample(c(\"A\" = ncells), n_w, n_h)  # collect up to 200 tumour cells randomly selected in the provided # bounding box sim$sample_cells(\"S_2_4\", bbox$lower_corner, bbox$upper_corner, 200)  forest <- sim$get_samples_forest()  plot_forest(forest) %>%   annotate_forest(forest)"},{"path":"https://caravagnalab.github.io/ProCESS/articles/sampling.html","id":"two-populations-with-epigenetic-state","dir":"Articles","previous_headings":"","what":"Two populations with epigenetic state","title":"Tissue sampling","text":"now ready simulate model epigenetic switches subclonal expansions.  sample introducing new mutant.   Add new submutant.  Sample plot tissue   Now show cell division tree, starts rather complicated","code":"# set the seed of the random number generator set.seed(0)  sim <- SpatialSimulation(\"Two Populations\")  sim$death_activation_level <- 20  # First mutant sim$add_mutant(name = \"A\",                epigenetic_rates = c(\"+-\" = 0.01, \"-+\" = 0.01),                growth_rates = c(\"+\" = 0.1, \"-\" = 0.08),                death_rates = c(\"+\" = 0.1, \"-\" = 0.01))  sim$place_cell(\"A+\", 500, 500) sim$run_up_to_size(\"A+\", 1000) #>  [████████████████████████████████████████] 100% [00m:00s] Saving snapshot plot_tissue(sim, num_of_bins = 500) bbox_width <- 10  sim$sample_cells(\"S_1_1\",                  bottom_left = c(480, 480),                  top_right = c(480 + bbox_width, 480 + bbox_width))  sim$sample_cells(\"S_1_2\",                  bottom_left = c(500, 500),                  top_right = c(500 + bbox_width, 500 + bbox_width))  plot_tissue(sim, num_of_bins = 500) # Let it grow a bit more sim$run_up_to_time(sim$get_clock() + 15) #>  [████████████████████████████████████████] 100% [00m:00s] Saving snapshot  plot_tissue(sim, num_of_bins = 500) cell <- sim$choose_cell_in(\"A\")  sim$add_mutant(name = \"B\",                epigenetic_rates = c(\"+-\" = 0.05, \"-+\" = 0.1),                growth_rates = c(\"+\" = 0.8, \"-\" = 0.3),                death_rates = c(\"+\" = 0.05, \"-\" = 0.05))  sim$mutate_progeny(cell, \"B\")  # let it grow more time units sim$run_up_to_size(\"B+\", 7000) #>  [████████████████████████████████████████] 100% [00m:00s] Saving snapshot  plot_tissue(sim, num_of_bins = 500) n_w <- n_h <- 25 ncells <- 0.9 * n_w * n_h  bbox <- sim$search_sample(c(\"A\" = ncells), n_w, n_h) sim$sample_cells(\"S_2_1\", bbox$lower_corner, bbox$upper_corner)  bbox <- sim$search_sample(c(\"B\" = ncells), n_w, n_h) sim$sample_cells(\"S_2_2\", bbox$lower_corner, bbox$upper_corner)  plot_tissue(sim, num_of_bins = 500) plot_muller(sim) forest <- sim$get_samples_forest()  plot_forest(forest) %>%   annotate_forest(forest)"},{"path":"https://caravagnalab.github.io/ProCESS/articles/sampling.html","id":"storing-samples-forests","dir":"Articles","previous_headings":"Two populations with epigenetic state","what":"Storing Samples Forests","title":"Tissue sampling","text":"samples forest can saved file using method SamplesForest$save(). saved samples forest can successively load using function load_samples_forest().","code":"# check the file existence. It should not exists. file.exists(\"samples_forest.sff\") #> [1] FALSE  # save the samples forest in the file \"samples_forest.sff\" forest$save(\"samples_forest.sff\")  # check the file existence. It now exists. file.exists(\"samples_forest.sff\") #> [1] TRUE # load the samples forest from \"samples_forest.sff\" and store it in `forest2` forest2 <- load_samples_forest(\"samples_forest.sff\")  # let us now compare the samples forests stored in `forest` and `forest2`; # they should be the same. forest #> SamplesForest #>   # of trees: 1 #>   # of nodes: 5494 #>   # of leaves: 1390 #>   samples: {\"S_1_1\", \"S_1_2\", \"S_2_1\", \"S_2_2\"} forest2 #> SamplesForest #>   # of trees: 1 #>   # of nodes: 5494 #>   # of leaves: 1390 #>   samples: {\"S_1_1\", \"S_1_2\", \"S_2_1\", \"S_2_2\"}"},{"path":"https://caravagnalab.github.io/ProCESS/articles/sequencing.html","id":"sequencing-simulation","dir":"Articles","previous_headings":"","what":"Sequencing Simulation","title":"Sequencing Simulation","text":"Let us reload phylogenetic forest produced vignette(\"mutations\"). loaded phylogenetic forest models cell evolution 4 different samples: S_1_1, S_1_2, S_2_1, S_2_2. can simulate sequencing samples coverage 2.5X follows. function simulate_seq() returns named list two elements: data frame whose rows represent mutations observed simulated reads (name “mutations”) calling parameters (name “parameters”). number columns data frame “mutations” depends number samples phylogenetic forest. first four columns describe mutation report chromosome position chromosome mutation (columns chr chr_pos, respectively), genetic context mutation occurs (column context), new base (column alt_base). , three columns samples: contain number simulated reads affected mutation, sequencing coverage mutation locus, ratio two last columns (columns <sample name> occurrences, <sample name> coverage, <sample name> VAF, respectively).","code":"library(ProCESS)  phylo_forest <- load_phylogenetic_forest(\"phylo_forest.sff\") #>  [█---------------------------------------] 0% [00m:00s] Loading forest [█████-----------------------------------] 11% [00m:01s] Loading forest [████████--------------------------------] 18% [00m:02s] Loading forest [███████████-----------------------------] 25% [00m:03s] Loading forest [█████████████---------------------------] 32% [00m:04s] Loading forest [████████████████------------------------] 39% [00m:05s] Loading forest [███████████████████---------------------] 46% [00m:06s] Loading forest [██████████████████████------------------] 52% [00m:07s] Loading forest [█████████████████████████---------------] 60% [00m:08s] Loading forest [███████████████████████████-------------] 67% [00m:09s] Loading forest [██████████████████████████████----------] 73% [00m:10s] Loading forest [████████████████████████████████--------] 79% [00m:11s] Loading forest [███████████████████████████████████-----] 85% [00m:12s] Loading forest [█████████████████████████████████████---] 91% [00m:13s] Loading forest [███████████████████████████████████████-] 97% [00m:15s] Loading forest [████████████████████████████████████████] 100% [00m:15s] Forest loaded  phylo_forest #> PhylogeneticForest #>   # of trees: 1 #>   # of nodes: 18845 #>   # of leaves: 5396 #>   samples: {\"S_1_1\", \"S_1_2\", \"S_2_1\", \"S_2_2\"} #>  #>   # of emerged SNVs and indels: 113353 #>   # of emerged CNAs: 39 # let us simulate a 50x sequencing of the four sample seq_results <- simulate_seq(phylo_forest, coverage = 30) #>  [█---------------------------------------] 0% [00m:00s] Found 22 [█---------------------------------------] 0% [00m:00s] Reading 22 [█---------------------------------------] 0% [00m:00s] Reading 22 [█---------------------------------------] 0% [00m:01s] Processing chr. 22 [█---------------------------------------] 0% [00m:05s] Processing chr. 22 [█---------------------------------------] 0% [00m:06s] Processing chr. 22 [█---------------------------------------] 1% [00m:07s] Processing chr. 22 [█---------------------------------------] 1% [00m:08s] Processing chr. 22 [█---------------------------------------] 2% [00m:09s] Processing chr. 22 [█---------------------------------------] 2% [00m:10s] Processing chr. 22 [██--------------------------------------] 3% [00m:11s] Processing chr. 22 [██--------------------------------------] 3% [00m:12s] Processing chr. 22 [██--------------------------------------] 4% [00m:13s] Processing chr. 22 [██--------------------------------------] 4% [00m:14s] Processing chr. 22 [███-------------------------------------] 5% [00m:15s] Processing chr. 22 [███-------------------------------------] 5% [00m:16s] Processing chr. 22 [███-------------------------------------] 6% [00m:17s] Processing chr. 22 [███-------------------------------------] 7% [00m:18s] Processing chr. 22 [███-------------------------------------] 7% [00m:19s] Processing chr. 22 [████------------------------------------] 8% [00m:20s] Processing chr. 22 [████------------------------------------] 8% [00m:21s] Processing chr. 22 [████------------------------------------] 9% [00m:22s] Processing chr. 22 [████------------------------------------] 9% [00m:23s] Processing chr. 22 [█████-----------------------------------] 10% [00m:24s] Processing chr. 22 [█████-----------------------------------] 11% [00m:25s] Processing chr. 22 [█████-----------------------------------] 11% [00m:26s] Processing chr. 22 [█████-----------------------------------] 12% [00m:27s] Processing chr. 22 [█████-----------------------------------] 12% [00m:28s] Processing chr. 22 [██████----------------------------------] 13% [00m:29s] Processing chr. 22 [██████----------------------------------] 13% [00m:30s] Processing chr. 22 [██████----------------------------------] 14% [00m:31s] Processing chr. 22 [███████---------------------------------] 15% [00m:32s] Processing chr. 22 [███████---------------------------------] 15% [00m:33s] Processing chr. 22 [███████---------------------------------] 16% [00m:34s] Processing chr. 22 [███████---------------------------------] 16% [00m:35s] Processing chr. 22 [███████---------------------------------] 17% [00m:36s] Processing chr. 22 [███████---------------------------------] 17% [00m:37s] Processing chr. 22 [████████--------------------------------] 18% [00m:38s] Processing chr. 22 [████████--------------------------------] 19% [00m:39s] Processing chr. 22 [████████--------------------------------] 19% [00m:40s] Processing chr. 22 [█████████-------------------------------] 20% [00m:41s] Processing chr. 22 [█████████-------------------------------] 20% [00m:42s] Processing chr. 22 [█████████-------------------------------] 21% [00m:43s] Processing chr. 22 [█████████-------------------------------] 22% [00m:44s] Processing chr. 22 [█████████-------------------------------] 22% [00m:45s] Processing chr. 22 [██████████------------------------------] 23% [00m:46s] Processing chr. 22 [██████████------------------------------] 23% [00m:47s] Processing chr. 22 [██████████------------------------------] 24% [00m:48s] Processing chr. 22 [███████████-----------------------------] 25% [00m:49s] Processing chr. 22 [███████████-----------------------------] 25% [00m:50s] Processing chr. 22 [███████████-----------------------------] 26% [00m:51s] Processing chr. 22 [███████████-----------------------------] 26% [00m:52s] Processing chr. 22 [███████████-----------------------------] 27% [00m:53s] Processing chr. 22 [███████████-----------------------------] 27% [00m:54s] Processing chr. 22 [████████████----------------------------] 28% [00m:55s] Processing chr. 22 [████████████----------------------------] 29% [00m:56s] Processing chr. 22 [████████████----------------------------] 29% [00m:57s] Processing chr. 22 [█████████████---------------------------] 30% [00m:58s] Processing chr. 22 [█████████████---------------------------] 30% [00m:59s] Processing chr. 22 [█████████████---------------------------] 31% [01m:00s] Processing chr. 22 [█████████████---------------------------] 32% [01m:01s] Processing chr. 22 [█████████████---------------------------] 32% [01m:02s] Processing chr. 22 [██████████████--------------------------] 33% [01m:03s] Processing chr. 22 [██████████████--------------------------] 33% [01m:04s] Processing chr. 22 [██████████████--------------------------] 34% [01m:05s] Processing chr. 22 [██████████████--------------------------] 34% [01m:06s] Processing chr. 22 [███████████████-------------------------] 35% [01m:07s] Processing chr. 22 [███████████████-------------------------] 36% [01m:08s] Processing chr. 22 [███████████████-------------------------] 36% [01m:09s] Processing chr. 22 [███████████████-------------------------] 37% [01m:10s] Processing chr. 22 [███████████████-------------------------] 37% [01m:11s] Processing chr. 22 [████████████████------------------------] 38% [01m:12s] Processing chr. 22 [████████████████------------------------] 38% [01m:13s] Processing chr. 22 [████████████████------------------------] 39% [01m:14s] Processing chr. 22 [█████████████████-----------------------] 40% [01m:15s] Processing chr. 22 [█████████████████-----------------------] 40% [01m:16s] Processing chr. 22 [█████████████████-----------------------] 41% [01m:17s] Processing chr. 22 [█████████████████-----------------------] 41% [01m:18s] Processing chr. 22 [█████████████████-----------------------] 42% [01m:19s] Processing chr. 22 [█████████████████-----------------------] 42% [01m:20s] Processing chr. 22 [██████████████████----------------------] 43% [01m:21s] Processing chr. 22 [██████████████████----------------------] 44% [01m:22s] Processing chr. 22 [██████████████████----------------------] 44% [01m:23s] Processing chr. 22 [███████████████████---------------------] 45% [01m:24s] Processing chr. 22 [███████████████████---------------------] 45% [01m:25s] Processing chr. 22 [███████████████████---------------------] 46% [01m:26s] Processing chr. 22 [███████████████████---------------------] 46% [01m:27s] Processing chr. 22 [███████████████████---------------------] 47% [01m:28s] Processing chr. 22 [████████████████████--------------------] 48% [01m:29s] Processing chr. 22 [████████████████████--------------------] 48% [01m:30s] Processing chr. 22 [████████████████████--------------------] 48% [01m:31s] Processing chr. 22 [████████████████████--------------------] 49% [01m:32s] Processing chr. 22 [████████████████████--------------------] 49% [01m:33s] Processing chr. 22 [████████████████████--------------------] 49% [01m:34s] Processing chr. 22 [█████████████████████-------------------] 50% [01m:35s] Processing chr. 22 [█████████████████████-------------------] 50% [01m:36s] Processing chr. 22 [█████████████████████-------------------] 50% [01m:37s] Processing chr. 22 [█████████████████████-------------------] 51% [01m:38s] Processing chr. 22 [█████████████████████-------------------] 51% [01m:39s] Processing chr. 22 [█████████████████████-------------------] 52% [01m:40s] Processing chr. 22 [█████████████████████-------------------] 52% [01m:41s] Processing chr. 22 [█████████████████████-------------------] 52% [01m:42s] Processing chr. 22 [██████████████████████------------------] 52% [01m:43s] Processing chr. 22 [██████████████████████------------------] 52% [01m:44s] Processing chr. 22 [██████████████████████------------------] 52% [01m:45s] Processing chr. 22 [██████████████████████------------------] 54% [01m:46s] Processing chr. 22 [██████████████████████------------------] 54% [01m:47s] Processing chr. 22 [███████████████████████-----------------] 55% [01m:48s] Processing chr. 22 [███████████████████████-----------------] 55% [01m:49s] Processing chr. 22 [███████████████████████-----------------] 55% [01m:50s] Processing chr. 22 [███████████████████████-----------------] 56% [01m:51s] Processing chr. 22 [███████████████████████-----------------] 56% [01m:52s] Processing chr. 22 [███████████████████████-----------------] 56% [01m:53s] Processing chr. 22 [███████████████████████-----------------] 57% [01m:54s] Processing chr. 22 [███████████████████████-----------------] 57% [01m:55s] Processing chr. 22 [███████████████████████-----------------] 57% [01m:56s] Processing chr. 22 [████████████████████████----------------] 58% [01m:57s] Processing chr. 22 [████████████████████████----------------] 58% [01m:58s] Processing chr. 22 [████████████████████████----------------] 58% [01m:59s] Processing chr. 22 [████████████████████████----------------] 58% [02m:00s] Processing chr. 22 [████████████████████████----------------] 58% [02m:01s] Processing chr. 22 [█████████████████████████---------------] 60% [02m:02s] Processing chr. 22 [█████████████████████████---------------] 60% [02m:03s] Processing chr. 22 [█████████████████████████---------------] 60% [02m:04s] Processing chr. 22 [█████████████████████████---------------] 61% [02m:05s] Processing chr. 22 [█████████████████████████---------------] 61% [02m:06s] Processing chr. 22 [█████████████████████████---------------] 61% [02m:07s] Processing chr. 22 [█████████████████████████---------------] 62% [02m:08s] Processing chr. 22 [█████████████████████████---------------] 62% [02m:09s] Processing chr. 22 [██████████████████████████--------------] 63% [02m:10s] Processing chr. 22 [██████████████████████████--------------] 63% [02m:11s] Processing chr. 22 [██████████████████████████--------------] 63% [02m:12s] Processing chr. 22 [██████████████████████████--------------] 64% [02m:13s] Processing chr. 22 [██████████████████████████--------------] 64% [02m:14s] Processing chr. 22 [██████████████████████████--------------] 64% [02m:15s] Processing chr. 22 [███████████████████████████-------------] 65% [02m:16s] Processing chr. 22 [███████████████████████████-------------] 65% [02m:17s] Processing chr. 22 [███████████████████████████-------------] 66% [02m:18s] Processing chr. 22 [███████████████████████████-------------] 66% [02m:19s] Processing chr. 22 [███████████████████████████-------------] 66% [02m:20s] Processing chr. 22 [███████████████████████████-------------] 67% [02m:21s] Processing chr. 22 [███████████████████████████-------------] 67% [02m:22s] Processing chr. 22 [███████████████████████████-------------] 67% [02m:23s] Processing chr. 22 [████████████████████████████------------] 68% [02m:24s] Processing chr. 22 [████████████████████████████------------] 68% [02m:25s] Processing chr. 22 [████████████████████████████------------] 68% [02m:26s] Processing chr. 22 [████████████████████████████------------] 69% [02m:27s] Processing chr. 22 [████████████████████████████------------] 69% [02m:28s] Processing chr. 22 [█████████████████████████████-----------] 70% [02m:29s] Processing chr. 22 [█████████████████████████████-----------] 70% [02m:30s] Processing chr. 22 [█████████████████████████████-----------] 70% [02m:31s] Processing chr. 22 [█████████████████████████████-----------] 71% [02m:32s] Processing chr. 22 [█████████████████████████████-----------] 71% [02m:33s] Processing chr. 22 [█████████████████████████████-----------] 71% [02m:34s] Processing chr. 22 [█████████████████████████████-----------] 72% [02m:35s] Processing chr. 22 [█████████████████████████████-----------] 72% [02m:36s] Processing chr. 22 [██████████████████████████████----------] 73% [02m:37s] Processing chr. 22 [██████████████████████████████----------] 73% [02m:38s] Processing chr. 22 [██████████████████████████████----------] 73% [02m:39s] Processing chr. 22 [██████████████████████████████----------] 74% [02m:40s] Processing chr. 22 [██████████████████████████████----------] 74% [02m:41s] Processing chr. 22 [██████████████████████████████----------] 74% [02m:42s] Processing chr. 22 [███████████████████████████████---------] 75% [02m:43s] Processing chr. 22 [███████████████████████████████---------] 75% [02m:44s] Processing chr. 22 [███████████████████████████████---------] 75% [02m:45s] Processing chr. 22 [███████████████████████████████---------] 76% [02m:46s] Processing chr. 22 [███████████████████████████████---------] 76% [02m:47s] Processing chr. 22 [███████████████████████████████---------] 77% [02m:48s] Processing chr. 22 [███████████████████████████████---------] 77% [02m:49s] Processing chr. 22 [███████████████████████████████---------] 77% [02m:50s] Processing chr. 22 [████████████████████████████████--------] 78% [02m:51s] Processing chr. 22 [████████████████████████████████--------] 78% [02m:52s] Processing chr. 22 [████████████████████████████████--------] 78% [02m:53s] Processing chr. 22 [████████████████████████████████--------] 78% [02m:54s] Processing chr. 22 [████████████████████████████████--------] 78% [02m:55s] Processing chr. 22 [████████████████████████████████--------] 78% [02m:56s] Processing chr. 22 [████████████████████████████████--------] 78% [02m:57s] Processing chr. 22 [████████████████████████████████--------] 79% [02m:58s] Processing chr. 22 [████████████████████████████████--------] 79% [02m:59s] Processing chr. 22 [████████████████████████████████--------] 79% [03m:00s] Processing chr. 22 [████████████████████████████████--------] 79% [03m:01s] Processing chr. 22 [████████████████████████████████--------] 79% [03m:02s] Processing chr. 22 [████████████████████████████████--------] 79% [03m:03s] Processing chr. 22 [████████████████████████████████--------] 79% [03m:04s] Processing chr. 22 [████████████████████████████████--------] 79% [03m:05s] Processing chr. 22 [█████████████████████████████████-------] 80% [03m:06s] Processing chr. 22 [█████████████████████████████████-------] 80% [03m:07s] Processing chr. 22 [█████████████████████████████████-------] 80% [03m:08s] Processing chr. 22 [█████████████████████████████████-------] 80% [03m:09s] Processing chr. 22 [█████████████████████████████████-------] 80% [03m:10s] Processing chr. 22 [█████████████████████████████████-------] 80% [03m:11s] Processing chr. 22 [█████████████████████████████████-------] 80% [03m:12s] Processing chr. 22 [█████████████████████████████████-------] 81% [03m:13s] Processing chr. 22 [█████████████████████████████████-------] 81% [03m:14s] Processing chr. 22 [█████████████████████████████████-------] 81% [03m:15s] Processing chr. 22 [█████████████████████████████████-------] 81% [03m:16s] Processing chr. 22 [█████████████████████████████████-------] 81% [03m:17s] Processing chr. 22 [█████████████████████████████████-------] 81% [03m:18s] Processing chr. 22 [█████████████████████████████████-------] 81% [03m:19s] Processing chr. 22 [█████████████████████████████████-------] 81% [03m:20s] Processing chr. 22 [█████████████████████████████████-------] 82% [03m:21s] Processing chr. 22 [█████████████████████████████████-------] 82% [03m:22s] Processing chr. 22 [█████████████████████████████████-------] 82% [03m:23s] Processing chr. 22 [█████████████████████████████████-------] 82% [03m:24s] Processing chr. 22 [█████████████████████████████████-------] 82% [03m:25s] Processing chr. 22 [█████████████████████████████████-------] 82% [03m:26s] Processing chr. 22 [█████████████████████████████████-------] 82% [03m:27s] Processing chr. 22 [█████████████████████████████████-------] 82% [03m:28s] Processing chr. 22 [██████████████████████████████████------] 83% [03m:29s] Processing chr. 22 [██████████████████████████████████------] 83% [03m:30s] Processing chr. 22 [██████████████████████████████████------] 83% [03m:31s] Processing chr. 22 [██████████████████████████████████------] 83% [03m:32s] Processing chr. 22 [██████████████████████████████████------] 83% [03m:33s] Processing chr. 22 [██████████████████████████████████------] 83% [03m:34s] Processing chr. 22 [██████████████████████████████████------] 83% [03m:35s] Processing chr. 22 [██████████████████████████████████------] 84% [03m:36s] Processing chr. 22 [██████████████████████████████████------] 84% [03m:37s] Processing chr. 22 [██████████████████████████████████------] 84% [03m:38s] Processing chr. 22 [██████████████████████████████████------] 84% [03m:39s] Processing chr. 22 [██████████████████████████████████------] 84% [03m:40s] Processing chr. 22 [██████████████████████████████████------] 84% [03m:41s] Processing chr. 22 [██████████████████████████████████------] 84% [03m:42s] Processing chr. 22 [██████████████████████████████████------] 84% [03m:43s] Processing chr. 22 [███████████████████████████████████-----] 85% [03m:44s] Processing chr. 22 [███████████████████████████████████-----] 85% [03m:45s] Processing chr. 22 [███████████████████████████████████-----] 85% [03m:46s] Processing chr. 22 [███████████████████████████████████-----] 85% [03m:47s] Processing chr. 22 [███████████████████████████████████-----] 85% [03m:48s] Processing chr. 22 [███████████████████████████████████-----] 85% [03m:49s] Processing chr. 22 [███████████████████████████████████-----] 85% [03m:50s] Processing chr. 22 [███████████████████████████████████-----] 85% [03m:51s] Processing chr. 22 [███████████████████████████████████-----] 86% [03m:52s] Processing chr. 22 [███████████████████████████████████-----] 86% [03m:53s] Processing chr. 22 [███████████████████████████████████-----] 86% [03m:54s] Processing chr. 22 [███████████████████████████████████-----] 86% [03m:55s] Processing chr. 22 [███████████████████████████████████-----] 86% [03m:56s] Processing chr. 22 [███████████████████████████████████-----] 86% [03m:57s] Processing chr. 22 [███████████████████████████████████-----] 86% [03m:58s] Processing chr. 22 [███████████████████████████████████-----] 86% [03m:59s] Processing chr. 22 [███████████████████████████████████-----] 87% [04m:00s] Processing chr. 22 [███████████████████████████████████-----] 87% [04m:01s] Processing chr. 22 [███████████████████████████████████-----] 87% [04m:02s] Processing chr. 22 [███████████████████████████████████-----] 87% [04m:03s] Processing chr. 22 [███████████████████████████████████-----] 87% [04m:04s] Processing chr. 22 [███████████████████████████████████-----] 87% [04m:05s] Processing chr. 22 [███████████████████████████████████-----] 87% [04m:06s] Processing chr. 22 [████████████████████████████████████----] 88% [04m:07s] Processing chr. 22 [████████████████████████████████████----] 88% [04m:08s] Processing chr. 22 [████████████████████████████████████----] 88% [04m:09s] Processing chr. 22 [████████████████████████████████████----] 88% [04m:10s] Processing chr. 22 [████████████████████████████████████----] 88% [04m:11s] Processing chr. 22 [████████████████████████████████████----] 88% [04m:12s] Processing chr. 22 [████████████████████████████████████----] 88% [04m:13s] Processing chr. 22 [████████████████████████████████████----] 88% [04m:14s] Processing chr. 22 [████████████████████████████████████----] 89% [04m:15s] Processing chr. 22 [████████████████████████████████████----] 89% [04m:16s] Processing chr. 22 [████████████████████████████████████----] 89% [04m:17s] Processing chr. 22 [████████████████████████████████████----] 89% [04m:18s] Processing chr. 22 [████████████████████████████████████----] 89% [04m:19s] Processing chr. 22 [████████████████████████████████████----] 89% [04m:20s] Processing chr. 22 [████████████████████████████████████----] 89% [04m:21s] Processing chr. 22 [█████████████████████████████████████---] 90% [04m:22s] Processing chr. 22 [█████████████████████████████████████---] 90% [04m:23s] Processing chr. 22 [█████████████████████████████████████---] 90% [04m:24s] Processing chr. 22 [█████████████████████████████████████---] 90% [04m:25s] Processing chr. 22 [█████████████████████████████████████---] 90% [04m:26s] Processing chr. 22 [█████████████████████████████████████---] 90% [04m:27s] Processing chr. 22 [█████████████████████████████████████---] 90% [04m:28s] Processing chr. 22 [█████████████████████████████████████---] 90% [04m:29s] Processing chr. 22 [█████████████████████████████████████---] 91% [04m:30s] Processing chr. 22 [█████████████████████████████████████---] 91% [04m:31s] Processing chr. 22 [█████████████████████████████████████---] 91% [04m:32s] Processing chr. 22 [█████████████████████████████████████---] 91% [04m:33s] Processing chr. 22 [█████████████████████████████████████---] 91% [04m:34s] Processing chr. 22 [█████████████████████████████████████---] 91% [04m:35s] Processing chr. 22 [█████████████████████████████████████---] 91% [04m:36s] Processing chr. 22 [█████████████████████████████████████---] 92% [04m:37s] Processing chr. 22 [█████████████████████████████████████---] 92% [04m:38s] Processing chr. 22 [█████████████████████████████████████---] 92% [04m:39s] Processing chr. 22 [█████████████████████████████████████---] 92% [04m:40s] Processing chr. 22 [█████████████████████████████████████---] 92% [04m:41s] Processing chr. 22 [█████████████████████████████████████---] 92% [04m:42s] Processing chr. 22 [█████████████████████████████████████---] 92% [04m:43s] Processing chr. 22 [██████████████████████████████████████--] 93% [04m:44s] Processing chr. 22 [██████████████████████████████████████--] 93% [04m:45s] Processing chr. 22 [██████████████████████████████████████--] 93% [04m:46s] Processing chr. 22 [██████████████████████████████████████--] 93% [04m:47s] Processing chr. 22 [██████████████████████████████████████--] 93% [04m:48s] Processing chr. 22 [██████████████████████████████████████--] 93% [04m:49s] Processing chr. 22 [██████████████████████████████████████--] 93% [04m:50s] Processing chr. 22 [██████████████████████████████████████--] 93% [04m:51s] Processing chr. 22 [██████████████████████████████████████--] 94% [04m:52s] Processing chr. 22 [██████████████████████████████████████--] 94% [04m:53s] Processing chr. 22 [██████████████████████████████████████--] 94% [04m:54s] Processing chr. 22 [██████████████████████████████████████--] 94% [04m:55s] Processing chr. 22 [██████████████████████████████████████--] 94% [04m:56s] Processing chr. 22 [██████████████████████████████████████--] 94% [04m:57s] Processing chr. 22 [██████████████████████████████████████--] 94% [04m:58s] Processing chr. 22 [███████████████████████████████████████-] 95% [04m:59s] Processing chr. 22 [███████████████████████████████████████-] 95% [05m:00s] Processing chr. 22 [███████████████████████████████████████-] 95% [05m:01s] Processing chr. 22 [███████████████████████████████████████-] 95% [05m:02s] Processing chr. 22 [███████████████████████████████████████-] 95% [05m:03s] Processing chr. 22 [███████████████████████████████████████-] 95% [05m:04s] Processing chr. 22 [███████████████████████████████████████-] 95% [05m:05s] Processing chr. 22 [███████████████████████████████████████-] 95% [05m:06s] Processing chr. 22 [███████████████████████████████████████-] 95% [05m:07s] Processing chr. 22 [███████████████████████████████████████-] 96% [05m:08s] Processing chr. 22 [███████████████████████████████████████-] 96% [05m:09s] Processing chr. 22 [███████████████████████████████████████-] 96% [05m:10s] Processing chr. 22 [███████████████████████████████████████-] 96% [05m:11s] Processing chr. 22 [███████████████████████████████████████-] 96% [05m:12s] Processing chr. 22 [███████████████████████████████████████-] 96% [05m:13s] Processing chr. 22 [███████████████████████████████████████-] 96% [05m:14s] Processing chr. 22 [███████████████████████████████████████-] 96% [05m:15s] Processing chr. 22 [███████████████████████████████████████-] 97% [05m:16s] Processing chr. 22 [███████████████████████████████████████-] 97% [05m:17s] Processing chr. 22 [███████████████████████████████████████-] 97% [05m:18s] Processing chr. 22 [███████████████████████████████████████-] 97% [05m:19s] Processing chr. 22 [███████████████████████████████████████-] 97% [05m:20s] Processing chr. 22 [███████████████████████████████████████-] 97% [05m:21s] Processing chr. 22 [███████████████████████████████████████-] 97% [05m:22s] Processing chr. 22 [███████████████████████████████████████-] 97% [05m:23s] Processing chr. 22 [████████████████████████████████████████] 98% [05m:24s] Processing chr. 22 [████████████████████████████████████████] 98% [05m:25s] Processing chr. 22 [████████████████████████████████████████] 98% [05m:26s] Processing chr. 22 [████████████████████████████████████████] 98% [05m:27s] Processing chr. 22 [████████████████████████████████████████] 98% [05m:28s] Processing chr. 22 [████████████████████████████████████████] 98% [05m:29s] Processing chr. 22 [████████████████████████████████████████] 98% [05m:30s] Processing chr. 22 [████████████████████████████████████████] 98% [05m:31s] Processing chr. 22 [████████████████████████████████████████] 99% [05m:32s] Processing chr. 22 [████████████████████████████████████████] 99% [05m:33s] Processing chr. 22 [████████████████████████████████████████] 99% [05m:34s] Processing chr. 22 [████████████████████████████████████████] 99% [05m:35s] Processing chr. 22 [████████████████████████████████████████] 99% [05m:36s] Processing chr. 22 [████████████████████████████████████████] 99% [05m:37s] Processing chr. 22 [████████████████████████████████████████] 99% [05m:38s] Processing chr. 22 [████████████████████████████████████████] 99% [05m:39s] Processing chr. 22 [████████████████████████████████████████] 99% [05m:40s] Processing chr. 22 [████████████████████████████████████████] 99% [05m:41s] Processing chr. 22 [████████████████████████████████████████] 99% [05m:42s] Processing chr. 22 [████████████████████████████████████████] 99% [05m:43s] Processing chr. 22 [████████████████████████████████████████] 99% [05m:44s] Processing chr. 22 [████████████████████████████████████████] 99% [05m:45s] Processing chr. 22 [████████████████████████████████████████] 99% [05m:46s] Processing chr. 22 [████████████████████████████████████████] 99% [05m:47s] Processing chr. 22 [████████████████████████████████████████] 99% [05m:48s] Processing chr. 22 [████████████████████████████████████████] 99% [05m:49s] Processing chr. 22 [████████████████████████████████████████] 99% [05m:50s] Processing chr. 22 [████████████████████████████████████████] 99% [05m:51s] Processing chr. 22 [████████████████████████████████████████] 99% [05m:52s] Processing chr. 22 [████████████████████████████████████████] 99% [05m:53s] Processing chr. 22 [████████████████████████████████████████] 99% [05m:54s] Processing chr. 22 [████████████████████████████████████████] 99% [05m:55s] Processing chr. 22 [████████████████████████████████████████] 99% [05m:56s] Processing chr. 22 [████████████████████████████████████████] 99% [05m:57s] Processing chr. 22 [████████████████████████████████████████] 99% [05m:58s] Processing chr. 22 [████████████████████████████████████████] 99% [05m:59s] Processing chr. 22 [████████████████████████████████████████] 99% [06m:00s] Processing chr. 22 [████████████████████████████████████████] 99% [06m:01s] Processing chr. 22 [████████████████████████████████████████] 99% [06m:02s] Processing chr. 22 [████████████████████████████████████████] 99% [06m:03s] Processing chr. 22 [████████████████████████████████████████] 99% [06m:04s] Processing chr. 22 [████████████████████████████████████████] 99% [06m:05s] Processing chr. 22 [████████████████████████████████████████] 99% [06m:06s] Processing chr. 22 [████████████████████████████████████████] 99% [06m:07s] Processing chr. 22 [████████████████████████████████████████] 99% [06m:08s] Processing chr. 22 [████████████████████████████████████████] 99% [06m:09s] Processing chr. 22 [████████████████████████████████████████] 99% [06m:10s] Processing chr. 22 [████████████████████████████████████████] 99% [06m:11s] Processing chr. 22 [████████████████████████████████████████] 99% [06m:12s] Processing chr. 22 [████████████████████████████████████████] 99% [06m:13s] Processing chr. 22 [████████████████████████████████████████] 99% [06m:14s] Processing chr. 22 [████████████████████████████████████████] 99% [06m:15s] Processing chr. 22 [████████████████████████████████████████] 99% [06m:16s] Processing chr. 22 [████████████████████████████████████████] 99% [06m:17s] Processing chr. 22 [████████████████████████████████████████] 99% [06m:18s] Processing chr. 22 [████████████████████████████████████████] 99% [06m:19s] Processing chr. 22 [████████████████████████████████████████] 99% [06m:20s] Processing chr. 22 [████████████████████████████████████████] 99% [06m:21s] Processing chr. 22 [████████████████████████████████████████] 99% [06m:22s] Processing chr. 22 [████████████████████████████████████████] 99% [06m:23s] Processing chr. 22 [████████████████████████████████████████] 99% [06m:24s] Processing chr. 22 [████████████████████████████████████████] 99% [06m:25s] Processing chr. 22 [████████████████████████████████████████] 99% [06m:26s] Processing chr. 22 [████████████████████████████████████████] 99% [06m:27s] Processing chr. 22 [████████████████████████████████████████] 99% [06m:28s] Processing chr. 22 [████████████████████████████████████████] 99% [06m:29s] Processing chr. 22 [████████████████████████████████████████] 99% [06m:30s] Processing chr. 22 [████████████████████████████████████████] 99% [06m:31s] Processing chr. 22 [████████████████████████████████████████] 99% [06m:32s] Processing chr. 22 [████████████████████████████████████████] 99% [06m:33s] Processing chr. 22 [████████████████████████████████████████] 99% [06m:34s] Processing chr. 22 [████████████████████████████████████████] 99% [06m:35s] Processing chr. 22 [████████████████████████████████████████] 99% [06m:36s] Processing chr. 22 [████████████████████████████████████████] 99% [06m:37s] Processing chr. 22 [████████████████████████████████████████] 99% [06m:38s] Processing chr. 22 [████████████████████████████████████████] 99% [06m:39s] Processing chr. 22 [████████████████████████████████████████] 99% [06m:40s] Processing chr. 22 [████████████████████████████████████████] 99% [06m:41s] Processing chr. 22 [████████████████████████████████████████] 99% [06m:42s] Processing chr. 22 [████████████████████████████████████████] 99% [06m:43s] Processing chr. 22 [████████████████████████████████████████] 99% [06m:44s] Processing chr. 22 [████████████████████████████████████████] 99% [06m:45s] Processing chr. 22 [████████████████████████████████████████] 99% [06m:46s] Processing chr. 22 [████████████████████████████████████████] 99% [06m:47s] Processing chr. 22 [████████████████████████████████████████] 99% [06m:48s] Processing chr. 22 [████████████████████████████████████████] 99% [06m:49s] Processing chr. 22 [████████████████████████████████████████] 99% [06m:50s] Processing chr. 22 [████████████████████████████████████████] 99% [06m:51s] Processing chr. 22 [████████████████████████████████████████] 99% [06m:52s] Processing chr. 22 [████████████████████████████████████████] 99% [06m:53s] Processing chr. 22 [████████████████████████████████████████] 99% [06m:54s] Processing chr. 22 [████████████████████████████████████████] 99% [06m:55s] Processing chr. 22 [████████████████████████████████████████] 99% [06m:56s] Processing chr. 22 [████████████████████████████████████████] 99% [06m:57s] Processing chr. 22 [████████████████████████████████████████] 99% [06m:58s] Processing chr. 22 [████████████████████████████████████████] 99% [06m:59s] Processing chr. 22 [████████████████████████████████████████] 99% [07m:00s] Processing chr. 22 [████████████████████████████████████████] 99% [07m:01s] Processing chr. 22 [████████████████████████████████████████] 100% [07m:05s] Reads simulated  # let us load the dplyr library to filter the `simulate_seq` output library(dplyr) #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union  seq_results$parameters #> $sequencer #> list() #>  #> $reference_genome #> NULL #>  #> $chromosomes #> NULL #>  #> $coverage #> [1] 30 #>  #> $read_size #> [1] 150 #>  #> $insert_size_mean #> [1] 0 #>  #> $insert_size_stddev #> [1] 10 #>  #> $output_dir #> [1] \"ProCESS_SAM\" #>  #> $write_SAM #> [1] FALSE #>  #> $update_SAM #> [1] FALSE #>  #> $cell_labelling #> NULL #>  #> $purity #> [1] 1 #>  #> $with_normal_sample #> [1] TRUE #>  #> $filename_prefix #> [1] \"chr_\" #>  #> $template_name_prefix #> [1] \"r\" #>  #> $include_non_sequenced_mutations #> [1] FALSE #>  #> $seed #> [1] -1800664448  seq_results$mutations %>% head #>   chr  chr_pos ref   alt causes  classes S_1_1.occurrences S_1_1.coverage #> 1  22 16051493   G     A        germinal                17             25 #> 2  22 16052080   G     A        germinal                17             33 #> 3  22 16052167   A AAAAC        germinal                37             37 #> 4  22 16053659   A     C        germinal                28             28 #> 5  22 16053863   G     A        germinal                22             41 #> 6  22 16054740   A     G        germinal                31             31 #>   S_1_1.VAF S_1_2.occurrences S_1_2.coverage S_1_2.VAF S_2_1.occurrences #> 1 0,6800000                17             32 0,5312500                12 #> 2 0,5151515                22             37 0,5945946                19 #> 3 1,0000000                33             33 1,0000000                35 #> 4 1,0000000                30             30 1,0000000                35 #> 5 0,5365854                15             33 0,4545455                14 #> 6 1,0000000                24             24 1,0000000                36 #>   S_2_1.coverage S_2_1.VAF S_2_2.occurrences S_2_2.coverage S_2_2.VAF #> 1             30 0,4000000                21             36 0,5833333 #> 2             40 0,4750000                13             27 0,4814815 #> 3             35 1,0000000                24             24 1,0000000 #> 4             35 1,0000000                31             31 1,0000000 #> 5             41 0,3414634                17             32 0,5312500 #> 6             36 1,0000000                31             31 1,0000000 #>   normal_sample.occurrences normal_sample.coverage normal_sample.VAF #> 1                        14                     32         0,4375000 #> 2                         6                     23         0,2608696 #> 3                        24                     24         1,0000000 #> 4                        24                     24         1,0000000 #> 5                        15                     33         0,4545455 #> 6                        28                     28         1,0000000"},{"path":"https://caravagnalab.github.io/ProCESS/articles/sequencing.html","id":"plotting-sequencing-data","dir":"Articles","previous_headings":"","what":"Plotting Sequencing Data","title":"Sequencing Simulation","text":"ProCESS/RACE provides functions plot Variant Allele Frequency (VAF), B-Allele Frequency (BAF), Depth Ratio (DR) sample.    VAF VAF marginal distributions can plot .     VAF VAF marginal plots can labelled.","code":"library(dplyr)  # filter germinal mutations f_seq <- seq_results$mutations %>% filter(classes != \"germinal\")  # plot the VAF of the mutations sequenced on the sample S_2_2 # over the reference genome plot_VAF(f_seq, sample = \"S_2_2\") # plot the BAF of the mutations sequenced on the sample S_2_2 # over the reference genome plot_BAF(f_seq, sample = \"S_2_2\") # plot the DR of the mutations sequenced on the sample S_2_2 # over the reference genome plot_DR(f_seq, sample = \"S_2_2\") # plotting the VAF histogram plot_VAF_histogram(f_seq, cuts = c(0.02, 1)) # plotting the VAF marginals plot_VAF_marginals(f_seq, samples = c(\"S_1_1\", \"S_1_2\", \"S_2_2\")) #> [[1]] #>  #> [[2]] #>  #> [[3]] # plotting the VAF histogram with labels plot_VAF_histogram(f_seq, labels = f_seq[\"classes\"], cuts = c(0.02, 1)) # plotting the VAF marginals and labelling it plot_VAF_marginals(f_seq, samples = c(\"S_1_1\", \"S_1_2\", \"S_2_2\"),                    labels = f_seq[\"classes\"]) #> [[1]] #>  #> [[2]] #>  #> [[3]]"},{"path":"https://caravagnalab.github.io/ProCESS/articles/sequencing.html","id":"saving-the-simulated-reads","dir":"Articles","previous_headings":"","what":"Saving the Simulated Reads","title":"Sequencing Simulation","text":"ProCESS/RACE can also save simulated reads SAM format (see (Li et al. 2009)). setting optional parameter write_SAM TRUE, function simulate_seq() creates directory ProCESS_SAM saves SAM files . file named one reference genome chromosomes contains simulated reads. reads split read groups corresponding collected samples. SAM file contains reads produced simulating sequencing samples. command-line tools samtools can used split reads sample. resulting files named samples, containing reads one sample. Please refer samtools split manual details. simulate_seq() parameter output_dir set SAM output directory. See following section usage examples parameter.","code":"seq_results <- simulate_seq(phylo_forest, coverage = 2.5, write_SAM = TRUE) #>  [█---------------------------------------] 0% [00m:00s] Found 22 [█---------------------------------------] 0% [00m:00s] Reading 22 [█---------------------------------------] 0% [00m:01s] Reading 22 [█---------------------------------------] 0% [00m:01s] Processing chr. 22 [█---------------------------------------] 0% [00m:04s] Processing chr. 22 [███-------------------------------------] 5% [00m:05s] Processing chr. 22 [█████-----------------------------------] 10% [00m:06s] Processing chr. 22 [███████---------------------------------] 16% [00m:07s] Processing chr. 22 [█████████-------------------------------] 21% [00m:08s] Processing chr. 22 [███████████-----------------------------] 26% [00m:09s] Processing chr. 22 [█████████████---------------------------] 31% [00m:10s] Processing chr. 22 [███████████████-------------------------] 36% [00m:11s] Processing chr. 22 [█████████████████-----------------------] 42% [00m:12s] Processing chr. 22 [███████████████████---------------------] 47% [00m:13s] Processing chr. 22 [█████████████████████-------------------] 50% [00m:14s] Processing chr. 22 [██████████████████████------------------] 52% [00m:15s] Processing chr. 22 [███████████████████████-----------------] 56% [00m:16s] Processing chr. 22 [█████████████████████████---------------] 60% [00m:17s] Processing chr. 22 [██████████████████████████--------------] 63% [00m:18s] Processing chr. 22 [███████████████████████████-------------] 66% [00m:19s] Processing chr. 22 [████████████████████████████------------] 69% [00m:20s] Processing chr. 22 [█████████████████████████████-----------] 72% [00m:21s] Processing chr. 22 [███████████████████████████████---------] 76% [00m:22s] Processing chr. 22 [████████████████████████████████--------] 78% [00m:23s] Processing chr. 22 [████████████████████████████████--------] 79% [00m:24s] Processing chr. 22 [█████████████████████████████████-------] 80% [00m:25s] Processing chr. 22 [█████████████████████████████████-------] 81% [00m:26s] Processing chr. 22 [█████████████████████████████████-------] 82% [00m:27s] Processing chr. 22 [██████████████████████████████████------] 84% [00m:28s] Processing chr. 22 [███████████████████████████████████-----] 85% [00m:29s] Processing chr. 22 [███████████████████████████████████-----] 86% [00m:30s] Processing chr. 22 [███████████████████████████████████-----] 87% [00m:31s] Processing chr. 22 [████████████████████████████████████----] 88% [00m:32s] Processing chr. 22 [████████████████████████████████████----] 89% [00m:33s] Processing chr. 22 [█████████████████████████████████████---] 90% [00m:34s] Processing chr. 22 [█████████████████████████████████████---] 92% [00m:35s] Processing chr. 22 [██████████████████████████████████████--] 93% [00m:36s] Processing chr. 22 [██████████████████████████████████████--] 94% [00m:37s] Processing chr. 22 [███████████████████████████████████████-] 95% [00m:38s] Processing chr. 22 [███████████████████████████████████████-] 96% [00m:39s] Processing chr. 22 [████████████████████████████████████████] 98% [00m:40s] Processing chr. 22 [████████████████████████████████████████] 99% [00m:41s] Processing chr. 22 [████████████████████████████████████████] 99% [00m:42s] Processing chr. 22 [████████████████████████████████████████] 99% [00m:43s] Processing chr. 22 [████████████████████████████████████████] 99% [00m:44s] Processing chr. 22 [████████████████████████████████████████] 99% [00m:45s] Processing chr. 22 [████████████████████████████████████████] 99% [00m:46s] Processing chr. 22 [████████████████████████████████████████] 99% [00m:47s] Processing chr. 22 [████████████████████████████████████████] 99% [00m:48s] Processing chr. 22 [████████████████████████████████████████] 99% [00m:49s] Processing chr. 22 [████████████████████████████████████████] 99% [00m:50s] Processing chr. 22 [████████████████████████████████████████] 99% [00m:51s] Processing chr. 22 [████████████████████████████████████████] 100% [00m:54s] Reads simulated  sam_files <- list.files(\"ProCESS_SAM/\")  ex_file <- paste(\"ProCESS_SAM/\", sam_files[1], sep = \"\") for (line in readLines(ex_file, n = 10)) {   cat(paste(line, \"\\n\")) } #> @HD  VN:1.6  SO:unknown  #> @SQ  SN:22   LN:51304566 AN:chr22, chromosome22,chromosome_22,chr_22  #> @RG  ID:S_1_1    SM:S_1_1    PL:ILLUMINA  #> @RG  ID:S_1_2    SM:S_1_2    PL:ILLUMINA  #> @RG  ID:S_2_1    SM:S_2_1    PL:ILLUMINA  #> @RG  ID:S_2_2    SM:S_2_2    PL:ILLUMINA  #> @RG  ID:normal_sample    SM:normal_sample    PL:ILLUMINA  #> r2200000000000   0   22  24829765    93  150M    *   0   0   CCCGGAGCCAGGGTGAGCCTGGGATCAGGGCCTGGTCTGCAGTGTCAGCATGGTGAGCTGGCGACGGGGCCCCAGGCTCAGCAGGGGCTCCCCAGGGCCAGCACGTGGCCAGCAGTCATGCCGAACTGACTGACCCCTATGGGCGCAGGG  FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF  RG:Z:S_1_1  NM:i:0  #> r2200000000001   16  22  26095059    93  150M    *   0   0   GCGGGCAGGAGGTGGGACTGTGTGCAGGAGCCCTCACTGCCTCAGCTGTGAACAAGGGGATAATGCCACCTGTTCTACTTCCTCACAAAGTTGCATGTGGGAGAACCTCAAAAATATGCCTGTCAGCCTCCTGTGCATTTTTCCTGTGTT  FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF  RG:Z:S_1_1  NM:i:0  #> r2200000000002   16  22  27649479    93  150M    *   0   0   TCTTATGCTTCTTGGATATCATCGGAGGGAAAACGGGGACTATGCAACAACAAAGAATGCAAGAAACACCCAGGGGAGCAGGGGTGGGGGCTTTCAATCGCCTGGAATCAATGCACAGTATTCCTGACTCTCGCTGGAATACTGTGGGTC  FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF  RG:Z:S_1_1  NM:i:0 foo@bar % samtools split  -f \"%*_%\\!.sam\" ProCESS_SAM/chr_22.sam foo@bar % ls chr_22_* chr_22_S_1_1.sam        chr_22_S_1_2.sam        chr_22_S_2_1.sam        chr_22_S_2_2.sam"},{"path":"https://caravagnalab.github.io/ProCESS/articles/sequencing.html","id":"sample-purity","dir":"Articles","previous_headings":"","what":"Sample Purity","title":"Sequencing Simulation","text":"sample purity represents concentration tumour cells sample. formally, ratio number tumour cells sample sample cells, either tumour normal (.e., cells germline pre-neoplastic mutations). ProCESS can simulate different sample purity sequencing simulations. default value parameter purity 1, .e., simulate_seq() assumes cells sample neoplastic default. function simulate_normal_seq() simulates sequencing sample whose cells germline tumoral pre-neoplastic mutations. pre-neoplastic mutations can avoided setting optional parameter with_preneoplastic.","code":"# simulate the sequencing of a sample in which 70% of the cells are # tumour cells seq_results <- simulate_seq(phylo_forest, coverage = 2.5, purity = 0.7,                             write_SAM = TRUE, output_dir = \"SAM_0.7\") #>  [█---------------------------------------] 0% [00m:00s] Found 22 [█---------------------------------------] 0% [00m:00s] Reading 22 [█---------------------------------------] 0% [00m:00s] Reading 22 [█---------------------------------------] 0% [00m:01s] Processing chr. 22 [█---------------------------------------] 0% [00m:05s] Processing chr. 22 [███-------------------------------------] 5% [00m:06s] Processing chr. 22 [█████-----------------------------------] 10% [00m:07s] Processing chr. 22 [███████---------------------------------] 16% [00m:08s] Processing chr. 22 [█████████-------------------------------] 21% [00m:09s] Processing chr. 22 [███████████-----------------------------] 26% [00m:10s] Processing chr. 22 [█████████████---------------------------] 31% [00m:11s] Processing chr. 22 [███████████████-------------------------] 36% [00m:12s] Processing chr. 22 [█████████████████-----------------------] 42% [00m:13s] Processing chr. 22 [███████████████████---------------------] 47% [00m:14s] Processing chr. 22 [█████████████████████-------------------] 50% [00m:15s] Processing chr. 22 [██████████████████████------------------] 52% [00m:16s] Processing chr. 22 [███████████████████████-----------------] 57% [00m:17s] Processing chr. 22 [█████████████████████████---------------] 60% [00m:18s] Processing chr. 22 [██████████████████████████--------------] 63% [00m:19s] Processing chr. 22 [███████████████████████████-------------] 66% [00m:20s] Processing chr. 22 [█████████████████████████████-----------] 70% [00m:21s] Processing chr. 22 [██████████████████████████████----------] 73% [00m:22s] Processing chr. 22 [███████████████████████████████---------] 76% [00m:23s] Processing chr. 22 [████████████████████████████████--------] 78% [00m:24s] Processing chr. 22 [████████████████████████████████--------] 79% [00m:25s] Processing chr. 22 [█████████████████████████████████-------] 80% [00m:26s] Processing chr. 22 [█████████████████████████████████-------] 81% [00m:27s] Processing chr. 22 [██████████████████████████████████------] 83% [00m:28s] Processing chr. 22 [██████████████████████████████████------] 84% [00m:29s] Processing chr. 22 [███████████████████████████████████-----] 85% [00m:30s] Processing chr. 22 [███████████████████████████████████-----] 86% [00m:31s] Processing chr. 22 [███████████████████████████████████-----] 87% [00m:32s] Processing chr. 22 [████████████████████████████████████----] 88% [00m:33s] Processing chr. 22 [████████████████████████████████████----] 89% [00m:34s] Processing chr. 22 [█████████████████████████████████████---] 91% [00m:35s] Processing chr. 22 [█████████████████████████████████████---] 91% [00m:36s] Processing chr. 22 [█████████████████████████████████████---] 92% [00m:37s] Processing chr. 22 [█████████████████████████████████████---] 92% [00m:38s] Processing chr. 22 [█████████████████████████████████████---] 92% [00m:39s] Processing chr. 22 [██████████████████████████████████████--] 93% [00m:40s] Processing chr. 22 [██████████████████████████████████████--] 94% [00m:41s] Processing chr. 22 [███████████████████████████████████████-] 95% [00m:42s] Processing chr. 22 [███████████████████████████████████████-] 95% [00m:43s] Processing chr. 22 [███████████████████████████████████████-] 96% [00m:44s] Processing chr. 22 [███████████████████████████████████████-] 97% [00m:45s] Processing chr. 22 [████████████████████████████████████████] 98% [00m:46s] Processing chr. 22 [████████████████████████████████████████] 99% [00m:47s] Processing chr. 22 [████████████████████████████████████████] 99% [00m:48s] Processing chr. 22 [████████████████████████████████████████] 99% [00m:49s] Processing chr. 22 [████████████████████████████████████████] 99% [00m:50s] Processing chr. 22 [████████████████████████████████████████] 99% [00m:51s] Processing chr. 22 [████████████████████████████████████████] 99% [00m:52s] Processing chr. 22 [████████████████████████████████████████] 99% [00m:53s] Processing chr. 22 [████████████████████████████████████████] 99% [00m:54s] Processing chr. 22 [████████████████████████████████████████] 99% [00m:55s] Processing chr. 22 [████████████████████████████████████████] 99% [00m:56s] Processing chr. 22 [████████████████████████████████████████] 99% [00m:57s] Processing chr. 22 [████████████████████████████████████████] 99% [00m:58s] Processing chr. 22 [████████████████████████████████████████] 100% [01m:02s] Reads simulated  sam_files <- list.files(\"SAM_0.7/\")  ex_file <- paste(\"SAM_0.7/\", sam_files[1], sep = \"\") for (line in readLines(ex_file, n = 10)) {   cat(paste(line, \"\\n\")) } #> @HD  VN:1.6  SO:unknown  #> @SQ  SN:22   LN:51304566 AN:chr22, chromosome22,chromosome_22,chr_22  #> @RG  ID:S_1_1    SM:S_1_1    PL:ILLUMINA  #> @RG  ID:S_1_2    SM:S_1_2    PL:ILLUMINA  #> @RG  ID:S_2_1    SM:S_2_1    PL:ILLUMINA  #> @RG  ID:S_2_2    SM:S_2_2    PL:ILLUMINA  #> @RG  ID:normal_sample    SM:normal_sample    PL:ILLUMINA  #> r2200000000000   16  22  24241870    93  150M    *   0   0   ATTGACAGTAAGGATGCTGATGACTATTAGTGAATAAAAAGCCAGAATGAAGGACATGAACTTACACACATTTAACATTTCGGCACAGGTCAAGTAACTACAATAACCTATATACAAGACAAACAAGACAAAGTATATTTAGAATACATG  FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF  RG:Z:S_1_1  NM:i:0  #> r2200000000001   0   22  35233547    93  150M    *   0   0   GGATCTCAAACATGCTTTCTTTACTATTCCTTTGCACCTTTCATCCCAGCCTCTCTTCGCTTTCACTTGGACTGACCCTGACACCCATCAGGCTCAGCAAATTACGTGGGCTGTACTGCCACAAGGCTTCACAGACAGCCCCCATTACTT  FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF  RG:Z:S_1_1  NM:i:0  #> r2200000000002   16  22  40342397    93  150M    *   0   0   TTTACATGGGTCTCATGCATTACAAGAAGGGGGCCACTATTTTAACTCAATTCAAAAATGTTAAAATCAAAATTCCCAAAATGTACTTGGTTTATAATATATCATAAAATAAGTAATCTGACCAATTGAGCCTCCCAACTCGAAGACCAA  FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF  RG:Z:S_1_1  NM:i:0"},{"path":"https://caravagnalab.github.io/ProCESS/articles/sequencing.html","id":"simulating-sequencing-errors","dir":"Articles","previous_headings":"","what":"Simulating Sequencing Errors","title":"Sequencing Simulation","text":"simulate sequencing errors, users need specify sequencer function simulate_seq(). moment, two classes implementing sequencers: ErrorlessIlluminaSequencer class BasicIlluminaSequencer classes.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/articles/sequencing.html","id":"the-errorlessilluminasequencer-class","dir":"Articles","previous_headings":"Simulating Sequencing Errors","what":"The ErrorlessIlluminaSequencer Class","title":"Sequencing Simulation","text":"class models perfect Illumina sequencer. sequencing errors produced, bases maximum quality. following code simulates sequencing using kind sequencer.","code":"# build an error-less Illumina sequencer no_error_seq <- ErrorlessIlluminaSequencer()  # let us simulate a 2.5x sequencing of the four sample # on the error-less sequencer seq_results <- simulate_seq(phylo_forest, sequencer = no_error_seq,                             coverage = 2.5)"},{"path":"https://caravagnalab.github.io/ProCESS/articles/sequencing.html","id":"the-basicilluminasequencer-class","dir":"Articles","previous_headings":"Simulating Sequencing Errors","what":"The BasicIlluminaSequencer Class","title":"Sequencing Simulation","text":"class sets sequencing error rate independent base error occurs, position base read position read genome.","code":"# build a basic Illumina sequencer model in which errors occur # at rate 4e-3 per base basic_seq <- BasicIlluminaSequencer(4e-3)  # let us simulate a 2.5x sequencing of the four sample # on the error-less sequencer seq_results <- simulate_seq(phylo_forest, sequencer = basic_seq,                             coverage = 2.5, write_SAM = TRUE)"},{"path":"https://caravagnalab.github.io/ProCESS/articles/sequencing.html","id":"chromosome-sequencing","dir":"Articles","previous_headings":"","what":"Chromosome Sequencing","title":"Sequencing Simulation","text":"function simulate_seq() allows users simulate sequencing selection reference chromosomes using parameter chromosomes.","code":"# let us simulate a 2.5x sequencing of the chromosomes 22 and # X of the four sample seq_results <- simulate_seq(phylo_forest, chromosomes = c(\"22\", \"X\"),                             coverage = 2.5, write_SAM = TRUE)"},{"path":"https://caravagnalab.github.io/ProCESS/articles/sequencing.html","id":"updating-the-sam-output-directory","dir":"Articles","previous_headings":"","what":"Updating the SAM Output Directory","title":"Sequencing Simulation","text":"Users may want simulate sequencing multiple steps, instance, splitting chromosome reaching aimed coverage different simulations. However, ProCESS prevents successive writing directory default. Boolean parameter update_SAM allows multiple writing directory. output directory already contains SAM file associated chromosome, alignments chromosome saved file whose name first available, format \"chr_{chromosome name}_{natural number}.sam\".","code":"# the default SAM directory already exists sam_files <- list.files(\"ProCESS_SAM/\")  # since the default save directory already exists, any call to # `simulate_seq` throws an error tryCatch(   {     simulate_seq(phylo_forest, coverage = 2.5, write_SAM = TRUE)   },   error = function(e) {     print(e)   } ) #> <std::domain_error in eval(expr, envir): \"ProCESS_SAM\" already exists>  # setting `update_SAM` to TRUE enables successive writing in # the output directory seq_results <- simulate_seq(phylo_forest, coverage = 2.5,                             write_SAM = TRUE, update_SAM = TRUE) #>  [█---------------------------------------] 0% [00m:00s] Found 22 [█---------------------------------------] 0% [00m:00s] Reading 22 [█---------------------------------------] 0% [00m:00s] Reading 22 [█---------------------------------------] 0% [00m:01s] Processing chr. 22 [█---------------------------------------] 0% [00m:06s] Processing chr. 22 [█---------------------------------------] 2% [00m:07s] Processing chr. 22 [██--------------------------------------] 4% [00m:08s] Processing chr. 22 [███-------------------------------------] 7% [00m:09s] Processing chr. 22 [████------------------------------------] 9% [00m:10s] Processing chr. 22 [█████-----------------------------------] 10% [00m:11s] Processing chr. 22 [█████-----------------------------------] 12% [00m:12s] Processing chr. 22 [██████----------------------------------] 13% [00m:13s] Processing chr. 22 [████████--------------------------------] 18% [00m:14s] Processing chr. 22 [█████████-------------------------------] 22% [00m:15s] Processing chr. 22 [███████████-----------------------------] 25% [00m:16s] Processing chr. 22 [████████████----------------------------] 28% [00m:17s] Processing chr. 22 [██████████████--------------------------] 33% [00m:18s] Processing chr. 22 [████████████████------------------------] 38% [00m:19s] Processing chr. 22 [█████████████████-----------------------] 41% [00m:20s] Processing chr. 22 [███████████████████---------------------] 45% [00m:21s] Processing chr. 22 [████████████████████--------------------] 48% [00m:22s] Processing chr. 22 [█████████████████████-------------------] 51% [00m:23s] Processing chr. 22 [██████████████████████------------------] 54% [00m:24s] Processing chr. 22 [███████████████████████-----------------] 57% [00m:25s] Processing chr. 22 [█████████████████████████---------------] 60% [00m:26s] Processing chr. 22 [██████████████████████████--------------] 64% [00m:27s] Processing chr. 22 [███████████████████████████-------------] 67% [00m:28s] Processing chr. 22 [█████████████████████████████-----------] 70% [00m:29s] Processing chr. 22 [██████████████████████████████----------] 73% [00m:30s] Processing chr. 22 [███████████████████████████████---------] 76% [00m:31s] Processing chr. 22 [████████████████████████████████--------] 78% [00m:32s] Processing chr. 22 [████████████████████████████████--------] 79% [00m:33s] Processing chr. 22 [█████████████████████████████████-------] 80% [00m:34s] Processing chr. 22 [█████████████████████████████████-------] 81% [00m:35s] Processing chr. 22 [██████████████████████████████████------] 83% [00m:36s] Processing chr. 22 [██████████████████████████████████------] 84% [00m:37s] Processing chr. 22 [███████████████████████████████████-----] 85% [00m:38s] Processing chr. 22 [███████████████████████████████████-----] 86% [00m:39s] Processing chr. 22 [███████████████████████████████████-----] 87% [00m:40s] Processing chr. 22 [████████████████████████████████████----] 88% [00m:41s] Processing chr. 22 [████████████████████████████████████----] 89% [00m:42s] Processing chr. 22 [█████████████████████████████████████---] 90% [00m:43s] Processing chr. 22 [█████████████████████████████████████---] 91% [00m:44s] Processing chr. 22 [██████████████████████████████████████--] 93% [00m:45s] Processing chr. 22 [██████████████████████████████████████--] 94% [00m:46s] Processing chr. 22 [██████████████████████████████████████--] 94% [00m:47s] Processing chr. 22 [███████████████████████████████████████-] 95% [00m:48s] Processing chr. 22 [███████████████████████████████████████-] 96% [00m:49s] Processing chr. 22 [███████████████████████████████████████-] 97% [00m:50s] Processing chr. 22 [████████████████████████████████████████] 98% [00m:51s] Processing chr. 22 [████████████████████████████████████████] 99% [00m:52s] Processing chr. 22 [████████████████████████████████████████] 99% [00m:53s] Processing chr. 22 [████████████████████████████████████████] 99% [00m:54s] Processing chr. 22 [████████████████████████████████████████] 99% [00m:55s] Processing chr. 22 [████████████████████████████████████████] 99% [00m:56s] Processing chr. 22 [████████████████████████████████████████] 99% [00m:57s] Processing chr. 22 [████████████████████████████████████████] 99% [00m:58s] Processing chr. 22 [████████████████████████████████████████] 99% [00m:59s] Processing chr. 22 [████████████████████████████████████████] 99% [01m:00s] Processing chr. 22 [████████████████████████████████████████] 99% [01m:01s] Processing chr. 22 [████████████████████████████████████████] 99% [01m:02s] Processing chr. 22 [████████████████████████████████████████] 99% [01m:03s] Processing chr. 22 [████████████████████████████████████████] 99% [01m:04s] Processing chr. 22 [████████████████████████████████████████] 99% [01m:05s] Processing chr. 22 [████████████████████████████████████████] 99% [01m:06s] Processing chr. 22 [████████████████████████████████████████] 99% [01m:07s] Processing chr. 22 [████████████████████████████████████████] 100% [01m:11s] Reads simulated list.files(\"ProCESS_SAM/\") #> [1] \"chr_22_0.sam\" \"chr_22.sam\""},{"path":"https://caravagnalab.github.io/ProCESS/articles/time_series.html","id":"default-history-based-data","dir":"Articles","previous_headings":"","what":"Default History-Based Data","title":"Time Series Analysis","text":"However, required end run_to_* methods, RACES stores data number species cells, event firings. data can extracted. Let us consider simulation sim produced vignette(\"tissue_simulation\"). time-series can plot using plot_timeseries()","code":"library(ProCESS) library(dplyr) #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union  # The firings sim$get_firing_history() %>% head() #>    event mutant epistate fired     time #> 1  death      A        -    44 69.90667 #> 2 growth      A        -   331 69.90667 #> 3 switch      A        -    46 69.90667 #> 4  death      A        +  1097 69.90667 #> 5 growth      A        +  1650 69.90667 #> 6 switch      A        +   100 69.90667  # For example, total number of the deaths on `B+` at the end of the # previous calls of the `run_to_*` methods sim$get_firing_history() %>%   filter(event == \"death\", mutant == \"B\", epistate == \"-\") #>   event mutant epistate fired      time #> 1 death      B        -     0  69.90667 #> 2 death      B        -     0  84.11499 #> 3 death      B        -     0  99.12279 #> 4 death      B        -   398 135.91017 #> 5 death      B        -   706 142.91031  # The counts sim$get_count_history() %>% head() #>   mutant epistate count     time #> 1      A        -   341 69.90667 #> 2      A        +   500 69.90667 #> 3      B        -     0 69.90667 #> 4      B        +     0 69.90667 #> 5      C        -     0 69.90667 #> 6      C        +     0 69.90667 # Time-series plot plot_timeseries(sim)"},{"path":"https://caravagnalab.github.io/ProCESS/articles/time_series.html","id":"custom-time-series","dir":"Articles","previous_headings":"","what":"Custom Time-Series","title":"Time Series Analysis","text":"default time-series enough coarse-grained, one can set SpatialSimulation$history_delta increase sampling rate state (default, SpatialSimulation$history_delta set 00). show re-simulating tumour two submutants. time-series can plot using plot_timeseries().","code":"# Example time-series on a new simulation, with coarse-grained time-series sim <- SpatialSimulation(\"Finer Time Series\")  sim$history_delta <- 1 sim$death_activation_level <- 100  # A sim$add_mutant(name = \"A\",                epigenetic_rates = c(\"+-\" = 0.01, \"-+\" = 0.01),                growth_rates = c(\"+\" = 0.2, \"-\" = 0.08),                death_rates = c(\"+\" = 0.1, \"-\" = 0.01))  sim$place_cell(\"A+\", 500, 500) sim$run_up_to_size(\"A+\", 400) #>  [████████████████████████████████████████] 100% [00m:00s] Saving snapshot  # B (linear inside A) sim$add_mutant(name = \"B\",                epigenetic_rates = c(\"+-\" = 0.05, \"-+\" = 0.05),                growth_rates = c(\"+\" = 0.3, \"-\" = 0.3),                death_rates = c(\"+\" = 0.05, \"-\" = 0.1))  sim$mutate_progeny(sim$choose_cell_in(\"A\"), \"B\")  sim$run_up_to_size(\"B-\", 300) #>  [████████████████████████████████████████] 100% [00m:00s] Saving snapshot  # C (linear inside B) sim$add_mutant(name = \"C\",                epigenetic_rates = c(\"+-\" = 0.1, \"-+\" = 0.1),                growth_rates = c(\"+\" = 0.2, \"-\" = 0.4),                death_rates = c(\"+\" = 0.1, \"-\" = 0.01))  sim$mutate_progeny(sim$choose_cell_in(\"B\"), \"C\")  # D (linear inside A, so branching with C) - same parameters of C sim$add_mutant(name = \"D\",                epigenetic_rates = c(\"+-\" = 0.1, \"-+\" = 0.1),                growth_rates = c(\"+\" = 0.2, \"-\" = 0.4),                death_rates = c(\"+\" = 0.1, \"-\" = 0.01))  sim$mutate_progeny(sim$choose_cell_in(\"A\"), \"D\")  sim$run_up_to_size(\"D+\", 1000) #>  [████████████████████--------------------] 48% [00m:00s] Cells: 36406 [████████████████████████████████████████] 99% [00m:01s] Cells: 60106 [████████████████████████████████████████] 100% [00m:01s] Saving snapshot # Time-series plot plot_timeseries(sim) # Logscale helps seeing the different effective growth rates plot_timeseries(sim) + ggplot2::scale_y_log10() #> Warning in ggplot2::scale_y_log10(): log-10 transformation introduced infinite values. #> log-10 transformation introduced infinite values."},{"path":"https://caravagnalab.github.io/ProCESS/articles/time_series.html","id":"muller-plot","dir":"Articles","previous_headings":"Custom Time-Series","what":"Muller Plot","title":"Time Series Analysis","text":"can also get Muller plot evolution using ggmuller.  case every population annotated descendant ancestor mutant. Note however reversible espistates fit traditional Muller plot violate -back mutation model. case, ProCESS show first epistate randomly injected simulation, second result linear. completely correct perspective simulation time-series; still, help understand trends.","code":"# default Muller plot plot_muller(sim) # Custom Mullers clock <- sim$get_clock()  plot_muller(sim) + ggplot2::xlim(clock * 3/4, clock) plot_muller(sim) +   ggplot2::xlim(clock * 3/4, clock) +   ggplot2::scale_y_log10()"},{"path":"https://caravagnalab.github.io/ProCESS/articles/time_series.html","id":"time-varying-evolutionary-rates","dir":"Articles","previous_headings":"","what":"Time-Varying Evolutionary Rates","title":"Time Series Analysis","text":"can model fact rates one species. instance, happens population subject targeted treatment. Considering example , C D rates, increase death rate C+ C- species, well B+ B-.","code":"# Current rates sim #>     #>    =======  ====  ====  ====  ======  ========= #>    species   λ      δ    ε    counts      %     #>    =======  ====  ====  ====  ======  ========= #>         A-  0.08  0.01  0.01   8234   13.605645 #>         A+  0.20  0.10  0.01   2216   3.661660  #>         B-  0.30  0.10  0.05   7032   11.619491 #>         B+  0.30  0.05  0.05  22140   36.583552 #>         C-  0.40  0.01  0.10  11487   18.980816 #>         C+  0.20  0.10  0.10   1705   2.817297  #>         D-  0.40  0.01  0.10   6705   11.079165 #>         D+  0.20  0.10  0.10   1000   1.652374  #>    =======  ====  ====  ====  ======  ========= #>  #>  Species [A-]:  3570 (deaths), 11973 (duplications) and  1340 (switches) #>  Species [A+]: 23175 (deaths), 25223 (duplications) and  1171 (switches) #>  Species [B-]: 20571 (deaths), 22726 (duplications) and  3208 (switches) #>  Species [B+]: 29098 (deaths), 56115 (duplications) and  8086 (switches) #>  Species [C-]:  2068 (deaths), 15720 (duplications) and  3168 (switches) #>  Species [C+]:  3331 (deaths),  2870 (duplications) and  1002 (switches) #>  Species [D-]:  1123 (deaths),  9074 (duplications) and  1793 (switches) #>  Species [D+]:  1903 (deaths),  1656 (duplications) and   547 (switches)  # Raise the death rate levels sim$update_rates(\"B+\", c(death = 3)) sim$update_rates(\"B-\", c(death = 3)) sim$update_rates(\"C+\", c(death = 3)) sim$update_rates(\"C-\", c(death = 3))  # Now D will become larger sim$run_up_to_size(\"D+\", 6000) #>  [████████████████████████████------------] 69% [00m:00s] Cells: 51400 [████████████████████████████████████████] 100% [00m:00s] Saving snapshot  # Current state sim #>     #>    =======  ====  ====  ====  ======  ========= #>    species   λ      δ    ε    counts      %     #>    =======  ====  ====  ====  ======  ========= #>         A-  0.08  0.01  0.01  15814   22.213170 #>         A+  0.20  0.10  0.01   2547   3.577649  #>         B-  0.30  3.00  0.05    0     0.000000  #>         B+  0.30  3.00  0.05    0     0.000000  #>         C-  0.40  3.00  0.10    0     0.000000  #>         C+  0.20  3.00  0.10    0     0.000000  #>         D-  0.40  0.01  0.10  46831   65.781268 #>         D+  0.20  0.10  0.10   6000   8.427913  #>    =======  ====  ====  ====  ======  ========= #>  #>  Species [A-]:  8327 (deaths), 25352 (duplications) and  2850 (switches) #>  Species [A+]: 33287 (deaths), 34624 (duplications) and  1639 (switches) #>  Species [B-]: 28743 (deaths), 23600 (duplications) and  3335 (switches) #>  Species [B+]: 53576 (deaths), 58719 (duplications) and  8479 (switches) #>  Species [C-]: 15242 (deaths), 17754 (duplications) and  3576 (switches) #>  Species [C+]:  5570 (deaths),  3057 (duplications) and  1063 (switches) #>  Species [D-]: 10168 (deaths), 66646 (duplications) and 13398 (switches) #>  Species [D+]: 14912 (deaths), 11264 (duplications) and  3751 (switches)  # This now show the change in rates clock <- sim$get_clock() plot_muller(sim) + ggplot2::xlim(clock * 3/4, clock) plot_muller(sim) +   ggplot2::xlim(clock * 3/4, clock) +   ggplot2::scale_y_log10()"},{"path":"https://caravagnalab.github.io/ProCESS/articles/tissue_simulation.html","id":"tissue-specification","dir":"Articles","previous_headings":"","what":"Tissue specification","title":"Tissue simulation","text":"perform simulation new object class SpatialSimulation must created. automatically builds 1000x1000-cells tissue - can host 11 million cells - sets name simulation races_<date>_<hour>. simulation custom name can specified follows. set.seed() call mandatory can avoided; however, highly suggested guarantee simulation repeatability. order save simulation progresses disk recover future, use optional Boolean parameter save_snapshots. setting save_snapshots TRUE, simulation progresses saved directory whose name name simulation. Class SpatialSimulation exports SpatialSimulation$show() method get information current object. sim object exposes also methods get information simulation control .","code":"library(ProCESS)  # Default constructor sim <- SpatialSimulation() library(ProCESS)  # set the seed of the random number generator set.seed(0)  # Call your simulation \"Test\" sim <- SpatialSimulation(\"Test\") # The progresses of the simulation will saved in the \"Test\" folder. # If the directory \"Test\" already exists an exception is raised. sim <- SpatialSimulation(\"Test\", save_snapshots = TRUE) sim #> ──  ProCESS   D   S   M  Test ─────────────────────────── ▣  [1000x1000]  ⏱ 0 ── #> ✖ The simulation has no samples yet! # Get the simulation directory, i.e., \"Test\" sim$get_name() #> [1] \"Test\"  # Get the tissue size, i.e., c(1000,1000) sim$get_tissue_size() #> [1] 1000 1000"},{"path":"https://caravagnalab.github.io/ProCESS/articles/tissue_simulation.html","id":"custom-tissue-sizes","dir":"Articles","previous_headings":"Tissue specification","what":"Custom Tissue Sizes","title":"Tissue simulation","text":"tissue sizes can specified simulation creation using parameters width height.","code":"# build a spatial simulation whose tissue has width 1200 and # height 900 sim <- SpatialSimulation(\"Test\", width=1200, height=900)  # Get the tissue size, i.e., c(1200,900) sim$get_tissue_size() #> [1] 1200  900"},{"path":"https://caravagnalab.github.io/ProCESS/articles/tissue_simulation.html","id":"species-specification","dir":"Articles","previous_headings":"","what":"Species specification","title":"Tissue simulation","text":"order simulate evolution species need add sim. process defines evolutionary parameters species. mutant set cells (potentially unknown) driver mutations. Cells mutant can different liveness rates due different epigenetic states. species mutant optional epigenetic state. point simulation, mutant just name (, B, ..) , later stage linked mutations interest. epigenome binary feature species represented epistates +/- (positive negative status). abstraction, represent active/inactive state linked promoter methylation , broadly, phenotype. evolution mutants non-reversible (-back mutations model), evolution among epistates potentially reversible. example, define two mutants B epistates +/-, 4 distinct species: + -, well B+ B-. Hybrid models can obtained, e.g., mutant (epistates), together B+ B-.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/articles/tissue_simulation.html","id":"evolutionary-parameters","dir":"Articles","previous_headings":"Species specification","what":"Evolutionary parameters","title":"Tissue simulation","text":"use notation common linear birth-death processes. species epistates stochastic behaviour defined state-change rates (growth)→λ2A(death)→δ∅ \\begin{align} \\text{(growth)}\\quad & \\rightarrow_{\\lambda} 2 \\\\ \\text{(death)}\\quad & \\rightarrow_{\\delta} \\emptyset \\end{align} : λ>0\\lambda>0 growth rate cells duplicate; δ>0\\delta>0 death rate cells duplicate. Instead, species epistate + (denoted ⊕A_\\oplus) - (denoted ⊖A_\\ominus), stochastic behaviour defined state-change rates (growth +)⊕→λ⊕2A⊕(death +)⊕→δ⊕∅(growth -)⊖→λ⊖2A⊖(death -)⊖→δ⊖∅(switch +-)⊕→ϵ+−⊕+⊖(switch -+)⊖→ϵ−+⊖+⊕ \\begin{align} \\text{(growth +)}\\quad A_\\oplus & \\rightarrow_{\\lambda_\\oplus} 2 A_\\oplus \\\\ \\text{(death +)}\\quad A_\\oplus & \\rightarrow_{\\delta_\\oplus} \\emptyset \\\\ \\text{(growth -)}\\quad A_\\ominus & \\rightarrow_{\\lambda_\\ominus} 2 A_\\ominus \\\\ \\text{(death -)}\\quad A_\\ominus & \\rightarrow_{\\delta_\\ominus} \\emptyset \\\\ \\text{(switch +-)}\\quad A_\\oplus & \\rightarrow_{\\epsilon_{+-}} A_\\oplus + A_\\ominus \\\\ \\text{(switch -+)}\\quad A_\\ominus & \\rightarrow_{\\epsilon_{-+}} A_\\ominus + A_\\oplus \\end{align} rates λ\\lambda δ\\delta , ϵ+−\\epsilon_{+-} ϵ−+\\epsilon_{-+} ratesat cells certain epistate duplicate flip epigenetic marker one progeny. mutant without epistates added able simulate model, initial cell needs displaced tissue.","code":"sim$add_mutant(name = \"A\",                epigenetic_rates = c(\"+-\" = 0.01, \"-+\" = 0.01),                growth_rates = c(\"+\" = 0.2, \"-\" = 0.08),                death_rates = c(\"+\" = 0.05, \"-\" = 0.01))  # updated object (counts refer to number of cells of each species) sim #> ──  ProCESS   D   S   M  Test ──────────────────────────── ▣  [1200x900]  ⏱ 0 ── #>  #> ── Species: 2, with epigenetics #>     #>    =======  ====  ====  ====  ======  === #>    species   λ      δ    ε    counts   %  #>    =======  ====  ====  ====  ======  === #>         A-  0.08  0.01  0.01    0     NaN #>         A+  0.20  0.05  0.01    0     NaN #>    =======  ====  ====  ====  ======  === #>  #> ── Firings: 0 total #> ✖ The simulation has no samples yet!  # Get the simulation species and their rates sim$get_species() #>   mutant epistate growth_rate death_rate switch_rate #> 1      A        -        0.08       0.01        0.01 #> 2      A        +        0.20       0.05        0.01 # Not run sim$add_mutant(name = \"A\", growth_rates = 0.2, death_rates =  0.1) # We add one cell of species A+ (mutant A in epistate +) in # position (500, 500). sim$place_cell(\"A+\", 500, 500)"},{"path":"https://caravagnalab.github.io/ProCESS/articles/tissue_simulation.html","id":"visualisations","dir":"Articles","previous_headings":"Species specification","what":"Visualisations","title":"Tissue simulation","text":"can query current state simulation, extract position cell tissue. information can plot. Note tissue visualisation uses hexagonal bins avoid rastering delays simulation uses thousands cells.   Note: since plots done ggplot can assembled customised.","code":"# Counts per species sim$get_counts() #>   mutant epistate counts overall #> 1      A        -      0       0 #> 2      A        +      1       1  # Cells position (one so far) sim$get_cells() #>   cell_id mutant epistate position_x position_y #> 1       0      A        +        500        500 # Piechar for counts plot_state(sim) # Spatial distribution for the whole tissue (hexagonal bins) plot_tissue(sim)"},{"path":"https://caravagnalab.github.io/ProCESS/articles/tissue_simulation.html","id":"species-evolution","dir":"Articles","previous_headings":"","what":"Species Evolution","title":"Tissue simulation","text":"4 ways let simulation evolve: advancing number cells species reaches given threshold θ>0\\theta > 0; advancing new time t>0t>0 reached; advancing desired number firings (one particular event) occurred; advancing formula satisfied simulation status (advanced topic; see vignette(\"run_until\")).","code":""},{"path":"https://caravagnalab.github.io/ProCESS/articles/tissue_simulation.html","id":"size-based-simulation","dir":"Articles","previous_headings":"Species Evolution","what":"Size-Based Simulation","title":"Tissue simulation","text":"can run simulation θ>0\\theta > 0; cells species +","code":"# Counts per species is now 0 sim$get_counts() #>   mutant epistate counts overall #> 1      A        -      0       0 #> 2      A        +      1       1  sim$run_up_to_size(\"A+\", 500) #>  [████████████████████████████████████████] 100% [00m:00s] Saving snapshot  # Counts per species now reports 500 for A+ sim$get_counts() #>   mutant epistate counts overall #> 1      A        -     42      70 #> 2      A        +    500    1648  plot_tissue(sim)"},{"path":"https://caravagnalab.github.io/ProCESS/articles/tissue_simulation.html","id":"firing-based-simulation","dir":"Articles","previous_headings":"Species Evolution","what":"Firing-Based Simulation","title":"Tissue simulation","text":"number times event fired accessible small number cell deaths occurred species - point, can simulate system 100 .","code":"# Get the number of fired event per species sim$get_firings() #>    event mutant epistate fired #> 1  death      A        -     8 #> 2 growth      A        -    17 #> 3 switch      A        -     3 #> 4  death      A        +   290 #> 5 growth      A        +   822 #> 6 switch      A        +    36 sim$run_up_to_event(\"death\", \"A-\", 100) #>  [████████████████████████████████████████] 100% [00m:00s] Saving snapshot  # The row \"death\", for \"A\" \"-\" now reports 100 sim$get_firings() #>    event mutant epistate fired #> 1  death      A        -   100 #> 2 growth      A        -   419 #> 3 switch      A        -    51 #> 4  death      A        +  3042 #> 5 growth      A        +  6022 #> 6 switch      A        +   281 # Plot the tissue by using 200 bins plot_tissue(sim, num_of_bins = 200)"},{"path":"https://caravagnalab.github.io/ProCESS/articles/tissue_simulation.html","id":"clock-based-simulation","dir":"Articles","previous_headings":"Species Evolution","what":"Clock-Based Simulation","title":"Tissue simulation","text":"also possible take current simulation clock reference, simulate .","code":"# Get the simulation clock sim$get_clock() #> [1] 81.62523  # Run the simulation for other 15 time units sim$run_up_to_time(sim$get_clock() + 15) #>  [████████████████████████████████████████] 100% [00m:00s] Saving snapshot  # Get again the simulation clock sim$get_clock() #> [1] 96.62686 plot_tissue(sim)"},{"path":"https://caravagnalab.github.io/ProCESS/articles/tissue_simulation.html","id":"getting-cells-advanced","dir":"Articles","previous_headings":"Species Evolution > Clock-Based Simulation","what":"Getting Cells (Advanced)","title":"Tissue simulation","text":"point, query simulation find cells (use dplyr process query results). convenience, getters accept parameters subset tissue.","code":"# load dplyr to use %>% require(dplyr)  # Get the cells in the tissue at current simulation time sim$get_cells() %>% head() #>   cell_id mutant epistate position_x position_y #> 1   21730      A        +        458        497 #> 2   21697      A        +        458        498 #> 3   19846      A        +        459        483 #> 4   18816      A        +        459        489 #> 5   20217      A        -        459        494 #> 6   21729      A        +        459        497  # Get the cells in the tissue rectangular sample having # [500,500] and [505,505] as lower and upper corners, respectively sim$get_cells(c(500, 500), c(505, 505))  %>% head() #>   cell_id mutant epistate position_x position_y #> 1   12150      A        +        500        500 #> 2   20546      A        +        500        501 #> 3   17481      A        +        500        502 #> 4   17482      A        +        500        503 #> 5   20091      A        -        500        504 #> 6   19642      A        +        500        505  # Get the cells in the tissue having epigenetic state \"-\" sim$get_cells(c(\"A\", \"B\"), c(\"-\")) %>% head() #>   cell_id mutant epistate position_x position_y #> 1   20217      A        -        459        494 #> 2   21494      A        -        459        504 #> 3   20144      A        -        460        484 #> 4   20218      A        -        460        493 #> 5   18519      A        -        460        496 #> 6   21493      A        -        460        504  # Get the cells in the tissue having epigenetic state \"-\" and, # at the same time, belonging to rectangular sample bounded by # [500,500] and [505,505] as lower and upper corners, respectively sim$get_cells(c(500, 500), c(505, 505), c(\"A\", \"B\"), c(\"-\"))  %>% head() #>   cell_id mutant epistate position_x position_y #> 1   20091      A        -        500        504 #> 2    9405      A        -        502        500 #> 3   21653      A        -        502        504 #> 4   21654      A        -        503        505 #> 5    4689      A        -        505        502"},{"path":"https://caravagnalab.github.io/ProCESS/articles/tissue_simulation.html","id":"evolving-new-species","dir":"Articles","previous_headings":"Species Evolution","what":"Evolving new species","title":"Tissue simulation","text":"ProCESS can select cells tissue, randomly every mutant, constrained tissue area. feature can used program generation new species, mimicking new mutants generate subclonal expansions. Imagine want add new mutant B epistates – therefore new species B+ B- - descending ,need : locate one cell mutant tissue, inject new mutant; add specifics mutant B (via SpatialSimulation$add_mutant(), ); implement change cell mutant cell mutant B. inject cell, simulate little bit. point, can inspect details tissue. can help facet species clearly appreciate spatial diffusion populations.    , point simulation, generate new mutant C rectangle [450,500]×[550,600][450,500]\\times [550, 600].","code":"# Stochastic sampling from the whole tissue: it can return A+ or A- sim$choose_cell_in(\"A\") #>   cell_id mutant epistate position_x position_y #> 1   21730      A        +        458        497  # Calling it again may result in a different cell sim$choose_cell_in(\"A\") #>   cell_id mutant epistate position_x position_y #> 1   21546      A        +        492        455  # Constrain sampling in the tissue rectangular selection [500,550]x[350,450] sim$choose_cell_in(\"A\",  c(500, 350), c(550, 450)) #>   cell_id mutant epistate position_x position_y #> 1   17516      A        +        494        456 # We locate a random cell cell <- sim$choose_cell_in(\"A\") cell #>   cell_id mutant epistate position_x position_y #> 1   21546      A        +        492        455  # Add mutant sim$add_mutant(name = \"B\",                epigenetic_rates = c(\"+-\" = 0.05, \"-+\" = 0.05),                growth_rates = c(\"+\" = 0.7, \"-\" = 0.3),                death_rates = c(\"+\" = 0.05, \"-\" = 0.1)) # Mutant injection sim$mutate_progeny(cell, \"B\")  # Generated event A -> B either in + or - epistates is now recorded sim$get_counts() #>   mutant epistate counts overall #> 1      A        -   1008    3146 #> 2      A        +   4162   24669 #> 3      B        -      0       0 #> 4      B        +      1       1  # New evolution sim$run_up_to_size(\"B+\", 600) #>  [████████████████████████████████████████] 100% [00m:00s] Saving snapshot plot_state(sim) plot_tissue(sim, num_of_bins = 250) # Facet on species via ggplot library(ggplot2)  plot_tissue(sim, num_of_bins = 250) + facet_wrap(~species) # Define evolutionary parameters sim$add_mutant(name = \"C\",                epigenetic_rates = c(\"+-\" = 0.1, \"-+\" = 0.1),                growth_rates = c(\"+\" = 0.2, \"-\" = 0.4),                death_rates = c(\"+\" = 0.1, \"-\" = 0.01))  # Choose and mutate sim$mutate_progeny(sim$choose_cell_in(\"A\",  c(450, 550), c(500, 600)), \"C\")  sim$run_up_to_time(sim$get_clock() + 7) #>  [████████████████████████████████████████] 100% [00m:00s] Saving snapshot plot_state(sim) plot_tissue(sim, num_of_bins = 250)"},{"path":[]},{"path":"https://caravagnalab.github.io/ProCESS/articles/tissue_simulation.html","id":"injection-of-cells-over-a-tissue","dir":"Articles","previous_headings":"Species Evolution > Other Operations","what":"Injection of Cells over a Tissue","title":"Tissue simulation","text":"tissue, can inject multiple cells manually; injected cells can retrieved.","code":"# Now it will return just the initial cell sim$get_added_cells() #>   mutant epistate position_x position_y time #> 1      A        +        500        500    0"},{"path":"https://caravagnalab.github.io/ProCESS/articles/tissue_simulation.html","id":"avoiding-drift","dir":"Articles","previous_headings":"Species Evolution > Other Operations","what":"Avoiding Drift","title":"Tissue simulation","text":"species non-zero death rate can become extinct stochastically drift. Drift makes difficult simulate confident species model. facilitate user, RACES can avoid drift setting death activation level. value minimum number cells enables cell death species: cell species SS can die SS reached death activation level least simulation. threshold holds species set 1 default.","code":"sim$death_activation_level #> [1] 1  # Change death activation level sim$death_activation_level <- 50"},{"path":"https://caravagnalab.github.io/ProCESS/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Alberto Casagrande. Author, maintainer. Giulio Caravagna. Author.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Casagrande , Caravagna G (2025). ProCESS: ProCESS: Programmable Cancer Evolution Spatial Simulator. R package version 1.0.0, https://caravagnalab.github.io/ProCESS.","code":"@Manual{,   title = {ProCESS: ProCESS: Programmable Cancer Evolution Spatial Simulator},   author = {Alberto Casagrande and Giulio Caravagna},   year = {2025},   note = {R package version 1.0.0},   url = {https://caravagnalab.github.io/ProCESS}, }"},{"path":"https://caravagnalab.github.io/ProCESS/index.html","id":"process-","dir":"","previous_headings":"","what":"ProCESS: Programmable Cancer Evolution Spatial Simulator","title":"ProCESS: Programmable Cancer Evolution Spatial Simulator","text":"ProCESS stands Programmable Cancer Evolution Spatial Simulator. R wrapper RACES, C++ tumour evolution simulator, provides additional plotting functions.","code":""},{"path":[]},{"path":[]},{"path":"https://caravagnalab.github.io/ProCESS/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"ProCESS: Programmable Cancer Evolution Spatial Simulator","text":"order install development version ProCESS, need: R Rtools R package devtools git requirements satisfied, issue R command:","code":"devtools::install_github(\"caravagnalab/ProCESS\")"},{"path":"https://caravagnalab.github.io/ProCESS/index.html","id":"copyright-and-contacts","dir":"","previous_headings":"Installation","what":"Copyright and contacts","title":"ProCESS: Programmable Cancer Evolution Spatial Simulator","text":"Giulio Caravagna, Alberto Casagrande. Cancer Data Science (CDS) Laboratory.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/Amplification.html","id":null,"dir":"Reference","previous_headings":"","what":"Creating a CNA amplification — Amplification","title":"Creating a CNA amplification — Amplification","text":"function creates CNA amplification.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/Amplification.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creating a CNA amplification — Amplification","text":"chr name chromosome CNA occurs. chr_pos position chromosome CNA occurs. len CNA length. allele allele amplification placed. (optional) src_allele allele region amplified. (optional)","code":""},{"path":[]},{"path":"https://caravagnalab.github.io/ProCESS/reference/Amplification.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creating a CNA amplification — Amplification","text":"","code":"# create an amplification CNA cna <- Amplification(\"X\", 20002, 100)  cna #> CNA(type: \"A\", chr: \"X\", chr_pos: 20002, length: 100)"},{"path":"https://caravagnalab.github.io/ProCESS/reference/BasicIlluminaSequencer-cash-error_rate.html","id":null,"dir":"Reference","previous_headings":"","what":"Getting error rate — BasicIlluminaSequencer$error_rate","title":"Getting error rate — BasicIlluminaSequencer$error_rate","text":"method returns sequencing error rate simulated illumina sequencer.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/BasicIlluminaSequencer-cash-error_rate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Getting error rate — BasicIlluminaSequencer$error_rate","text":"sequencing error rate simulated sequencer.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/BasicIlluminaSequencer-cash-error_rate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Getting error rate — BasicIlluminaSequencer$error_rate","text":"","code":"# build a basic Illumina sequencer model whose errors occur # at rate 4e-3 sequencer <- BasicIlluminaSequencer(4e-3)  sequencer$error_rate #> [1] 0.004  sequencer$error_rate <- 5e-2  sequencer$error_rate #> [1] 0.05"},{"path":"https://caravagnalab.github.io/ProCESS/reference/BasicIlluminaSequencer-cash-random_quality_scores.html","id":null,"dir":"Reference","previous_headings":"","what":"Check non-constant quality score model. — BasicIlluminaSequencer$random_quality_scores","title":"Check non-constant quality score model. — BasicIlluminaSequencer$random_quality_scores","text":"method returns TRUE sequencers implements non-constant quality score model.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/BasicIlluminaSequencer-cash-random_quality_scores.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check non-constant quality score model. — BasicIlluminaSequencer$random_quality_scores","text":"TRUE sequencers sequencers implements non-constant quality score model.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/BasicIlluminaSequencer-cash-random_quality_scores.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check non-constant quality score model. — BasicIlluminaSequencer$random_quality_scores","text":"","code":"# build a basic Illumina sequencer model whose quality scores are # non-constant sequencer <- BasicIlluminaSequencer(4e-3)  sequencer$random_quality_scores #> [1] TRUE  sequencer$random_quality_scores <- FALSE  sequencer$random_quality_scores #> [1] FALSE"},{"path":"https://caravagnalab.github.io/ProCESS/reference/BasicIlluminaSequencer.html","id":null,"dir":"Reference","previous_headings":"","what":"A basic Illumina sequencer class — BasicIlluminaSequencer","title":"A basic Illumina sequencer class — BasicIlluminaSequencer","text":"class implements basic model Illumina sequencers. method builds basic Illumina sequencer model.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/BasicIlluminaSequencer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A basic Illumina sequencer class — BasicIlluminaSequencer","text":"error_rate error rate sequencer model. random_quality_scores Boolean flag enable basic non-constant quality score model. set FALSE, bases sequencing errors quality score. random quality score model increases computation time 70%. (default: TRUE)","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/BasicIlluminaSequencer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A basic Illumina sequencer class — BasicIlluminaSequencer","text":"basic Illumina sequencer model.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/BasicIlluminaSequencer.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A basic Illumina sequencer class — BasicIlluminaSequencer","text":"specifies simulated sequencing error rate simulated sequencing errors occurs according rate.","code":""},{"path":[]},{"path":"https://caravagnalab.github.io/ProCESS/reference/BasicIlluminaSequencer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A basic Illumina sequencer class — BasicIlluminaSequencer","text":"","code":"# build a sequencer model having error rate 4e-3 sequencer <- BasicIlluminaSequencer(error_rate=4e-3) sequencer #> Basic Illumina Sequencer (platform: \"ILLUMINA\" error rate: 0.004000 random quality scores)  # build a sequencer model having error rate 4e-3 and set the seed to 5 sequencer <- BasicIlluminaSequencer(error_rate=4e-3, seed=5) #> Error in BasicIlluminaSequencer(error_rate = 0.004, seed = 5): unused argument (seed = 5) sequencer #> Basic Illumina Sequencer (platform: \"ILLUMINA\" error rate: 0.004000 random quality scores)"},{"path":"https://caravagnalab.github.io/ProCESS/reference/CNA-cash-get_allele.html","id":null,"dir":"Reference","previous_headings":"","what":"Getting the CNA allele — CNA$get_allele","title":"Getting the CNA allele — CNA$get_allele","text":"method returns identifier allele CNA occurs.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/CNA-cash-get_allele.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Getting the CNA allele — CNA$get_allele","text":"allele CNA occurs.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/CNA-cash-get_allele.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Getting the CNA allele — CNA$get_allele","text":"CNA amplification corresponds new allele identifier. , instead, CNA deletion identifier allele deletion occurs.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/CNA-cash-get_allele.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Getting the CNA allele — CNA$get_allele","text":"","code":"# create an amplification CNA cna <- Amplification(\"X\", 20002, 100, 1, 0)  # get the allele in which `cna` occurs (i.e., 1) cna$get_allele() #> [1] 1"},{"path":"https://caravagnalab.github.io/ProCESS/reference/CNA-cash-get_chromosome.html","id":null,"dir":"Reference","previous_headings":"","what":"Getting the CNA chromosome — CNA$get_chromosome","title":"Getting the CNA chromosome — CNA$get_chromosome","text":"method returns identifier chromosome CNA occurs.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/CNA-cash-get_chromosome.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Getting the CNA chromosome — CNA$get_chromosome","text":"identifier chromosome CNA occurs.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/CNA-cash-get_chromosome.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Getting the CNA chromosome — CNA$get_chromosome","text":"","code":"# create an amplification CNA cna <- CNA(\"A\", \"X\", 20002, 100)  # get the chromosome in which `cna` occurs (i.e., \"X\") cna$get_chromosome() #> [1] \"X\""},{"path":"https://caravagnalab.github.io/ProCESS/reference/CNA-cash-get_dataframe.html","id":null,"dir":"Reference","previous_headings":"","what":"Getting the CNA dataframe — CNA$get_dataframe","title":"Getting the CNA dataframe — CNA$get_dataframe","text":"method builds dataframe representing CNA.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/CNA-cash-get_dataframe.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Getting the CNA dataframe — CNA$get_dataframe","text":"dataframe contains  columns \"chr\", \"chr_pos\", \"length\", \"alt_base\", \"allele\"\", \"src_allele\", \"type\".","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/CNA-cash-get_dataframe.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Getting the CNA dataframe — CNA$get_dataframe","text":"","code":"# create an amplification CNA amp_cna <- Amplification(\"X\", 20002, 100)  amp_cna$get_dataframe() #>   chr chr_pos length allele src_allele type #> 1   X   20002    100     NA         NA    A  # create a deletion CNA del_cna <- Deletion(\"Y\", 40020, 200, 0)  del_cna$get_dataframe() #>   chr chr_pos length allele src_allele type #> 1   Y   40020    200      0         NA    D"},{"path":"https://caravagnalab.github.io/ProCESS/reference/CNA-cash-get_length.html","id":null,"dir":"Reference","previous_headings":"","what":"Getting the CNA length — CNA$get_length","title":"Getting the CNA length — CNA$get_length","text":"method returns CNA length.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/CNA-cash-get_length.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Getting the CNA length — CNA$get_length","text":"CNA length.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/CNA-cash-get_length.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Getting the CNA length — CNA$get_length","text":"","code":"# create an amplification CNA cna <- CNA(\"A\", \"X\", 20002, 100)  # get the length of `cna` (i.e., 100) cna$get_length() #> [1] 100"},{"path":"https://caravagnalab.github.io/ProCESS/reference/CNA-cash-get_position_in_chromosome.html","id":null,"dir":"Reference","previous_headings":"","what":"Getting the CNA chromosome position — CNA$get_position_in_chromosome","title":"Getting the CNA chromosome position — CNA$get_position_in_chromosome","text":"method returns position chromosome CNA occurs.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/CNA-cash-get_position_in_chromosome.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Getting the CNA chromosome position — CNA$get_position_in_chromosome","text":"position chromosome CNA occurs.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/CNA-cash-get_position_in_chromosome.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Getting the CNA chromosome position — CNA$get_position_in_chromosome","text":"","code":"# create an amplification CNA cna <- Amplification(\"X\", 20002, 100, 1, 0)  # get the position in chromosome where `cna` occurs (i.e., 20002) cna$get_position_in_chromosome() #> [1] 20002"},{"path":"https://caravagnalab.github.io/ProCESS/reference/CNA-cash-get_src_allele.html","id":null,"dir":"Reference","previous_headings":"","what":"Getting the CNA source allele — CNA$get_src_allele","title":"Getting the CNA source allele — CNA$get_src_allele","text":"method returns identifier allele CNA copied.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/CNA-cash-get_src_allele.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Getting the CNA source allele — CNA$get_src_allele","text":"allele CNA copied.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/CNA-cash-get_src_allele.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Getting the CNA source allele — CNA$get_src_allele","text":"","code":"# create an amplification CNA amp_cna <- Amplification(\"X\", 20002, 100, 1, 0)  # get allele from which `amp_cna` is copied (i.e., 0) amp_cna$get_src_allele() #> [1] 0  # create a deletion CNA del_cna <- Deletion(\"Y\", 40020, 200, 0)  # the deletions have no sources and the method returns NA del_cna$get_src_allele() #> [1] NA"},{"path":"https://caravagnalab.github.io/ProCESS/reference/CNA.html","id":null,"dir":"Reference","previous_headings":"","what":"Creating a CNA — CNA","title":"Creating a CNA — CNA","text":"function creates CNA.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/CNA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creating a CNA — CNA","text":"type CNA type: either \"\" \"D\" amplification deletion, respectively. chr name chromosome CNA occurs. chr_pos position chromosome CNA occurs. len CNA length. allele allele CNA occurs. (optional) src_allele allele region amplified. (optional, amplification )","code":""},{"path":[]},{"path":"https://caravagnalab.github.io/ProCESS/reference/CNA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creating a CNA — CNA","text":"","code":"# create an amplification cna <- CNA(\"A\", \"X\", 20002, 100)  cna #> CNA(type: \"A\", chr: \"X\", chr_pos: 20002, length: 100)  # create a deletion from the allele 0 cna <- CNA(\"D\", \"Y\", 101310, 205, allele = 0)  cna #> CNA(type: \"D\", chr: \"Y\", chr_pos: 101310, length: 205, allele: 0)"},{"path":"https://caravagnalab.github.io/ProCESS/reference/Deletion.html","id":null,"dir":"Reference","previous_headings":"","what":"Creating a CNA deletion — Deletion","title":"Creating a CNA deletion — Deletion","text":"function creates CNA deletion.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/Deletion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creating a CNA deletion — Deletion","text":"chr name chromosome CNA occurs. chr_pos position chromosome CNA occurs. len CNA length. allele allele deletion occurs. (optional)","code":""},{"path":[]},{"path":"https://caravagnalab.github.io/ProCESS/reference/Deletion.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creating a CNA deletion — Deletion","text":"","code":"# create a deletion CNA cna <- Deletion(\"Y\", 40020, 200)  cna #> CNA(type: \"D\", chr: \"Y\", chr_pos: 40020, length: 200)"},{"path":"https://caravagnalab.github.io/ProCESS/reference/ErrorlessIlluminaSequencer.html","id":null,"dir":"Reference","previous_headings":"","what":"An error-less Illumina sequencer class — ErrorlessIlluminaSequencer","title":"An error-less Illumina sequencer class — ErrorlessIlluminaSequencer","text":"class implements perfect Illumina sequencers commit errors. method builds error-less Illumina sequencer model.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/ErrorlessIlluminaSequencer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"An error-less Illumina sequencer class — ErrorlessIlluminaSequencer","text":"new error-less Illumina sequencer.","code":""},{"path":[]},{"path":"https://caravagnalab.github.io/ProCESS/reference/ErrorlessIlluminaSequencer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"An error-less Illumina sequencer class — ErrorlessIlluminaSequencer","text":"","code":"# build a sequencer model sequencer <- ErrorlessIlluminaSequencer() sequencer #> Error-less Illumina Sequencer (platform: \"ILLUMINA\")"},{"path":"https://caravagnalab.github.io/ProCESS/reference/Expression.html","id":null,"dir":"Reference","previous_headings":"","what":"Represent an expression of value and variable — Expression","title":"Represent an expression of value and variable — Expression","text":"objects class polynomial expression variables values built using binary operators +, -, * usual semantics. expression one following object: variable; numeric value, e.g., 3.4; sum two expressions; subtraction two expressions; multiplication two expressions.","code":""},{"path":[]},{"path":"https://caravagnalab.github.io/ProCESS/reference/Expression.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Represent an expression of value and variable — Expression","text":"","code":"# build a simulation and add two species to it # set the seed of the random number generator set.seed(0)  # create a simulation sim <- SpatialSimulation() sim$add_mutant(name = \"A\",                growth_rates = 0.2,                death_rates = 0.1)  # build an expression sim$var(\"A\") - 2 * sim$var(\"Time\") * sim$var(\"A.duplications\") + 3.4 #> |A|-2*Time*|A.duplications|+3.4  # R variables storing logic variables can also be used in expressions v_time <- sim$var(\"Time\") sim$var(\"A\") - 2 * v_time * sim$var(\"A.duplications\") + 3.4 #> |A|-2*Time*|A.duplications|+3.4  # the logic expression can be stored in an R variable v_exp <- sim$var(\"A\") - 2 * v_time * sim$var(\"A.duplications\") + 3.4 v_exp #> |A|-2*Time*|A.duplications|+3.4"},{"path":"https://caravagnalab.github.io/ProCESS/reference/Formula.html","id":null,"dir":"Reference","previous_headings":"","what":"First order formulas about simulations — Formula","title":"First order formulas about simulations — Formula","text":"objects class describes properties simulation status. formula : relation among two expressions (operators <, <=, ==, !=, >=, >); conjunction two formulas (operator &); disjunction two formulas (operator |).","code":""},{"path":[]},{"path":"https://caravagnalab.github.io/ProCESS/reference/Formula.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"First order formulas about simulations — Formula","text":"","code":"# build a simulation and add two species to it # set the seed of the random number generator set.seed(0)  # create a simulation sim <- SpatialSimulation() sim$add_mutant(name = \"A\",                epigenetic_rates = c(\"+-\" = 0.01, \"-+\" = 0.01),                growth_rates = c(\"+\" = 0.2, \"-\" = 0.08),                death_rates = c(\"+\" = 0.1, \"-\" = 0.01))  # get a formula that holds when the cardinality of the mutant A # is greater than 1000 f1 <- sim$var(\"A+\") + sim$var(\"A-\") > 1000  # get a formula that holds when the simulated time is 10 at least f2 <- sim$var(\"Time\") >= 40  # get a formula that holds when the number of duplications doubles # the switch from A+ f3 <- sim$var(\"A+.duplications\") > 2 * sim$var(\"A+.switches\")  # combine above formulas by using Boolean operators `&` and `|` f1 & (f2 | f3) #> |A+|+|A-|>1000 and (Time>=40 or |A+.duplications|>2*|A+.switches|)"},{"path":"https://caravagnalab.github.io/ProCESS/reference/Mutation-cash-get_alt.html","id":null,"dir":"Reference","previous_headings":"","what":"Getting the mutation altered sequence — Mutation$get_alt","title":"Getting the mutation altered sequence — Mutation$get_alt","text":"method returns sequence mutation occurs.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/Mutation-cash-get_alt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Getting the mutation altered sequence — Mutation$get_alt","text":"sequence mutation occurs.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/Mutation-cash-get_alt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Getting the mutation altered sequence — Mutation$get_alt","text":"","code":"snv <- SNV(\"X\", 20002, \"T\", \"A\")  # get the sequence after `snv` occurs (i.e., \"T\") snv$get_alt() #> [1] \"T\""},{"path":"https://caravagnalab.github.io/ProCESS/reference/Mutation-cash-get_cause.html","id":null,"dir":"Reference","previous_headings":"","what":"Getting the mutation cause — Mutation$get_cause","title":"Getting the mutation cause — Mutation$get_cause","text":"method returns mutation cause.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/Mutation-cash-get_cause.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Getting the mutation cause — Mutation$get_cause","text":"mutation cause.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/Mutation-cash-get_cause.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Getting the mutation cause — Mutation$get_cause","text":"Evey mutation associated cause depending whether part genomic characterization mutant caused specific profile. method returns cause whenever available.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/Mutation-cash-get_cause.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Getting the mutation cause — Mutation$get_cause","text":"","code":"# let us build a SNV without specifying any cause for it snv <- SNV(\"X\", 20002, \"T\", \"A\")  # get the cause of `snv` (i.e., \"NA\") snv$get_cause() #> [1] NA  # we can also build a SNV, specifying a cause for it snv <- SNV(\"X\", 20002, \"T\", \"A\", cause = \"SBS13\")  # get the cause of `snv` (i.e., \"SBS13\") snv$get_cause() #> [1] \"SBS13\""},{"path":"https://caravagnalab.github.io/ProCESS/reference/Mutation-cash-get_chromosome.html","id":null,"dir":"Reference","previous_headings":"","what":"Getting the mutation chromosome — Mutation$get_chromosome","title":"Getting the mutation chromosome — Mutation$get_chromosome","text":"method returns identifier chromosome mutation occurs.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/Mutation-cash-get_chromosome.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Getting the mutation chromosome — Mutation$get_chromosome","text":"chromosome mutation occurs.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/Mutation-cash-get_chromosome.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Getting the mutation chromosome — Mutation$get_chromosome","text":"","code":"snv <- SNV(\"X\", 20002, \"T\", \"A\")  # get the chromosome in which `snv` occurs (i.e., \"X\") snv$get_chromosome() #> [1] \"X\""},{"path":"https://caravagnalab.github.io/ProCESS/reference/Mutation-cash-get_dataframe.html","id":null,"dir":"Reference","previous_headings":"","what":"Getting the mutation dataframe — Mutation$get_dataframe","title":"Getting the mutation dataframe — Mutation$get_dataframe","text":"method builds dataframe representing mutation.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/Mutation-cash-get_dataframe.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Getting the mutation dataframe — Mutation$get_dataframe","text":"dataframe columns chr, chr_pos, ref, alt, type (.e., \"SNV\" \"indel\"), cause.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/Mutation-cash-get_dataframe.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Getting the mutation dataframe — Mutation$get_dataframe","text":"","code":"snv <- SNV(\"X\", 20002, \"T\", \"A\")  snv$get_dataframe() #>   chr chr_pos allele ref alt type cause #> 1   X   20002 random   A   T  SNV  <NA>"},{"path":"https://caravagnalab.github.io/ProCESS/reference/Mutation-cash-get_position_in_chromosome.html","id":null,"dir":"Reference","previous_headings":"","what":"Getting the mutation chromosome position — Mutation$get_position_in_chromosome","title":"Getting the mutation chromosome position — Mutation$get_position_in_chromosome","text":"method returns position chromosome mutation occurs.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/Mutation-cash-get_position_in_chromosome.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Getting the mutation chromosome position — Mutation$get_position_in_chromosome","text":"position chromosome mutation occurs.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/Mutation-cash-get_position_in_chromosome.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Getting the mutation chromosome position — Mutation$get_position_in_chromosome","text":"","code":"snv <- SNV(\"X\", 20002, \"T\", \"A\")  # get the position in chromosome where `snv` occurs (i.e., 20002) snv$get_position_in_chromosome() #> [1] 20002"},{"path":"https://caravagnalab.github.io/ProCESS/reference/Mutation-cash-get_ref.html","id":null,"dir":"Reference","previous_headings":"","what":"Getting the mutation reference sequence — Mutation$get_ref","title":"Getting the mutation reference sequence — Mutation$get_ref","text":"method returns reference sequence altered mutation.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/Mutation-cash-get_ref.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Getting the mutation reference sequence — Mutation$get_ref","text":"reference sequence mutation.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/Mutation-cash-get_ref.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Getting the mutation reference sequence — Mutation$get_ref","text":"","code":"snv <- SNV(\"X\", 20002, \"T\", \"A\")  # get the reference base in which `snv` occurs (i.e., \"A\") snv$get_ref() #> [1] \"A\""},{"path":"https://caravagnalab.github.io/ProCESS/reference/Mutation.html","id":null,"dir":"Reference","previous_headings":"","what":"A single nucleotide variation — Mutation","title":"A single nucleotide variation — Mutation","text":"function creates SNVs indels.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/Mutation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A single nucleotide variation — Mutation","text":"chr name chromosome indel occurs. chr_pos position chromosome indel occurs. ref reference sequence. alt mutation altered sequence. allele allele mutation must occur (optional). cause cause mutation (optional).","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/Mutation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A single nucleotide variation — Mutation","text":"generalizes function SNV() building SNVs indels. However, requires reference sequence specification whereas SNV() can deduce reference sequence . Another difference respect SNV() ref-alt parameter order: alt parameter comes optional ref parameter SNV(); Mutation() adopts reverse order.","code":""},{"path":[]},{"path":"https://caravagnalab.github.io/ProCESS/reference/Mutation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A single nucleotide variation — Mutation","text":"","code":"# create a deletion without specifying the cause mutation <- Mutation(\"X\", 20002, \"TAC\", \"T\") mutation #> indel(chr: X, chr_pos: 20002, allele: random, ref: TAC, alt: T)  # create an insertion and do not specify the cause mutation <- Mutation(\"X\", 20002, \"A\", \"AT\") mutation #> indel(chr: X, chr_pos: 20002, allele: random, ref: A, alt: AT)  # create an insertion that must be place in allele 1 mutation <- Mutation(\"X\", 20002, \"A\", \"AT\", allele = 1) mutation #> indel(chr: X, chr_pos: 20002, allele: 1, ref: A, alt: AT)  # create an insertion with a cause mutation <- Mutation(\"X\", 20002, \"A\", \"AT\", cause = \"SBS1\") mutation #> indel(chr: X, chr_pos: 20002, allele: random, ref: A, alt: AT, cause: \"SBS1\")"},{"path":"https://caravagnalab.github.io/ProCESS/reference/MutationEngine-cash-add_exposure.html","id":null,"dir":"Reference","previous_headings":"","what":"Adding an exposure to the mutation engine — MutationEngine$add_exposure","title":"Adding an exposure to the mutation engine — MutationEngine$add_exposure","text":"method adds exposure mutation engine.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/MutationEngine-cash-add_exposure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adding an exposure to the mutation engine — MutationEngine$add_exposure","text":"time simulated time exposure adopted (optional). exposure exposure specified mutation type, .e., discrete probability distribution set signature. indel SNV exposures can specified list.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/MutationEngine-cash-add_exposure.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Adding an exposure to the mutation engine — MutationEngine$add_exposure","text":"exposure used establish probability passenger mutation occur depending context. exposure associated time simulated time set adopted. time provided exposure used specified time successive exposure change. exposure added mutation engine without specifying time, time 0.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/MutationEngine-cash-add_exposure.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adding an exposure to the mutation engine — MutationEngine$add_exposure","text":"","code":"# create a demonstrative mutation engine m_engine <- MutationEngine(setup_code = \"demo\") #> Downloading reference genome... #> Reference genome downloaded #> Decompressing reference file...done #> Downloading SBS file... #> SBS file downloaded #> Downloading indel file... #> indel file downloaded #> Downloading driver mutation file... #> Driver mutation file downloaded #> Downloading passenger CNAs file... #> Passenger CNAs file downloaded #> Downloading germline mutations... #> Germline mutations downloaded #> Building context index... #>   [█---------------------------------------] 0% [00m:00s] Processing chr. 22        [█████████████████-----------------------] 40% [00m:01s] Processing chr. 22       [█████████████████████████████████-------] 81% [00m:02s] Processing chr. 22       [████████████████████████████████████████] 100% [00m:02s] Context index built   #>   [█---------------------------------------] 0% [00m:00s] Saving context index      [████████████████████████████████████████] 100% [00m:00s] Context index saved   #> done #> Building repeated sequence index... #>   [█---------------------------------------] 0% [00m:00s] Processing chr. 22        [█---------------------------------------] 0% [00m:00s] Processing chr. 22        [█---------------------------------------] 0% [00m:03s] Processing chr. 22        [█---------------------------------------] 0% [00m:04s] Processing chr. 22        [█---------------------------------------] 0% [00m:05s] Processing chr. 22        [█---------------------------------------] 0% [00m:06s] Processing chr. 22        [█---------------------------------------] 0% [00m:08s] Processing chr. 22        [█---------------------------------------] 0% [00m:12s] Processing chr. 22        [████████████████████████████████████████] 100% [00m:12s] RS index built        #>   [█---------------------------------------] 0% [00m:00s] Saving RS index           [█---------------------------------------] 0% [00m:00s] Saving RS index           [█████████████████████████████-----------] 71% [00m:02s] Saving RS index        done #>   [████████████████████████████████████████] 100% [00m:02s] RS index saved        #>   [█---------------------------------------] 0% [00m:00s] Loading germline          [████████████████████████████████████████] 100% [00m:00s] Germline loaded       #>   [█---------------------------------------] 0% [00m:00s] Saving germline           [████████████████████████████████████████] 100% [00m:00s] Germline saved         # add a default set of coefficients that will be used from simulated # time 0 up to the successive coefficient change. The indel and SNV # exposures can be specified in the same list. m_engine$add_exposure(c(SBS13 = 0.3, SBS1 = 0.7, ID2 = 0.2, ID3 = 0.3,                         ID20 = 0.5))  # add a default set of coefficients that will be used from simulated # time 3.2 up to the end of the simulation. m_engine$add_exposure(3.2, c(SBS5 = 0.3, SBS2 = 0.2, SBS3 = 0.5))  m_engine #> MutationEngine #>  Passenger rates #>  #>  Driver mutations #>  #>  Timed Exposure #>    SBS Timed Exposures #>      [0, 3.2[: {\"SBS1\": 0.7, \"SBS13\": 0.3} #>      [3.2, ∞[: {\"SBS2\": 0.2, \"SBS3\": 0.5, \"SBS5\": 0.3} #>  #>    indel Timed Exposures #>      [0, ∞[: {\"ID2\": 0.2, \"ID20\": 0.5, \"ID3\": 0.3} #>"},{"path":"https://caravagnalab.github.io/ProCESS/reference/MutationEngine-cash-add_mutant.html","id":null,"dir":"Reference","previous_headings":"","what":"Adding a mutant specification — MutationEngine$add_mutant","title":"Adding a mutant specification — MutationEngine$add_mutant","text":"method adds mutant specification mutation engine.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/MutationEngine-cash-add_mutant.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adding a mutant specification — MutationEngine$add_mutant","text":"mutant_name mutant name. passenger_rates list passenger rates whose names epigenetic states species single rate, mutant epigenetic state. drivers list driver SNVs, indels, CNAs, whole genome doubling events (WGD) characterizing mutant (optional).","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/MutationEngine-cash-add_mutant.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Adding a mutant specification — MutationEngine$add_mutant","text":"users must use specify name genomic characterization (.e., SNVs, indels, CNAs, whole genome doubling events (WGD)) simulated mutants together mutation rates species. driver mutations applied mutant progenitor's genome respecting specification order.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/MutationEngine-cash-add_mutant.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adding a mutant specification — MutationEngine$add_mutant","text":"","code":"# create a demonstrative mutation engine m_engine <- MutationEngine(setup_code = \"demo\") #>   [█---------------------------------------] 0% [00m:00s] Loading context index     [████████████████████████████████████████] 100% [00m:00s] Context index loaded  #>   [█---------------------------------------] 0% [00m:00s] Loading RS index          [██████████████████----------------------] 43% [00m:01s] Loading RS index         [██████████████████████████████████------] 83% [00m:02s] Loading RS index         [████████████████████████████████████████] 100% [00m:02s] RS index loaded       #>   [█---------------------------------------] 0% [00m:00s] Loading germline          [████████████████████████████████████████] 100% [00m:00s] Germline loaded        # add the mutant \"A\" characterized by one driver SNV on chromosome 22, an # indel on the same chromosome, a whole genome doubling event, and finally # two CNAs: an amplification and a deletion. The mutant has two epigenetic # states and its species \"A+\" and \"A-\" have passenger SNV rates 1e-9 and # 3e-8, respectively, and passenger CNA rates 0 and 1e-11, respectively. m_engine$add_mutant(\"A\", list(\"+\" = c(SNV = 1e-9, indel = 1e-10),                               \"-\" = c(SNV = 3e-8, CNA = 1e-11)),                     drivers = list(SNV(\"22\", 23657587, \"C\"),                                    Mutation(\"22\", 15220157, \"GTTTTTTTT\",                                             \"G\"),                                    WGD,                                    CNA(type = \"A\", chr = \"22\",                                        chr_pos = 10303470,                                        len = 200000),                                    CNA(\"D\", \"22\", 5010000, 200000))) #>   [█---------------------------------------] 0% [00m:00s] Retrieving \"A\" SNVs       [█---------------------------------------] 0% [00m:00s] Found 22                  [█---------------------------------------] 0% [00m:00s] Reading 22                [█---------------------------------------] 0% [00m:01s] Reading 22                [████████████████████████████████████████] 100% [00m:01s] \"A\" SNVs retrieved     m_engine #> MutationEngine #>  Passenger rates #>    \"A+\": {SNV: 1e-09, indel: 1e-10} #>    \"A-\": {SNV: 3e-08, CNA: 1e-11} #>  #>  Driver mutations #>    \"A\": #>        chr22(23657587)[G>C](allele: random) #>        chr22(15220157)[GTTTTTTTT>G](allele: random) #>        Whole genome duplication #>        CNA(\"A\",chr22(10303470), len: 200000) #>        CNA(\"D\",chr22(5010000), len: 200000) #>  #>  Timed Exposure #>    SBS Timed Exposures #>  #>    indel Timed Exposures #>"},{"path":"https://caravagnalab.github.io/ProCESS/reference/MutationEngine-cash-get_SNV_signatures.html","id":null,"dir":"Reference","previous_headings":"","what":"Getting the SNV signatures — MutationEngine$get_SNV_signatures","title":"Getting the SNV signatures — MutationEngine$get_SNV_signatures","text":"method returns available SNV signatures.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/MutationEngine-cash-get_SNV_signatures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Getting the SNV signatures — MutationEngine$get_SNV_signatures","text":"dataframe containing available SNV signatures.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/MutationEngine-cash-get_SNV_signatures.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Getting the SNV signatures — MutationEngine$get_SNV_signatures","text":"signatures returned dataframe containing available SNV signatures corresponding mutation probability. first column (\"Type\") describes mutation context, remaining columns contains probabilities mutations one available SNV signatures.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/MutationEngine-cash-get_SNV_signatures.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Getting the SNV signatures — MutationEngine$get_SNV_signatures","text":"","code":"# build a mutation engine m_engine <- MutationEngine(setup_code = \"demo\") #>   [█---------------------------------------] 0% [00m:00s] Loading context index     [████████████████████████████████████████] 100% [00m:00s] Context index loaded  #>   [█---------------------------------------] 0% [00m:00s] Loading RS index          [█████████████████-----------------------] 42% [00m:01s] Loading RS index         [█████████████████████████████████-------] 81% [00m:02s] Loading RS index         [████████████████████████████████████████] 100% [00m:02s] RS index loaded       #>   [█---------------------------------------] 0% [00m:00s] Loading germline          [████████████████████████████████████████] 100% [00m:00s] Germline loaded        # get the indel dataframe head(m_engine$get_SNV_signatures(), 5) #>      Type        SBS1        SBS2       SBS3        SBS4        SBS5 #> 1 A[C>A]A 0,000886157 5,80000e-07 0,02080832 0,042196498 0,011997600 #> 2 A[C>A]C 0,002280405 1,48004e-04 0,01650660 0,033297236 0,009438112 #> 3 A[C>A]G 0,000177031 5,23000e-05 0,00175070 0,015598705 0,001849630 #> 4 A[C>A]T 0,001280227 9,78000e-05 0,01220488 0,029497552 0,006608678 #> 5 A[C>G]A 0,001860330 2,23000e-16 0,01970788 0,006889428 0,010097980 #>          SBS6       SBS7a       SBS7b       SBS7c       SBS7d        SBS8 #> 1 0,000425233 0,000067000 0,002329386 0,004830406 0,000040400 0,044098218 #> 2 0,000524287 0,000179116 0,000460879 0,001150097 0,000764883 0,047798069 #> 3 0,000052000 0,000071200 0,000185951 0,000377032 0,000249962 0,004619813 #> 4 0,000180099 0,000248161 0,000709813 0,001960165 0,004049378 0,046998101 #> 5 0,000471258 0,000064900 0,000008560 0,001120094 0,001179819 0,004329825 #>          SBS9       SBS10a      SBS10b      SBS10c      SBS10d       SBS11 #> 1 0,000557954 2,190170e-03 0,000181997 0,004331453 0,010113971 0,000146208 #> 2 0,004089661 1,770137e-03 0,006539908 0,014830220 0,018446062 0,000552786 #> 3 0,000425965 1,500120e-04 0,000053500 0,000657116 0,000726535 0,000094200 #> 4 0,003049747 1,700132e-02 0,000016300 0,013127763 0,014196655 0,000266379 #> 5 0,004839598 2,230000e-16 0,000304996 0,000347634 0,000128897 0,000170242 #>         SBS12       SBS13        SBS14       SBS15       SBS16      SBS17a #> 1 0,004520592 0,001819920 1,120492e-03 0,000944202 0,015995037 0,002070261 #> 2 0,001130148 0,000720968 1,310575e-02 0,000497106 0,002899100 0,000918116 #> 3 0,000540071 0,000263988 4,131810e-04 0,000046100 0,001019684 0,000047600 #> 4 0,001220160 0,000347985 8,263628e-02 0,001110238 0,010596712 0,000061800 #> 5 0,001220160 0,003869830 2,220000e-16 0,000113024 0,001739460 0,001010128 #>        SBS17b       SBS18       SBS19       SBS20       SBS21      SBS22a #> 1 0,000607958 0,051533859 0,001269382 0,000619283 0,000156993 0,006046172 #> 2 0,000128991 0,015810387 0,000640688 0,001390636 0,002359889 0,000094500 #> 3 0,000058200 0,002431598 0,000245880 0,000021800 0,000293986 0,000790362 #> 4 0,000455969 0,021414070 0,000570722 0,001240568 0,000620971 0,001729623 #> 5 0,000145990 0,001731137 0,003188447 0,008774017 0,000016900 0,001669991 #>        SBS22b       SBS23      SBS24       SBS25       SBS26       SBS27 #> 1 0,006086541 8,35523e-04 0,03641340 0,009898466 0,000873118 0,005207818 #> 2 0,003802506 3,99250e-04 0,02650976 0,006998915 0,000528071 0,004738015 #> 3 0,000980017 9,86000e-08 0,01480545 0,001449775 0,000114015 0,000782672 #> 4 0,003566008 5,61000e-18 0,02200810 0,004969230 0,000619084 0,002718861 #> 5 0,004179338 5,74000e-18 0,00334123 0,008028756 0,000427058 0,001319447 #>         SBS28      SBS29       SBS30       SBS31       SBS32       SBS33 #> 1 0,000783905 0,06320926 0,001799681 0,009534985 0,022297772 0,003111360 #> 2 0,002529694 0,05120751 0,000505910 0,018490274 0,018798122 0,002230975 #> 3 0,000352957 0,01920282 0,000091300 0,001659127 0,004459554 0,000414181 #> 4 0,003969520 0,03560522 0,000555901 0,006276698 0,014598542 0,001900831 #> 5 0,000153981 0,00314046 0,001069810 0,008315626 0,001989801 0,001410616 #>         SBS34       SBS35       SBS36       SBS37       SBS38       SBS39 #> 1 0,004867949 0,008826949 0,025193777 0,003950822 0,012794869 0,011701521 #> 2 0,006957070 0,046184032 0,008317945 0,001450302 0,010095952 0,007150930 #> 3 0,000052000 0,001389520 0,002239447 0,001060221 0,001899238 0,002670347 #> 4 0,001229482 0,021592534 0,017895580 0,001850385 0,008846453 0,007400962 #> 5 0,000761679 0,003578763 0,001839546 0,034307136 0,002688922 0,047306150 #>        SBS40a      SBS40b      SBS40c       SBS41       SBS42       SBS43 #> 1 0,036395305 0,014007124 0,003757760 0,002110193 0,001160252 0,029506295 #> 2 0,016772493 0,004719804 0,006283197 0,001220112 0,020604480 0,005901259 #> 3 0,003747968 0,001139655 0,002019124 0,000061400 0,000033400 0,000626134 #> 4 0,015434802 0,004952959 0,008175782 0,001330122 0,007971733 0,002070442 #> 5 0,008213432 0,007453156 0,008893380 0,005330488 0,000406088 0,000361077 #>          SBS44       SBS45  SBS46       SBS47       SBS48       SBS49 #> 1 7,680000e-18 0,009108136 0,0044 0,067787870 0,000855468 0,025116633 #> 2 1,500380e-04 0,002849417 0,0047 0,029694686 0,000841460 0,007034659 #> 3 9,160000e-07 0,001659660 0,0003 0,001379753 0,000258141 0,007114712 #> 4 5,781465e-03 0,009638027 0,0034 0,011897871 0,000038900 0,007975282 #> 5 3,180806e-03 0,003109364 0,0012 0,001029816 0,000198108 0,000288191 #>         SBS50       SBS51       SBS52       SBS53       SBS54       SBS55 #> 1 0,119000274 0,140963913 0,015196277 0,005383510 0,002160358 0,005881127 #> 2 0,127000292 0,001689567 0,006538398 0,001961279 0,000796132 0,002050393 #> 3 0,005770013 0,004798772 0,004138986 0,038124854 0,001640271 0,000044900 #> 4 0,083200191 0,021194574 0,009237737 0,000017100 0,000414069 0,001170224 #> 5 0,003850009 0,003958986 0,001729576 0,007034586 0,001550257 0,002850546 #>         SBS56       SBS57       SBS58       SBS59        SBS60       SBS84 #> 1 0,012597481 0,012306325 0,058874618 0,003588208 6,152708e-03 0,003471995 #> 2 0,015696861 0,001430735 0,006747091 0,002368817 7,793430e-04 0,005007309 #> 3 0,000205959 0,003331713 0,000824644 0,000141929 2,230000e-16 0,000452642 #> 4 0,022995401 0,008644443 0,005577595 0,014492762 4,441950e-04 0,009295947 #> 5 0,000417916 0,015407920 0,020591123 0,002938533 3,771660e-04 0,006758076 #>         SBS85       SBS86       SBS87        SBS88       SBS89       SBS90 #> 1 0,006080257 0,002954301 0,008972551 1,000000e-18 0,032168854 0,002201650 #> 2 0,000879937 0,003774501 0,004572575 1,000000e-18 0,017693728 0,000708223 #> 3 0,000306011 0,000385490 0,006208566 1,000000e-18 0,009670834 0,000138566 #> 4 0,002717279 0,003624001 0,004957473 1,731102e-03 0,020743819 0,001755161 #> 5 0,007234927 0,052516013 0,007866457 1,000000e-18 0,014817169 0,000508073 #>         SBS91      SBS92       SBS93       SBS94       SBS95       SBS96 #> 1 0,002944550 0,01132934 0,011573228 0,015579670 0,038408380 0,011430605 #> 2 0,052997084 0,00974473 0,008096344 0,024746217 0,017383837 0,007770735 #> 3 0,000204200 0,00469657 0,001760621 0,001574271 0,008360147 0,001997198 #> 4 0,000130810 0,00775798 0,008420819 0,011076145 0,023294307 0,011809258 #> 5 0,000243319 0,00305586 0,008856798 0,007003872 0,003616709 0,009294594 #>         SBS97       SBS98       SBS99 #> 1 0,008159180 0,008804153 0,000003820 #> 2 0,007512896 0,006768714 0,000006960 #> 3 0,001374676 0,032959350 0,000051400 #> 4 0,006858397 0,003758009 0,000030700 #> 5 0,002346944 0,006896898 0,000446027"},{"path":"https://caravagnalab.github.io/ProCESS/reference/MutationEngine-cash-get_active_germline.html","id":null,"dir":"Reference","previous_headings":"","what":"Getting the active germline subject — MutationEngine$get_active_germline","title":"Getting the active germline subject — MutationEngine$get_active_germline","text":"method returns active germline subject.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/MutationEngine-cash-get_active_germline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Getting the active germline subject — MutationEngine$get_active_germline","text":"dataframe active germline subject.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/MutationEngine-cash-get_active_germline.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Getting the active germline subject — MutationEngine$get_active_germline","text":"active germline subject returned dataframe column sample reports subject name, columns pop super_pop contain subject population super population, respectively, column gender declares subject gender.","code":""},{"path":[]},{"path":"https://caravagnalab.github.io/ProCESS/reference/MutationEngine-cash-get_active_germline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Getting the active germline subject — MutationEngine$get_active_germline","text":"","code":"# build a mutation engine m_engine <- MutationEngine(setup_code = \"demo\") #>   [█---------------------------------------] 0% [00m:00s] Loading context index     [████████████████████████████████████████] 100% [00m:00s] Context index loaded  #>   [█---------------------------------------] 0% [00m:00s] Loading RS index          [█████████████████-----------------------] 42% [00m:01s] Loading RS index         [████████████████████████████████--------] 79% [00m:02s] Loading RS index         [████████████████████████████████████████] 100% [00m:02s] RS index loaded       #>   [█---------------------------------------] 0% [00m:00s] Loading germline          [████████████████████████████████████████] 100% [00m:00s] Germline loaded        # get the active germline subject dataframe head(m_engine$get_active_germline(), 5) #>    sample pop super_pop gender #> 1 NA18941 JPT       EAS female"},{"path":"https://caravagnalab.github.io/ProCESS/reference/MutationEngine-cash-get_genome_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Getting the genome information — MutationEngine$get_genome_info","title":"Getting the genome information — MutationEngine$get_genome_info","text":"method returns information genome.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/MutationEngine-cash-get_genome_info.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Getting the genome information — MutationEngine$get_genome_info","text":"method returns data frame reporting name (column \"name\"), size (column \"size\"), number alleles (column \"num_of_alleles\") chromosome.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/MutationEngine-cash-get_genome_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Getting the genome information — MutationEngine$get_genome_info","text":"","code":"# build a mutation engine m_engine <- MutationEngine(setup_code = \"demo\") #>   [█---------------------------------------] 0% [00m:00s] Loading context index     [████████████████████████████████████████] 100% [00m:00s] Context index loaded  #>   [█---------------------------------------] 0% [00m:00s] Loading RS index          [████████████████------------------------] 38% [00m:01s] Loading RS index         [███████████████████████████████---------] 75% [00m:02s] Loading RS index         [████████████████████████████████████████] 100% [00m:02s] RS index loaded       #>   [█---------------------------------------] 0% [00m:00s] Loading germline          [████████████████████████████████████████] 100% [00m:00s] Germline loaded        # get the genome information m_engine$get_genome_info() #>   chr     size num_of_alleles #> 1  22 51304566              2"},{"path":"https://caravagnalab.github.io/ProCESS/reference/MutationEngine-cash-get_germline_subjects.html","id":null,"dir":"Reference","previous_headings":"","what":"Getting the germline subjects — MutationEngine$get_germline_subjects","title":"Getting the germline subjects — MutationEngine$get_germline_subjects","text":"method returns available germline subjects.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/MutationEngine-cash-get_germline_subjects.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Getting the germline subjects — MutationEngine$get_germline_subjects","text":"dataframe available germline subjects.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/MutationEngine-cash-get_germline_subjects.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Getting the germline subjects — MutationEngine$get_germline_subjects","text":"germline subjects method returns dataframe containing available germline subjects. column sample reports subject name; columns pop super_pop contain subject population super population, respectively; column gender declares subject gender.","code":""},{"path":[]},{"path":"https://caravagnalab.github.io/ProCESS/reference/MutationEngine-cash-get_germline_subjects.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Getting the germline subjects — MutationEngine$get_germline_subjects","text":"","code":"# build a mutation engine m_engine <- MutationEngine(setup_code = \"demo\") #>   [█---------------------------------------] 0% [00m:00s] Loading context index     [████████████████████████████████████████] 100% [00m:00s] Context index loaded  #>   [█---------------------------------------] 0% [00m:00s] Loading RS index          [█████████████████-----------------------] 42% [00m:01s] Loading RS index         [█████████████████████████████████-------] 82% [00m:02s] Loading RS index         [████████████████████████████████████████] 100% [00m:02s] RS index loaded       #>   [█---------------------------------------] 0% [00m:00s] Loading germline          [████████████████████████████████████████] 100% [00m:00s] Germline loaded        # get the active germline subject dataframe head(m_engine$get_germline_subjects(), 5) #>    sample pop super_pop gender #> 1 NA18941 JPT       EAS female #> 2 NA20513 TSI       EUR   male"},{"path":"https://caravagnalab.github.io/ProCESS/reference/MutationEngine-cash-get_indel_signatures.html","id":null,"dir":"Reference","previous_headings":"","what":"Getting the indel signatures — MutationEngine$get_indel_signatures","title":"Getting the indel signatures — MutationEngine$get_indel_signatures","text":"method returns available indel signatures.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/MutationEngine-cash-get_indel_signatures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Getting the indel signatures — MutationEngine$get_indel_signatures","text":"dataframe containing available  indel signatures.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/MutationEngine-cash-get_indel_signatures.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Getting the indel signatures — MutationEngine$get_indel_signatures","text":"signatures returned dataframe containing available indel signatures together corresponding mutation probability. first column (\"Type\") describes mutation context, remaining columns contains probabilities mutations one available indel signatures.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/MutationEngine-cash-get_indel_signatures.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Getting the indel signatures — MutationEngine$get_indel_signatures","text":"","code":"# build a mutation engine m_engine <- MutationEngine(setup_code = \"demo\") #>   [█---------------------------------------] 0% [00m:00s] Loading context index     [████████████████████████████████████████] 100% [00m:00s] Context index loaded  #>   [█---------------------------------------] 0% [00m:00s] Loading RS index          [█████████████████-----------------------] 42% [00m:01s] Loading RS index         [█████████████████████████████████-------] 81% [00m:02s] Loading RS index         [████████████████████████████████████████] 100% [00m:02s] RS index loaded       #>   [█---------------------------------------] 0% [00m:00s] Loading germline          [████████████████████████████████████████] 100% [00m:00s] Germline loaded        # get the indel dataframe head(m_engine$get_indel_signatures(), 5) #>        Type          ID1         ID2        ID3         ID4         ID5 #> 1 1:Del:C:0 1,598890e-04 0,004824116 0,12472711 0,007249717 0,022202108 #> 2 1:Del:C:1 7,735230e-04 0,000022100 0,20887617 0,002734869 0,028547215 #> 3 1:Del:C:2 3,310000e-18 0,000003110 0,17632422 0,002041063 0,026596927 #> 4 1:Del:C:3 1,907613e-03 0,002472076 0,06404276 0,001112283 0,014159122 #> 5 1:Del:C:4 7,059900e-04 0,003856976 0,04398981 0,001075684 0,002873422 #>           ID6          ID7         ID8         ID9        ID10         ID11 #> 1 0,030506799 4,665610e-04 0,039827558 0,334939880 0,025105414 1,576565e-03 #> 2 0,005491903 1,000000e-18 0,023915938 0,099994226 0,029306320 5,503180e-04 #> 3 0,008033994 8,561945e-03 0,003330554 0,002690655 0,018804056 3,573380e-04 #> 4 0,001102379 4,236015e-02 0,005403153 0,010625416 0,016503560 9,080000e-18 #> 5 0,002478170 1,148919e-01 0,001275709 0,012496902 0,002930632 9,080000e-18 #>          ID12        ID13        ID14       ID15         ID16         ID17 #> 1 0,052787741 0,065548371 0,012016009 0,02652737 9,527690e-04 0,0061175990 #> 2 0,014674665 0,017536463 0,001946232 0,12100979 2,640000e-18 0,0036675550 #> 3 0,000561932 0,005120219 0,000683696 0,14782886 8,150000e-05 0,0012203270 #> 4 0,000995577 0,005350516 0,000487468 0,13600606 1,624914e-03 0,0000000226 #> 5 0,002240050 0,004346005 0,002071921 0,08419770 3,378643e-03 0,0000000194 #>           ID18        ID19        ID20        ID21        ID22       ID23 #> 1 6,012048e-03 0,054089076 0,006578444 0,001388870 0,002569923 0,05169788 #> 2 2,004016e-03 0,015008861 0,003268685 0,004836623 0,001730933 0,10619410 #> 3 2,004016e-03 0,001849447 0,002094676 0,001284341 0,000798746 0,05287559 #> 4 4,008032e-03 0,006563183 0,002189543 0,002792894 0,001532915 0,03862287 #> 5 1,000000e-18 0,008206888 0,000481952 0,005253476 0,002421533 0,01125206"},{"path":"https://caravagnalab.github.io/ProCESS/reference/MutationEngine-cash-get_known_drivers.html","id":null,"dir":"Reference","previous_headings":"","what":"Getting the known driver mutations — MutationEngine$get_known_drivers","title":"Getting the known driver mutations — MutationEngine$get_known_drivers","text":"method returns known driver mutations.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/MutationEngine-cash-get_known_drivers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Getting the known driver mutations — MutationEngine$get_known_drivers","text":"dataframe containing known driver.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/MutationEngine-cash-get_known_drivers.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Getting the known driver mutations — MutationEngine$get_known_drivers","text":"mutation returned dataframe reporting known driver mutations together types, associated tumours, affected genes, code name. first three columns (\"chr\", \"\", \"\") report mutation chromosome, initial position final position, respectively. next three columns (\"ref\", \"alt\", \"mutation_type\") describe reference sequence, altered sequence, type mutation. last three columns (\"tumour_type\", \"driver_gene\", \"driver_code\") detail tumour type associated mutation, affected gene, driver code, can used specify mutation adding mutants mutation engine.","code":""},{"path":[]},{"path":"https://caravagnalab.github.io/ProCESS/reference/MutationEngine-cash-get_known_drivers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Getting the known driver mutations — MutationEngine$get_known_drivers","text":"","code":"# build a mutation engine m_engine <- MutationEngine(setup_code = \"demo\") #>   [█---------------------------------------] 0% [00m:00s] Loading context index     [████████████████████████████████████████] 100% [00m:00s] Context index loaded  #>   [█---------------------------------------] 0% [00m:00s] Loading RS index          [██████████████████----------------------] 43% [00m:01s] Loading RS index         [██████████████████████████████████------] 83% [00m:02s] Loading RS index         [████████████████████████████████████████] 100% [00m:02s] RS index loaded       #>   [█---------------------------------------] 0% [00m:00s] Loading germline          [████████████████████████████████████████] 100% [00m:00s] Germline loaded        # get the known driver dataframe head(m_engine$get_known_drivers(), 5) #>   chr      from        to     ref alt mutation_type tumour_type driver_gene #> 1   1 115256502 115256508 TGGTCTC   -         indel        PACA        NRAS #> 2   1 115256502 115256508 TGGTCTC   -         indel        PACA        NRAS #> 3   1 115256528 115256528       T   G           SNV        MALY        NRAS #> 4   1 115256529 115256529       T   C           SNV        MELA        NRAS #> 5   1 115256528 115256528       T   G           SNV        MALY        NRAS #>   driver_code #> 1  NRAS RDQ68 #> 2    NRAS A66 #> 3   NRAS Q61H #> 4   NRAS Q61R #> 5   NRAS Q61K"},{"path":"https://caravagnalab.github.io/ProCESS/reference/MutationEngine-cash-get_population_descriptions.html","id":null,"dir":"Reference","previous_headings":"","what":"Getting the population descriptions — MutationEngine$get_population_descriptions","title":"Getting the population descriptions — MutationEngine$get_population_descriptions","text":"method returns population descriptions.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/MutationEngine-cash-get_population_descriptions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Getting the population descriptions — MutationEngine$get_population_descriptions","text":"dataframe containing population descriptions.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/MutationEngine-cash-get_population_descriptions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Getting the population descriptions — MutationEngine$get_population_descriptions","text":"population descriptions stored dataframe describing populations. column code contains population codes; columns description long description report brief long description populations, respectively.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/MutationEngine-cash-get_population_descriptions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Getting the population descriptions — MutationEngine$get_population_descriptions","text":"","code":"# build a mutation engine m_engine <- MutationEngine(setup_code = \"demo\") #>   [█---------------------------------------] 0% [00m:00s] Loading context index     [████████████████████████████████████████] 100% [00m:00s] Context index loaded  #>   [█---------------------------------------] 0% [00m:00s] Loading RS index          [█████████████████-----------------------] 41% [00m:01s] Loading RS index         [████████████████████████████████--------] 78% [00m:02s] Loading RS index         [████████████████████████████████████████] 100% [00m:02s] RS index loaded       #>   [█---------------------------------------] 0% [00m:00s] Loading germline          [████████████████████████████████████████] 100% [00m:00s] Germline loaded        # get the active germline subject dataframe head(m_engine$get_population_descriptions(), 5) #>   code          description                    long.description #> 1  CHB          Han Chinese       Han Chinese in Beijing, China #> 2  JPT             Japanese            Japanese in Tokyo, Japan #> 3  CHS Southern Han Chinese                   Han Chinese South #> 4  CDX          Dai Chinese Chinese Dai in Xishuangbanna, China #> 5  KHV      Kinh Vietnamese   Kinh in Ho Chi Minh City, Vietnam"},{"path":"https://caravagnalab.github.io/ProCESS/reference/MutationEngine-cash-get_species_rates.html","id":null,"dir":"Reference","previous_headings":"","what":"Getting the registered species rates — MutationEngine$get_species_rates","title":"Getting the registered species rates — MutationEngine$get_species_rates","text":"method returns registered species rates.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/MutationEngine-cash-get_species_rates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Getting the registered species rates — MutationEngine$get_species_rates","text":"dataframe containing registered species rates.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/MutationEngine-cash-get_species_rates.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Getting the registered species rates — MutationEngine$get_species_rates","text":"registered species rates returned dataframe. column species contains species names; columns SNV_rate, CNA_rate, indel_rate store SNV, CNA, indel rates, respectively.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/MutationEngine-cash-get_species_rates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Getting the registered species rates — MutationEngine$get_species_rates","text":"","code":"# build a mutation engine m_engine <- MutationEngine(setup_code = \"demo\") #>   [█---------------------------------------] 0% [00m:00s] Loading context index     [████████████████████████████████████████] 100% [00m:00s] Context index loaded  #>   [█---------------------------------------] 0% [00m:00s] Loading RS index          [████████████████------------------------] 38% [00m:01s] Loading RS index         [██████████████████████████████----------] 74% [00m:02s] Loading RS index         [████████████████████████████████████████] 100% [00m:02s] RS index loaded       #>   [█---------------------------------------] 0% [00m:00s] Loading germline          [████████████████████████████████████████] 100% [00m:00s] Germline loaded        # get the active germline subject dataframe head(m_engine$get_species_rates(), 5) #> [1] species    SNV_rate   CNA_rate   indel_rate #> <0 rows> (or 0-length row.names)"},{"path":"https://caravagnalab.github.io/ProCESS/reference/MutationEngine-cash-infinite_sites_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Switching on and off the infinite sites model. — MutationEngine$infinite_sites_model","title":"Switching on and off the infinite sites model. — MutationEngine$infinite_sites_model","text":"property enables/disables infinite sites model.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/MutationEngine-cash-infinite_sites_model.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Switching on and off the infinite sites model. — MutationEngine$infinite_sites_model","text":"TRUE, infinite sites model enabled new mutations exclusively placed mutation-free loci.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/MutationEngine-cash-infinite_sites_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Switching on and off the infinite sites model. — MutationEngine$infinite_sites_model","text":"","code":"# create a demonstrative mutation engine m_engine <- MutationEngine(setup_code = \"demo\") #>   [█---------------------------------------] 0% [00m:00s] Loading context index     [████████████████████████████████████████] 100% [00m:00s] Context index loaded  #>   [█---------------------------------------] 0% [00m:00s] Loading RS index          [████████████████------------------------] 39% [00m:01s] Loading RS index         [███████████████████████████████---------] 76% [00m:02s] Loading RS index         [████████████████████████████████████████] 100% [00m:02s] RS index loaded       #>   [█---------------------------------------] 0% [00m:00s] Loading germline          [████████████████████████████████████████] 100% [00m:00s] Germline loaded        # the infinite sites model is enabled by default m_engine$infinite_sites_model #> [1] TRUE  # the infinite sites model can be disabled m_engine$infinite_sites_model <- FALSE  m_engine$infinite_sites_model #> [1] FALSE"},{"path":"https://caravagnalab.github.io/ProCESS/reference/MutationEngine-cash-place_mutations.html","id":null,"dir":"Reference","previous_headings":"","what":"Placing the mutations — MutationEngine$place_mutations","title":"Placing the mutations — MutationEngine$place_mutations","text":"methods places mutations samples forest.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/MutationEngine-cash-place_mutations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Placing the mutations — MutationEngine$place_mutations","text":"samples_forest samples forest. num_of_preneoplatic_SNVs number pre-neoplastic SNVs. preneoplatic_SNV_signature_name name SNV signature preneoplastic SNV generation (optional). num_of_preneoplatic_indels number pre-neoplastic indels. preneoplatic_indel_signature_name name indel signature preneoplastic indel generation. seed seed random number generator (optional).","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/MutationEngine-cash-place_mutations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Placing the mutations — MutationEngine$place_mutations","text":"phylogenetic forest whose structure corresponds samples_forest.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/MutationEngine-cash-place_mutations.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Placing the mutations — MutationEngine$place_mutations","text":"node samples forest labelled mutations occurring cell represented node produces phylogenetic forest.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/MutationEngine-cash-place_mutations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Placing the mutations — MutationEngine$place_mutations","text":"","code":"# set the seed of the random number generator set.seed(0)  # create a simulation sim <- SpatialSimulation() sim$add_mutant(\"A\", c(SNV = 0.2), 0.01) sim$place_cell(\"A\", 500, 500)  sim$death_activation_level <- 100 sim$run_up_to_size(species = \"A\", num_of_cells = 50000) #>   [████████████████████████████████████████] 100% [00m:00s] Saving snapshot        # sample the region [450,500]x[475,550] sim$sample_cells(\"S1\", lower_corner = c(450, 475),                        upper_corner = c(500, 550))  # build the samples forest samples_forest <- sim$get_samples_forest()  # build a mutation engine m_engine <- MutationEngine(setup_code = \"demo\") #>   [█---------------------------------------] 0% [00m:00s] Loading context index     [████████████████████████████████████████] 100% [00m:00s] Context index loaded  #>   [█---------------------------------------] 0% [00m:00s] Loading RS index          [█████████████████-----------------------] 41% [00m:01s] Loading RS index         [███████████████████████████████---------] 75% [00m:02s] Loading RS index         [████████████████████████████████████████] 100% [00m:02s] RS index loaded       #>   [█---------------------------------------] 0% [00m:00s] Loading germline          [████████████████████████████████████████] 100% [00m:00s] Germline loaded        # add the mutant \"A\" to the engine m_engine$add_mutant(\"A\", c(SNV = 3e-9), list(SNV(\"22\", 12028576, \"G\"))) #>   [█---------------------------------------] 0% [00m:00s] Retrieving \"A\" SNVs       [█---------------------------------------] 0% [00m:00s] Found 22                  [█---------------------------------------] 0% [00m:00s] Reading 22                [█---------------------------------------] 0% [00m:01s] Reading 22                [█---------------------------------------] 0% [00m:02s] Reading 22                [████████████████████████████████████████] 100% [00m:02s] \"A\" SNVs retrieved     # add the default set of SNV signature coefficients m_engine$add_exposure(c(SBS13 = 0.3, SBS1 = 0.7, ID2 = 0.3, ID21 = 0.5,                         ID3 = 0.2))  # place the mutations on the samples forest assuming 1000 pre-neoplastic # SNVs and 500 indels phylogenetic_forest <- m_engine$place_mutations(samples_forest, 1000, 500) #>   [█---------------------------------------] 0% [00m:00s] Placing mutations         [████████████████████████████████████████] 100% [00m:00s] Mutations placed       phylogenetic_forest #> PhylogeneticForest #>   # of trees: 1 #>   # of nodes: 12077 #>   # of leaves: 3863 #>   samples: {\"S1\"} #>  #>   # of emerged SNVs and indels: 2035 #>   # of emerged CNAs: 0 #>"},{"path":"https://caravagnalab.github.io/ProCESS/reference/MutationEngine-cash-set_germline_subject.html","id":null,"dir":"Reference","previous_headings":"","what":"Setting the germline subject — MutationEngine$set_germline_subject","title":"Setting the germline subject — MutationEngine$set_germline_subject","text":"method sets germline subject.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/MutationEngine-cash-set_germline_subject.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Setting the germline subject — MutationEngine$set_germline_subject","text":"Set germline subject.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/MutationEngine-cash-set_germline_subject.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Setting the germline subject — MutationEngine$set_germline_subject","text":"subject must one among reported MutationEngine$get_germline_subjects().","code":""},{"path":[]},{"path":"https://caravagnalab.github.io/ProCESS/reference/MutationEngine-cash-set_germline_subject.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Setting the germline subject — MutationEngine$set_germline_subject","text":"","code":"# build a mutation engine m_engine <- MutationEngine(setup_code = \"demo\") #>   [█---------------------------------------] 0% [00m:00s] Loading context index     [████████████████████████████████████████] 100% [00m:00s] Context index loaded  #>   [█---------------------------------------] 0% [00m:00s] Loading RS index          [███████████████-------------------------] 35% [00m:01s] Loading RS index         [█████████████████████████████-----------] 71% [00m:02s] Loading RS index         [████████████████████████████████████████] 100% [00m:02s] RS index loaded       #>   [█---------------------------------------] 0% [00m:00s] Loading germline          [████████████████████████████████████████] 100% [00m:00s] Germline loaded        # set the active germline subject dataframe m_engine$set_germline_subject(\"NA18941\") #>   [█---------------------------------------] 0% [00m:00s] Loading germline          [████████████████████████████████████████] 100% [00m:00s] Germline loaded"},{"path":"https://caravagnalab.github.io/ProCESS/reference/MutationEngine.html","id":null,"dir":"Reference","previous_headings":"","what":"Generating phylogenetic forests — MutationEngine","title":"Generating phylogenetic forests — MutationEngine","text":"mutation engine can label every node descendants forest mutations produce consistent phylogenetic forest. function downloads sets data requires mutation engine. Finally, builds mutation engine .","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/MutationEngine.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generating phylogenetic forests — MutationEngine","text":"setup_code set-code (alternative directory). directory set-directory (alternative setup_code). reference_src reference genome path URL (mandatory directory provided). SBS_signatures_src SBS signature file path URL (mandatory directory provided). indel_signatures_src indel signature file path URL (mandatory directory provided). drivers_src driver mutation file path URL (mandatory directory provided). passenger_CNAs_src passenger CNAs file path URL (mandatory directory provided). germline_src germline directory path URL (mandatory directory provided). germline_subject germline subject (optional). context_sampling number reference contexts per context index (optional: default value 100). max_index_size maximum size admitted indel , consequence, maximum size motif stored repeated sequence index (optional: default value 50). max_repetition_storage maximum number repetitions per type stored repeated sequence index (optional: default value 500000). tumour_type type tumour. currently used select admissible passenger CNAs. passenger CNA dataset admissible, use empty string \"\" (optional: default value \"\"). tumour_study nationality code tumour study. used select admissible passenger CNAs. tumor study dataset admissible, use empty string \"\" (optional: default value \"\"). avoid_homozygous_losses optional Boolean flag avoid homozygous losses. set TRUE, passenger CNAs exclusively applied regions covered two alleles least. (default: TRUE). quiet optional Boolean flag avoid progress bar (default: FALSE).","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/MutationEngine.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generating phylogenetic forests — MutationEngine","text":"mutation engine object.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/MutationEngine.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generating phylogenetic forests — MutationEngine","text":"mutations randomly generated according three factors: - mutational rates species involved descendants forest - genotypical characterization mutants involved descendants forest, .e., SVNs CNAs characterizing mutant genotypes - SBS signature coefficients active along species simulation data provided mutation engine using methods MutationEngine$add_exposure() MutationEngine$add_exposure() data provided means MutationEngine$add_mutant(). construction MutationEngine object requires reference sequence SBS file downloaded Internet. download context index reference sequence automatically built. Thess processes may take time depending size reference sequence. , downloaded files together context index saved directory disk available successive MutationEngine constructions. two building modalities: first one general, requires specify data sources; second one adopts pre-set configurations, suitable former many cases. first building modality requires specify directory data must saved, path URL reference sequence, SBS file, driver SNVs file, passenger CNAs file, germline data directory parameters directory, reference_src, SBS_src, drivers_src, passenger_CNAs_src, germline_src, respectively. second building modality exclusively requires set-code (parameter setup_code). list supported set-codes can obtained using function get_mutation_engine_codes(). number context sampling optional parameter allows sampling reference contexts building context index. parameter, set 100 default, specifies many occurrences context must identified adding one context index. larger number context sampling, larger context index. side, lower number context sampling, lower number sites reference genome can affected simulated mutations. parameters mutation engine construction match previous construction, corresponding reference sequence, SBS file, previously built context index loaded set-directory avoiding computations.","code":""},{"path":[]},{"path":"https://caravagnalab.github.io/ProCESS/reference/MutationEngine.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generating phylogenetic forests — MutationEngine","text":"","code":"# set the reference and SBS URLs reference_url <- paste0(\"https://ftp.ensembl.org/pub/grch37/release-111/\",                         \"fasta/homo_sapiens/dna/Homo_sapiens.GRCh37.\",                         \"dna.chromosome.22.fa.gz\") sbs_url <- paste0(\"https://cancer.sanger.ac.uk/signatures/documents/\",                   \"2123/COSMIC_v3.4_SBS_GRCh37.txt\") indel_url <- paste0(\"https://cancer.sanger.ac.uk/signatures/documents/\",                     \"2121/COSMIC_v3.4_ID_GRCh37.txt\") drivers_url <- paste0(\"https://raw.githubusercontent.com/\",                       \"caravagnalab/ProCESS/main/inst/extdata/\",                       \"driver_mutations_hg19.csv\") passenger_CNAs_url <- paste0(\"https://raw.githubusercontent.com/\",                              \"caravagnalab/ProCESS/main/inst/extdata/\",                              \"passenger_CNAs_hg19.csv\") germline_url <- paste0(\"https://zenodo.org/records/13166780/files/\",                        \"germline_data_demo.tar.gz\")  # build a mutation engine and save the required files into the # directory \"Test\". The `drivers_url` parameter is optional, but # it is suggested to avoid passenger mutations on driver loci. m_engine <- MutationEngine(directory = \"Test\",                                   reference_src = reference_url,                                   SBS_signatures_src = sbs_url,                                   indel_signatures_src = indel_url,                                   drivers_src = drivers_url,                                   passenger_CNAs_src = passenger_CNAs_url,                                   germline_src = germline_url) #> Downloading reference genome... #> Reference genome downloaded #> Decompressing reference file...done #> Downloading SBS file... #> SBS file downloaded #> Downloading indel file... #> indel file downloaded #> Downloading driver mutation file... #> Driver mutation file downloaded #> Downloading passenger CNAs file... #> Passenger CNAs file downloaded #> Downloading germline mutations... #> Germline mutations downloaded #> Building context index... #>   [█---------------------------------------] 0% [00m:00s] Processing chr. 22        [█████████████████-----------------------] 40% [00m:01s] Processing chr. 22       [██████████████████████████████----------] 73% [00m:02s] Processing chr. 22       [████████████████████████████████████████] 100% [00m:02s] Context index built   #>   [█---------------------------------------] 0% [00m:00s] Saving context index      [████████████████████████████████████████] 100% [00m:00s] Context index saved   #> done #> Building repeated sequence index... #>   [█---------------------------------------] 0% [00m:00s] Processing chr. 22        [█---------------------------------------] 0% [00m:00s] Processing chr. 22        [█---------------------------------------] 0% [00m:04s] Processing chr. 22        [█---------------------------------------] 0% [00m:06s] Processing chr. 22        [█---------------------------------------] 0% [00m:08s] Processing chr. 22        [█---------------------------------------] 0% [00m:11s] Processing chr. 22        [█---------------------------------------] 0% [00m:14s] Processing chr. 22        [█---------------------------------------] 0% [00m:19s] Processing chr. 22        [████████████████████████████████████████] 100% [00m:19s] RS index built        #>   [█---------------------------------------] 0% [00m:00s] Saving RS index           [█---------------------------------------] 0% [00m:00s] Saving RS index           [██--------------------------------------] 3% [00m:02s] Saving RS index           [███████████████████████-----------------] 56% [00m:03s] Saving RS index        done #>   [████████████████████████████████████████] 100% [00m:03s] RS index saved        #>   [█---------------------------------------] 0% [00m:00s] Loading germline          [████████████████████████████████████████] 100% [00m:00s] Germline loaded       #>   [█---------------------------------------] 0% [00m:00s] Saving germline           [████████████████████████████████████████] 100% [00m:00s] Germline saved         # if the parameters of a mutation engine construction match those of a # previous construction, then the corresponding reference sequence, # the SBS file, and the previously built context index are loaded from # the set-up directory avoiding further computations. m_engine <- MutationEngine(\"Test\", reference_url, sbs_url,                                   indel_url, drivers_url,                                   passenger_CNAs_url, germline_url) #>   [█---------------------------------------] 0% [00m:00s] Loading context index     [████████████████████████████████████████] 100% [00m:00s] Context index loaded  #>   [█---------------------------------------] 0% [00m:00s] Loading RS index          [███████████████-------------------------] 35% [00m:01s] Loading RS index         [██████████████████████████--------------] 64% [00m:02s] Loading RS index         [██████████████████████████████████------] 83% [00m:03s] Loading RS index         [████████████████████████████████████████] 100% [00m:03s] RS index loaded       #>   [█---------------------------------------] 0% [00m:00s] Loading germline          [████████████████████████████████████████] 100% [00m:00s] Germline loaded        # if the `context_sampling` parameter changes, a new context index is # built, while neither the reference sequence nor the SBS file are # downloaded again. m_engine <- MutationEngine(\"Test\", reference_url, sbs_url,                                   indel_url, drivers_url,                                   passenger_CNAs_url, germline_url,                                   context_sampling = 50) #> Building context index... #>   [█---------------------------------------] 0% [00m:00s] Processing chr. 22        [█████████████---------------------------] 32% [00m:01s] Processing chr. 22       [███████████████████████-----------------] 57% [00m:02s] Processing chr. 22       [████████████████████████████████████████] 98% [00m:03s] Processing chr. 22       [████████████████████████████████████████] 100% [00m:03s] Context index built   #>   [█---------------------------------------] 0% [00m:00s] Saving context index      [████████████████████████████████████████] 100% [00m:00s] Context index saved   #> done #>   [█---------------------------------------] 0% [00m:00s] Loading RS index          [███████████████-------------------------] 37% [00m:01s] Loading RS index         [███████████████████████████████---------] 75% [00m:02s] Loading RS index         [████████████████████████████████████████] 100% [00m:02s] RS index loaded       #>   [█---------------------------------------] 0% [00m:00s] Loading germline          [████████████████████████████████████████] 100% [00m:00s] Germline loaded        # a further construction with the same parameters avoids both # downloads and context index construction. m_engine <- MutationEngine(\"Test\", reference_url, sbs_url,                                   indel_url, drivers_url,                                   passenger_CNAs_url, germline_url,                                   context_sampling = 50) #>   [█---------------------------------------] 0% [00m:00s] Loading context index     [████████████████████████████████████████] 100% [00m:00s] Context index loaded  #>   [█---------------------------------------] 0% [00m:00s] Loading RS index          [█████████████---------------------------] 32% [00m:01s] Loading RS index         [█████████████████████████---------------] 61% [00m:02s] Loading RS index         [█████████████████████████████████████---] 92% [00m:03s] Loading RS index         [████████████████████████████████████████] 100% [00m:03s] RS index loaded       #>   [█---------------------------------------] 0% [00m:00s] Loading germline          [████████████████████████████████████████] 100% [00m:00s] Germline loaded        m_engine #> MutationEngine #>  Passenger rates #>  #>  Driver mutations #>  #>  Timed Exposure #>    SBS Timed Exposures #>  #>    indel Timed Exposures #>   # the parameters `directory`, `reference_src`, `SBS_src`, `drivers_src`, # `passenger_CNAs_src`, and `germline_src` can be avoided by providing # the `setup_code` parameter. The set-up code `demo` is provided among # those available for testing purpose. m_engine <- MutationEngine(setup_code = \"demo\") #>   [█---------------------------------------] 0% [00m:00s] Loading context index     [████████████████████████████████████████] 100% [00m:00s] Context index loaded  #>   [█---------------------------------------] 0% [00m:00s] Loading RS index          [███████████████-------------------------] 35% [00m:01s] Loading RS index         [██████████████████████████████----------] 73% [00m:02s] Loading RS index         [████████████████████████████████████████] 100% [00m:02s] RS index loaded       #>   [█---------------------------------------] 0% [00m:00s] Loading germline          [████████████████████████████████████████] 100% [00m:00s] Germline loaded        # the `context_sampling` can be used also when a pre-defined set-up # configuration is adopted. m_engine <- MutationEngine(setup_code = \"demo\",                                   context_sampling = 50) #> Building context index... #>   [█---------------------------------------] 0% [00m:00s] Processing chr. 22        [█████████████---------------------------] 32% [00m:01s] Processing chr. 22       [███████████████████████████-------------] 65% [00m:02s] Processing chr. 22       [████████████████████████████████████████] 100% [00m:03s] Context index built   #>   [█---------------------------------------] 0% [00m:00s] Saving context index      [████████████████████████████████████████] 100% [00m:00s] Context index saved   #> done #>   [█---------------------------------------] 0% [00m:00s] Loading RS index          [██████████████--------------------------] 33% [00m:01s] Loading RS index         [███████████████████████████-------------] 66% [00m:02s] Loading RS index         [███████████████████████████████████████-] 97% [00m:03s] Loading RS index         [████████████████████████████████████████] 100% [00m:03s] RS index loaded       #>   [█---------------------------------------] 0% [00m:00s] Loading germline          [████████████████████████████████████████] 100% [00m:00s] Germline loaded        m_engine #> MutationEngine #>  Passenger rates #>  #>  Driver mutations #>  #>  Timed Exposure #>    SBS Timed Exposures #>  #>    indel Timed Exposures #>   # remove the \"Test\" and \"demo\" directories unlink(\"Test\", recursive = TRUE) unlink(\"demo\", recursive = TRUE)"},{"path":"https://caravagnalab.github.io/ProCESS/reference/PhylogeneticForest-cash-get_absolute_chromosome_positions.html","id":null,"dir":"Reference","previous_headings":"","what":"Getting the absolute chromosome positions — PhylogeneticForest$get_absolute_chromosome_positions","title":"Getting the absolute chromosome positions — PhylogeneticForest$get_absolute_chromosome_positions","text":"method returns absolute chromosome positions.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/PhylogeneticForest-cash-get_absolute_chromosome_positions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Getting the absolute chromosome positions — PhylogeneticForest$get_absolute_chromosome_positions","text":"dataframe reporting name (column \"chr\"), length (column \"length\"), initial absolute position (column \"\"), final absolute position (column \"\") chromosome.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/PhylogeneticForest-cash-get_absolute_chromosome_positions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Getting the absolute chromosome positions — PhylogeneticForest$get_absolute_chromosome_positions","text":"builds dataframe reporting name, length, initial final absolute positions chromosome reference genome.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/PhylogeneticForest-cash-get_bulk_allelic_fragmentation.html","id":null,"dir":"Reference","previous_headings":"","what":"Getting the bulk allelic fragmentation dataframe — PhylogeneticForest$get_bulk_allelic_fragmentation","title":"Getting the bulk allelic fragmentation dataframe — PhylogeneticForest$get_bulk_allelic_fragmentation","text":"method returns dataframe representing bulk allelic fragmentation genome.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/PhylogeneticForest-cash-get_bulk_allelic_fragmentation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Getting the bulk allelic fragmentation dataframe — PhylogeneticForest$get_bulk_allelic_fragmentation","text":"sample_name name sample whose bulk allelic fragmentation aimed (optional).","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/PhylogeneticForest-cash-get_bulk_allelic_fragmentation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Getting the bulk allelic fragmentation dataframe — PhylogeneticForest$get_bulk_allelic_fragmentation","text":"dataframe reporting, genomic fragment allelic type genomic fragment, chromosome (chr), first base position (begin), last base position (end), number copy major minor alleles (major minor, respectively), ratio number cells exhibiting allelic type total number cells sample.","code":""},{"path":[]},{"path":"https://caravagnalab.github.io/ProCESS/reference/PhylogeneticForest-cash-get_cell_allelic_fragmentation.html","id":null,"dir":"Reference","previous_headings":"","what":"Getting the cell allelic fragmentation dataframe — PhylogeneticForest$get_cell_allelic_fragmentation","title":"Getting the cell allelic fragmentation dataframe — PhylogeneticForest$get_cell_allelic_fragmentation","text":"method returns dataframe representing allelic fragmentation sampled cell.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/PhylogeneticForest-cash-get_cell_allelic_fragmentation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Getting the cell allelic fragmentation dataframe — PhylogeneticForest$get_cell_allelic_fragmentation","text":"dataframe reporting, cell, genomic fragment, allelic type genomic fragment, cell identifier (cell_id), chromosome (chr), first base position (begin), last base position (end), number copy major minor alleles (major minor, respectively).","code":""},{"path":[]},{"path":"https://caravagnalab.github.io/ProCESS/reference/PhylogeneticForest-cash-get_coalescent_cells.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieving most recent common ancestors — PhylogeneticForest$get_coalescent_cells","title":"Retrieving most recent common ancestors — PhylogeneticForest$get_coalescent_cells","text":"method retrieves recent common ancestors set cells.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/PhylogeneticForest-cash-get_coalescent_cells.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieving most recent common ancestors — PhylogeneticForest$get_coalescent_cells","text":"cell_ids list identifiers cells whose recent common ancestors aimed (optional).","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/PhylogeneticForest-cash-get_coalescent_cells.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieving most recent common ancestors — PhylogeneticForest$get_coalescent_cells","text":"dataframe representing, identified cells, identified (column cell_id), whenever node root, ancestor identifier (column ancestor), whenever node sampled, .e., one forest leaves, name sample containing node, (column sample), mutant (column mutant), epistate (column epistate), birth time (column birth_time).","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/PhylogeneticForest-cash-get_coalescent_cells.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Retrieving most recent common ancestors — PhylogeneticForest$get_coalescent_cells","text":"optional parameter cell_ids used, method find recent common ancestors cells identifier among cell_ids. , otherwise, optional parameter used, method find recent common ancestors forest leaves.","code":""},{"path":[]},{"path":"https://caravagnalab.github.io/ProCESS/reference/PhylogeneticForest-cash-get_driver_mutations.html","id":null,"dir":"Reference","previous_headings":"","what":"Getting the driver mutations — PhylogeneticForest$get_driver_mutations","title":"Getting the driver mutations — PhylogeneticForest$get_driver_mutations","text":"method returns applied driver mutations.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/PhylogeneticForest-cash-get_driver_mutations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Getting the driver mutations — PhylogeneticForest$get_driver_mutations","text":"dataframe consisting eight columns mutant, order, type, CNA_type, chr, start, end, ref, alt, allele, allele_srd. row dataframe reports one driver mutations. fields mutant order report name mutant application order among mutant driver mutations, respectively. column type declares mutation type contains \"SID\", \"CNA\", \"WGD\" mutation SNV/indel, CNA, whole genome duplication, respectively. mutation CNA, CNA_type can either \"\" (.e., amplification) \"D\" (.e., deletion). mutation WGD, fields chr, start, end contains mutation chromosome, initial final position chromosome, respectively. mutation SID , fields ref alt contains mutation reference genome alternate sequences, respectively. mutation SID CNA deletion, field allele stores allele mutation applied. instead mutation CNA amplification, fields allele src_allele reports identifiers new allele original allele, respectively. remaining cases, fields contains value NA.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/PhylogeneticForest-cash-get_exposures.html","id":null,"dir":"Reference","previous_headings":"","what":"Getting the timed exposure dataframe — PhylogeneticForest$get_exposures","title":"Getting the timed exposure dataframe — PhylogeneticForest$get_exposures","text":"method returns dataframe representing exposure evolution time.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/PhylogeneticForest-cash-get_exposures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Getting the timed exposure dataframe — PhylogeneticForest$get_exposures","text":"dataframe reporting time, signature, exposure , type.","code":""},{"path":[]},{"path":"https://caravagnalab.github.io/ProCESS/reference/PhylogeneticForest-cash-get_first_occurrences.html","id":null,"dir":"Reference","previous_headings":"","what":"Getting the mutation first occurrences — PhylogeneticForest$get_first_occurrences","title":"Getting the mutation first occurrences — PhylogeneticForest$get_first_occurrences","text":"method returns identifier cell mutation occurs first time.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/PhylogeneticForest-cash-get_first_occurrences.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Getting the mutation first occurrences — PhylogeneticForest$get_first_occurrences","text":"mutation mutation SNV, indel, CNA.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/PhylogeneticForest-cash-get_first_occurrences.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Getting the mutation first occurrences — PhylogeneticForest$get_first_occurrences","text":"identifier cell mutation occurs first time.","code":""},{"path":[]},{"path":"https://caravagnalab.github.io/ProCESS/reference/PhylogeneticForest-cash-get_germline_mutations.html","id":null,"dir":"Reference","previous_headings":"","what":"Getting the germinal mutations — PhylogeneticForest$get_germline_mutations","title":"Getting the germinal mutations — PhylogeneticForest$get_germline_mutations","text":"method returns forest SNVs indels.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/PhylogeneticForest-cash-get_germline_mutations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Getting the germinal mutations — PhylogeneticForest$get_germline_mutations","text":"dataframe reporting \"chr\", \"chr_pos\" (.e., position chromosome), \"allele\" (mutation occurs), \"ref\", \"alt\", \"cause\", \"type\" (.e., either \"SNV\" \"indel\") \"class\" (.e., \"germinal\").","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/PhylogeneticForest-cash-get_germline_mutations.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Getting the germinal mutations — PhylogeneticForest$get_germline_mutations","text":"builds dataframe representing germinal SNVs indels cells represented phylogenetic forest. dataframe also reports allele mutations occur support double occurrences due CNAs.","code":""},{"path":[]},{"path":"https://caravagnalab.github.io/ProCESS/reference/PhylogeneticForest-cash-get_germline_subject.html","id":null,"dir":"Reference","previous_headings":"","what":"Getting the germline subject — PhylogeneticForest$get_germline_subject","title":"Getting the germline subject — PhylogeneticForest$get_germline_subject","text":"method returns dataframe reporting germline subject name (column \"sample\"), population (column \"pop\"), super-population (column \"super_pop\"), gender (column \"gender\").","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/PhylogeneticForest-cash-get_germline_subject.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Getting the germline subject — PhylogeneticForest$get_germline_subject","text":"name subject whose germline used.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/PhylogeneticForest-cash-get_nodes.html","id":null,"dir":"Reference","previous_headings":"","what":"Getting the forest nodes — PhylogeneticForest$get_nodes","title":"Getting the forest nodes — PhylogeneticForest$get_nodes","text":"method returns nodes forest.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/PhylogeneticForest-cash-get_nodes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Getting the forest nodes — PhylogeneticForest$get_nodes","text":"dataframe representing, node forest, identified (column cell_id), whenever node root, ancestor identifier (column ancestor), whenever node sampled, .e., one forest leaves, name sample containing node, (column sample), mutant (column mutant), epistate (column epistate), birth time (column birth_time).","code":""},{"path":[]},{"path":"https://caravagnalab.github.io/ProCESS/reference/PhylogeneticForest-cash-get_reference_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Getting the reference genome path — PhylogeneticForest$get_reference_path","title":"Getting the reference genome path — PhylogeneticForest$get_reference_path","text":"method returns reference genome path.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/PhylogeneticForest-cash-get_reference_path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Getting the reference genome path — PhylogeneticForest$get_reference_path","text":"reference genome path.","code":""},{"path":[]},{"path":"https://caravagnalab.github.io/ProCESS/reference/PhylogeneticForest-cash-get_sampled_cell_CNAs.html","id":null,"dir":"Reference","previous_headings":"","what":"Getting the sampled cells CNAs — PhylogeneticForest$get_sampled_cell_CNAs","title":"Getting the sampled cells CNAs — PhylogeneticForest$get_sampled_cell_CNAs","text":"method returns CNAs sample cells.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/PhylogeneticForest-cash-get_sampled_cell_CNAs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Getting the sampled cells CNAs — PhylogeneticForest$get_sampled_cell_CNAs","text":"cell_id identifier cell whose CNAs aimed (optional).","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/PhylogeneticForest-cash-get_sampled_cell_CNAs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Getting the sampled cells CNAs — PhylogeneticForest$get_sampled_cell_CNAs","text":"dataframe reporting cell_id, type (\"\" amplifications \"D\" deletions), chr, begin (.e., first CNA locus chromosome), end (.e., last CNA locus chromosome), allele, src allele (allele origin amplifications, NA deletions), class (.e., \"driver\", \"passenger\", \"germinal\" \"preneoplastic\").","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/PhylogeneticForest-cash-get_sampled_cell_CNAs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Getting the sampled cells CNAs — PhylogeneticForest$get_sampled_cell_CNAs","text":"method builds dataframe representing CNAs cells sampled simulation represented leaves phylogenetic forest.","code":""},{"path":[]},{"path":"https://caravagnalab.github.io/ProCESS/reference/PhylogeneticForest-cash-get_sampled_cell_CNAs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Getting the sampled cells CNAs — PhylogeneticForest$get_sampled_cell_CNAs","text":"","code":"sim <- SpatialSimulation()  sim$add_mutant(name = \"Clone_1\",                epigenetic_rates = c(\"+-\" = 0.01, \"-+\" = 0.01),                growth_rates = c(\"+\" = 0.2, \"-\" = 0.08),                death_rates = c(\"+\" = 0.05, \"-\" = 0.01)) sim$place_cell(\"Clone_1+\", 500, 500) sim$run_up_to_size(\"Clone_1-\", 1000) #>   [████████████████████████████████████████] 100% [00m:00s] Saving snapshot        sim$sample_cells(\"Sample_A\", c(475, 475), c(525, 525)) sample_forest <- sim$get_samples_forest()  m_engine <- MutationEngine(setup_code = \"demo\") #> Downloading reference genome... #> Reference genome downloaded #> Decompressing reference file...done #> Downloading SBS file... #> SBS file downloaded #> Downloading indel file... #> indel file downloaded #> Downloading driver mutation file... #> Driver mutation file downloaded #> Downloading passenger CNAs file... #> Passenger CNAs file downloaded #> Downloading germline mutations... #> Germline mutations downloaded #> Building context index... #>   [█---------------------------------------] 0% [00m:00s] Processing chr. 22        [█████████████████-----------------------] 40% [00m:01s] Processing chr. 22       [█████████████████████████████████-------] 81% [00m:02s] Processing chr. 22       [████████████████████████████████████████] 100% [00m:02s] Context index built   #>   [█---------------------------------------] 0% [00m:00s] Saving context index      [████████████████████████████████████████] 100% [00m:00s] Context index saved   #> done #> Building repeated sequence index... #>   [█---------------------------------------] 0% [00m:00s] Processing chr. 22        [█---------------------------------------] 0% [00m:03s] Processing chr. 22        [█---------------------------------------] 0% [00m:04s] Processing chr. 22        [█---------------------------------------] 0% [00m:05s] Processing chr. 22        [█---------------------------------------] 0% [00m:07s] Processing chr. 22        [█---------------------------------------] 0% [00m:08s] Processing chr. 22        [█---------------------------------------] 0% [00m:11s] Processing chr. 22        [████████████████████████████████████████] 100% [00m:11s] RS index built        #>   [█---------------------------------------] 0% [00m:00s] Saving RS index           [█---------------------------------------] 0% [00m:00s] Saving RS index           [████████████████████████████------------] 69% [00m:02s] Saving RS index        done #>   [████████████████████████████████████████] 100% [00m:02s] RS index saved        #>   [█---------------------------------------] 0% [00m:00s] Loading germline          [████████████████████████████████████████] 100% [00m:00s] Germline loaded       #>   [█---------------------------------------] 0% [00m:00s] Saving germline           [████████████████████████████████████████] 100% [00m:00s] Germline saved         m_engine$add_mutant(\"Clone_1\", list(\"+\" = c(SNV = 1e-7, indel = 1e-8),                                     \"-\" = c(SNV = 3e-7, CNA = 1e-11)),                     list(SNV(\"22\", 10510210, \"C\", allele = 1),                          CNA(\"D\", \"22\", 5010000, 200000,                                    allele = 1))) #>   [█---------------------------------------] 0% [00m:00s] Retrieving \"Clone_1\" SNVs  [█---------------------------------------] 0% [00m:00s] Found 22                  [█---------------------------------------] 0% [00m:00s] Reading 22                [█---------------------------------------] 0% [00m:01s] Reading 22                [████████████████████████████████████████] 100% [00m:01s] \"Clone_1\" SNVs retrieved  m_engine$add_exposure(c(ID1 = 1, SBS1 = 0.5, SBS2 = 0.5))  phylo_forest <- m_engine$place_mutations(sample_forest, 1, 1) #>   [█---------------------------------------] 0% [00m:00s] Placing mutations         [████████████████████████████████████████] 100% [00m:00s] Mutations placed       mutations <- phylo_forest$get_sampled_cell_CNAs()  head(mutations) #>   cell_id type chr   begin     end allele src.allele  class #> 1     546    D  22 5010000 5209999      1         NA driver #> 2    1285    D  22 5010000 5209999      1         NA driver #> 3    1475    D  22 5010000 5209999      1         NA driver #> 4    1775    D  22 5010000 5209999      1         NA driver #> 5    1885    D  22 5010000 5209999      1         NA driver #> 6    2131    D  22 5010000 5209999      1         NA driver"},{"path":"https://caravagnalab.github.io/ProCESS/reference/PhylogeneticForest-cash-get_sampled_cell_mutations.html","id":null,"dir":"Reference","previous_headings":"","what":"Getting the sampled cells mutations — PhylogeneticForest$get_sampled_cell_mutations","title":"Getting the sampled cells mutations — PhylogeneticForest$get_sampled_cell_mutations","text":"method returns mutations sample cells.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/PhylogeneticForest-cash-get_sampled_cell_mutations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Getting the sampled cells mutations — PhylogeneticForest$get_sampled_cell_mutations","text":"cell_id identifier cell whose mutations aimed (optional).","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/PhylogeneticForest-cash-get_sampled_cell_mutations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Getting the sampled cells mutations — PhylogeneticForest$get_sampled_cell_mutations","text":"dataframe reporting cell_id, chr, (.e., mutation chromosome), chr_pos (.e., position chromosome), allele (mutation occurs), ref, alt, type (.e., either \"SNV\" \"indel\"), cause, class (.e., \"driver\", \"passenger\", \"germinal\" \"preneoplastic\") mutation sampled cell genomes.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/PhylogeneticForest-cash-get_sampled_cell_mutations.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Getting the sampled cells mutations — PhylogeneticForest$get_sampled_cell_mutations","text":"method builds dataframe representing SNV indel mutations cells sampled simulation represented leaves phylogenetic forest. dataframe also reports allele mutations occur support double occurrences due CNAs.","code":""},{"path":[]},{"path":"https://caravagnalab.github.io/ProCESS/reference/PhylogeneticForest-cash-get_sampled_cell_mutations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Getting the sampled cells mutations — PhylogeneticForest$get_sampled_cell_mutations","text":"","code":"sim <- SpatialSimulation()  sim$add_mutant(name = \"Clone_1\",                epigenetic_rates = c(\"+-\" = 0.01, \"-+\" = 0.01),                growth_rates = c(\"+\" = 0.2, \"-\" = 0.08),                death_rates = c(\"+\" = 0.05, \"-\" = 0.01)) sim$place_cell(\"Clone_1+\", 500, 500) sim$run_up_to_size(\"Clone_1-\", 1000) #>   [████████████████████████████████████████] 100% [00m:00s] Saving snapshot        sim$sample_cells(\"Sample_A\", c(475, 475), c(525, 525)) sample_forest <- sim$get_samples_forest()  m_engine <- MutationEngine(setup_code = \"demo\") #>   [█---------------------------------------] 0% [00m:00s] Loading context index     [████████████████████████████████████████] 100% [00m:00s] Context index loaded  #>   [█---------------------------------------] 0% [00m:00s] Loading RS index          [█████████████████-----------------------] 41% [00m:01s] Loading RS index         [█████████████████████████████████-------] 80% [00m:02s] Loading RS index         [████████████████████████████████████████] 100% [00m:02s] RS index loaded       #>   [█---------------------------------------] 0% [00m:00s] Loading germline          [████████████████████████████████████████] 100% [00m:00s] Germline loaded        m_engine$add_mutant(\"Clone_1\", list(\"+\" = c(SNV = 1e-7, indel = 1e-8),                                     \"-\" = c(SNV = 3e-7, CNA = 1e-11)),                     list(SNV(\"22\", 10510210, \"C\", allele = 1),                          CNA(\"D\", \"22\", 5010000, 200000,                                    allele = 1))) #>   [█---------------------------------------] 0% [00m:00s] Retrieving \"Clone_1\" SNVs  [█---------------------------------------] 0% [00m:00s] Found 22                  [█---------------------------------------] 0% [00m:00s] Reading 22                [█---------------------------------------] 0% [00m:01s] Reading 22                [████████████████████████████████████████] 100% [00m:01s] \"Clone_1\" SNVs retrieved  m_engine$add_exposure(c(ID1 = 1, SBS1 = 0.5, SBS2 = 0.5))  phylo_forest <- m_engine$place_mutations(sample_forest, 1, 1) #>   [█---------------------------------------] 0% [00m:00s] Placing mutations         [████████████████████████████████████████] 100% [00m:00s] Mutations placed       mutations <- phylo_forest$get_sampled_cell_mutations()  head(mutations) #>   cell_id chr  chr_pos allele ref alt type cause     class #> 1     583  22 16557388      0   G   A  SNV  SBS2 passenger #> 2     583  22 16959608      0   C   T  SNV  SBS2 passenger #> 3     583  22 17379701      0   G   A  SNV  SBS2 passenger #> 4     583  22 17430226      0   G   A  SNV  SBS2 passenger #> 5     583  22 17557381      0   G   A  SNV  SBS1 passenger #> 6     583  22 18308060      0   G   A  SNV  SBS1 passenger"},{"path":"https://caravagnalab.github.io/ProCESS/reference/PhylogeneticForest-cash-get_samples_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieving sample information — PhylogeneticForest$get_samples_info","title":"Retrieving sample information — PhylogeneticForest$get_samples_info","text":"method retrieves information samples whose cells used leaves samples forest.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/PhylogeneticForest-cash-get_samples_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieving sample information — PhylogeneticForest$get_samples_info","text":"dataframe containing, sample collected simulation, columns \"name\", \"time\", \"id\", \"ymin\", \"xmin\", \"ymax\", \"ymax\", \"xmax\", \"tumour_cells\", \"tumour_cells_in_bbox\", \"DNA_quantity\", \"equivalent_normal_cells\". columns \"ymin\", \"xmin\", \"ymax\", \"xmax\" report boundaries sample bounding box, \"tumour_cells\" \"tumour_cells_in_bbox\" number tumour cells sample bounding box, respectively. Finally, \"DNA_quantity\" contains overall number tumoral bases, .e., sum lengths alleles sample tumoral cells, \"equivalent_normal_cells\" contains number normal cells contain much DNA sample tumoral cells. \"DNA_quantity\" stored real number despite natural number usually exceeds largest natural number can natively represented R.","code":""},{"path":[]},{"path":"https://caravagnalab.github.io/ProCESS/reference/PhylogeneticForest-cash-get_species_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Getting the species — PhylogeneticForest$get_species_info","title":"Getting the species — PhylogeneticForest$get_species_info","text":"method describes simulated species.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/PhylogeneticForest-cash-get_species_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Getting the species — PhylogeneticForest$get_species_info","text":"dataframe reporting mutant, epistate, SNV_rate, indel_rate, CNA_rate registered species.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/PhylogeneticForest-cash-get_sticks.html","id":null,"dir":"Reference","previous_headings":"","what":"Computing the forest sticks — PhylogeneticForest$get_sticks","title":"Computing the forest sticks — PhylogeneticForest$get_sticks","text":"method computes sticks forest.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/PhylogeneticForest-cash-get_sticks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computing the forest sticks — PhylogeneticForest$get_sticks","text":"birth_threshold maximum birth time cells associated returned sticks (optional).","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/PhylogeneticForest-cash-get_sticks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computing the forest sticks — PhylogeneticForest$get_sticks","text":"list forest sticks whose associated cells birth time smaller equal birth_threshold. stick represented list cell identifiers labelling nodes stick higher deeper forest.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/PhylogeneticForest-cash-get_sticks.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Computing the forest sticks — PhylogeneticForest$get_sticks","text":"crucial node forest root forest, node whose parent belongs different species, recent common ancestor two crucial nodes. stick path forest crucial nodes first last one. method returns list forest sticks. stick represented sequence cell identifiers labelling nodes stick.","code":""},{"path":[]},{"path":"https://caravagnalab.github.io/ProCESS/reference/PhylogeneticForest-cash-get_subforest_for.html","id":null,"dir":"Reference","previous_headings":"","what":"Building sub-forests — PhylogeneticForest$get_subforest_for","title":"Building sub-forests — PhylogeneticForest$get_subforest_for","text":"method builds sub-forest using leaves original samples.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/PhylogeneticForest-cash-get_subforest_for.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Building sub-forests — PhylogeneticForest$get_subforest_for","text":"sample_names names samples whose cells used leaves new forest","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/PhylogeneticForest-cash-get_subforest_for.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Building sub-forests — PhylogeneticForest$get_subforest_for","text":"samples forest built samples mentioned sample_names","code":""},{"path":[]},{"path":"https://caravagnalab.github.io/ProCESS/reference/PhylogeneticForest-cash-save.html","id":null,"dir":"Reference","previous_headings":"","what":"Saving a phylogenetic forest — PhylogeneticForest$save","title":"Saving a phylogenetic forest — PhylogeneticForest$save","text":"method saves phylogenetic forest file.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/PhylogeneticForest-cash-save.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Saving a phylogenetic forest — PhylogeneticForest$save","text":"filename path file phylogenetic. quiet optional  Boolean flag avoid progress bar (default: FALSE). forest must saved.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/PhylogeneticForest-cash-set_reference_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Setting the reference genome path — PhylogeneticForest$set_reference_path","title":"Setting the reference genome path — PhylogeneticForest$set_reference_path","text":"method returns reference genome path.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/PhylogeneticForest-cash-set_reference_path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Setting the reference genome path — PhylogeneticForest$set_reference_path","text":"reference genome path.","code":""},{"path":[]},{"path":"https://caravagnalab.github.io/ProCESS/reference/PhylogeneticForest.html","id":null,"dir":"Reference","previous_headings":"","what":"The phylogenetic forest of cells in samples — PhylogeneticForest","title":"The phylogenetic forest of cells in samples — PhylogeneticForest","text":"class represents phylogenetic forest cells sampled computation.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/PhylogeneticForest.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The phylogenetic forest of cells in samples — PhylogeneticForest","text":"leaves forest sampled cells. class analogous class SamplesForest, node labelled mutations occurring first time cell represented node . Moreover leaf also associated genome mutations occurring corresponding cell.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/PhylogeneticForest.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"The phylogenetic forest of cells in samples — PhylogeneticForest","text":"get_coalescent_cells Retrieve recent common ancestors Parameter: cell_ids - list identifiers cells whose recent common ancestors aimed (optional). Return: dataframe representing, identified cells, identified (column cell_id), whenever node root, ancestor identifier (column ancestor), whenever node sampled, .e., one forest leaves, name sample containing node, (column sample), mutant (column mutant), epistate (column epistate), birth time (column birth_time). get_first_occurrences Gets identifier cell mutation occurs first time Parameter: mutation - mutation SNV, indel, CNA. Return: identifier cell mutation occurs first time. get_germline_mutations Gets germinal SNVs indels Return: dataframe reporting chr (.e., chromosome), chr_pos\" (.e., position chromosome), allele (SNV occurs), ref, alt, type (.e., either \"SNV\" \"indel\") class (.e., \"germinal\"). get_germline_subject Gets germline subject name Return: name subject whose germline used. get_nodes Get forest nodes Return: dataframe representing, node forest, identified (column id), whenever node root, ancestor identifier (column ancestor), whenever node sampled, .e., one forest leaves, name sample containing node, (column sample), mutant (column mutant), epistate (column epistate), birth time (column birth_time). get_sampled_cell_CNAs Gets CNAs sampled cells Returns: dataframe reporting cell_id, type (\"\" amplifications \"D\" deletions), chr, begin (.e., first CNA locus chromosome), end (.e., last CNA locus chromosome), allele, src allele (allele origin amplifications, NA deletions), class (.e., \"driver\", \"passenger\", \"germinal\" \"preneoplastic\"). get_sampled_cell_mutations Gets SNVs indels sampled cells Returns: dataframe reporting cell_id, chr, (.e., mutation chromosome), begin (.e., position chromosome), allele (SNV occurs), ref, alt, type (.e., either \"SNV\" \"indel\"), cause, class (.e., \"driver\", \"passenger\", \"germinal\" \"preneoplastic\") mutation sampled cell genomes. get_samples_info Retrieve information samples Returns: dataframe containing, sample collected simulation, columns \"name\", \"time\", \"ymin\", \"xmin\", \"ymax\", \"xmax\", \"tumour_cells\", \"tumour_cells_in_bbox\". columns \"ymin\", \"xmin\", \"ymax\", \"xmax\" report boundaries sample bounding box, \"tumour_cells\" \"tumour_cells_in_bbox\" number tumour cells sample bounding box, respectively. get_driver_mutations Getting driver mutations Returns: dataframe reporting mutant, order, type, CNA_type, chr, start, end, ref, alt, allele, src_allele driver mutations. get_species_info Gets species data Returns: dataframe reporting mutant, epistate, SNV_rate, indel_rate, CNA_rate registered species. get_sticks Compute forest sticks Returns: list forest sticks. stick represented list cell identifiers labelling nodes stick higher deeper forest. get_subforest_for Build sub-forest using leaves original samples Parameter: sample_names - names samples whose cells used leaves new forest. Returns: samples forest built samples mentioned sample_names. get_absolute_chromosome_positions Get absolute chromosome positions Returns: dataframe reporting name (column \"chr\"), length (column \"length\"), initial absolute position (column \"\"), final absolute position (column \"\") chromosome. save Save phylogenetic forest file Parameter: filename - path file phylogenetic forest must saved.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SNV.html","id":null,"dir":"Reference","previous_headings":"","what":"Creating a SNV — SNV","title":"Creating a SNV — SNV","text":"function creates SNVs.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SNV.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creating a SNV — SNV","text":"chr name chromosome SNV occurs. chr_pos position chromosome SNV occurs. alt base mutation. ref base mutation (optional). allele allele SNV must occur (optional). cause cause SNV (optional).","code":""},{"path":[]},{"path":"https://caravagnalab.github.io/ProCESS/reference/SNV.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creating a SNV — SNV","text":"","code":"# create a SNV without specifying the cause and context snv <- SNV(\"X\", 20002, \"T\") snv #> SNV(chr: X, chr_pos: 20002, allele: random, ref: ?, alt: T)  # create a SNV and do not specify the cause snv <- SNV(\"X\", 20002, \"T\", \"A\") snv #> SNV(chr: X, chr_pos: 20002, allele: random, ref: A, alt: T)  # create a SNV that must be place in allele 1 snv <- SNV(\"X\", 20002, \"T\", allele = 1) snv #> SNV(chr: X, chr_pos: 20002, allele: 1, ref: ?, alt: T)  # create a SNV with a cause snv <- SNV(\"X\", 20002, \"T\", cause = \"SBS1\") snv #> SNV(chr: X, chr_pos: 20002, allele: random, ref: ?, alt: T, cause: \"SBS1\")"},{"path":"https://caravagnalab.github.io/ProCESS/reference/SampledCell-cash-birth_time.html","id":null,"dir":"Reference","previous_headings":"","what":"Getting the sampled cell birth time — SampledCell$birth_time","title":"Getting the sampled cell birth time — SampledCell$birth_time","text":"birth time sampled cell.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SampledCell-cash-birth_time.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Getting the sampled cell birth time — SampledCell$birth_time","text":"property birth time sampled cell.","code":""},{"path":[]},{"path":"https://caravagnalab.github.io/ProCESS/reference/SampledCell-cash-epistate.html","id":null,"dir":"Reference","previous_headings":"","what":"Getting the sampled cell epigenetic state — SampledCell$epistate","title":"Getting the sampled cell epigenetic state — SampledCell$epistate","text":"epigenetic state sampled cell.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SampledCell-cash-epistate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Getting the sampled cell epigenetic state — SampledCell$epistate","text":"property epigenetic state sampled cell. can one among \"+\", \"-\", \"\".","code":""},{"path":[]},{"path":"https://caravagnalab.github.io/ProCESS/reference/SampledCell-cash-mutant.html","id":null,"dir":"Reference","previous_headings":"","what":"Getting the sampled cell mutant — SampledCell$mutant","title":"Getting the sampled cell mutant — SampledCell$mutant","text":"mutant name sampled cell.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SampledCell-cash-mutant.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Getting the sampled cell mutant — SampledCell$mutant","text":"property mutant name sampled cell.","code":""},{"path":[]},{"path":"https://caravagnalab.github.io/ProCESS/reference/SampledCell-cash-mutations.html","id":null,"dir":"Reference","previous_headings":"","what":"Getting the sampled cell mutations — SampledCell$mutations","title":"Getting the sampled cell mutations — SampledCell$mutations","text":"mutations sampled cell.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SampledCell-cash-mutations.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Getting the sampled cell mutations — SampledCell$mutations","text":"property contains data frame represents sampled cell mutations. data frame format analogous returned PhylogeneticForest$get_sampled_cell_mutations(): columns cell_id, chr, (.e., mutation chromosome), chr_pos (.e., position chromosome), allele (mutation occurs), ref, alt, type (.e., either \"SNV\" \"indel\"), cause, class (.e., \"driver\", \"passenger\", \"germinal\" \"preneoplastic\").","code":""},{"path":[]},{"path":"https://caravagnalab.github.io/ProCESS/reference/SampledCell-cash-species.html","id":null,"dir":"Reference","previous_headings":"","what":"Getting the sampled cell species — SampledCell$species","title":"Getting the sampled cell species — SampledCell$species","text":"species name sampled cell.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SampledCell-cash-species.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Getting the sampled cell species — SampledCell$species","text":"property species name sampled cell.","code":""},{"path":[]},{"path":"https://caravagnalab.github.io/ProCESS/reference/SampledCell.html","id":null,"dir":"Reference","previous_headings":"","what":"A sampled cell — SampledCell","title":"A sampled cell — SampledCell","text":"sampled cell class sample labelling.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SampledCell.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A sampled cell — SampledCell","text":"public constructor class exclusively used simulate_seq() label sampled cells.","code":""},{"path":[]},{"path":"https://caravagnalab.github.io/ProCESS/reference/SamplesForest-cash-get_coalescent_cells.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieving the most recent common ancestors — SamplesForest$get_coalescent_cells","title":"Retrieving the most recent common ancestors — SamplesForest$get_coalescent_cells","text":"method retrieves recent common ancestors set cells.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SamplesForest-cash-get_coalescent_cells.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieving the most recent common ancestors — SamplesForest$get_coalescent_cells","text":"cell_ids list identifiers cells whose recent common ancestors aimed (optional).","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SamplesForest-cash-get_coalescent_cells.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieving the most recent common ancestors — SamplesForest$get_coalescent_cells","text":"dataframe representing, identified cells, identified (column \"cell_id\"), whenever node root, ancestor identifier (column \"ancestor\"), whenever node sampled, .e., one forest leaves, name sample containing node, (column \"sample\"), mutant (column \"mutant\"), epistate (column \"epistate\"), birth time (column \"birth_time\").","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SamplesForest-cash-get_coalescent_cells.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Retrieving the most recent common ancestors — SamplesForest$get_coalescent_cells","text":"optional parameter cell_ids used, method find recent common ancestors cells identifier among cell_ids. , otherwise, optional parameter used, method find recent common ancestors forest leaves.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SamplesForest-cash-get_coalescent_cells.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieving the most recent common ancestors — SamplesForest$get_coalescent_cells","text":"","code":"# set the seed of the random number generator set.seed(0)  # create a simulation sim <- SpatialSimulation() sim$add_mutant(name = \"A\",                growth_rate = 0.2,                death_rate = 0.01) sim$place_cell(\"A\", 500, 500)  sim$death_activation_level <- 100 sim$run_up_to_size(species = \"A\", num_of_cells = 50000) #>   [████████████████████████████████████████] 100% [00m:00s] Saving snapshot        # sample the region [450,500]x[475,550] sim$sample_cells(\"S1\", lower_corner=c(450,475), upper_corner=c(500,550))  # build the samples forest forest <- sim$get_samples_forest()  forest$get_coalescent_cells() #>   cell_id ancestor mutant epistate sample birth_time #> 1       0       NA      A            <NA>          0"},{"path":"https://caravagnalab.github.io/ProCESS/reference/SamplesForest-cash-get_nodes.html","id":null,"dir":"Reference","previous_headings":"","what":"Getting forest nodes — SamplesForest$get_nodes","title":"Getting forest nodes — SamplesForest$get_nodes","text":"method builds dataframe containing forest nodes.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SamplesForest-cash-get_nodes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Getting forest nodes — SamplesForest$get_nodes","text":"dataframe representing, node forest, identified (column \"cell_id\"), whenever node root, ancestor identifier (column \"ancestor\"), whenever node sampled, .e., one forest leaves, name sample containing node, (column \"sample\"), mutant (column \"mutant\"), epistate (column \"epistate\"), birth time (column \"birth_time\").","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SamplesForest-cash-get_nodes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Getting forest nodes — SamplesForest$get_nodes","text":"","code":"# set the seed of the random number generator set.seed(0)  # create a simulation sim <- SpatialSimulation() sim$add_mutant(name = \"A\",                growth_rate = 0.2,                death_rate = 0.01) sim$place_cell(\"A\", 500, 500)  sim$death_activation_level <- 100 sim$run_up_to_size(species = \"A\", num_of_cells = 50000) #>   [████████████████████████████████████████] 100% [00m:00s] Saving snapshot        # sample the region [450,500]x[475,550] sim$sample_cells(\"S1\", lower_corner=c(450,475), upper_corner=c(500,550))  # build the samples forest forest <- sim$get_samples_forest()  nodes <- forest$get_nodes()  head(nodes, 5) #>   cell_id ancestor mutant epistate sample birth_time #> 1       0       NA      A            <NA>   0,000000 #> 2       1        0      A            <NA>   2,870718 #> 3       2        0      A            <NA>   2,870718 #> 4       3        1      A            <NA>   4,272592 #> 5       4        1      A            <NA>   4,272592"},{"path":"https://caravagnalab.github.io/ProCESS/reference/SamplesForest-cash-get_samples_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieving samples' information — SamplesForest$get_samples_info","title":"Retrieving samples' information — SamplesForest$get_samples_info","text":"method retrieves information samples whose cells used leaves samples forest.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SamplesForest-cash-get_samples_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieving samples' information — SamplesForest$get_samples_info","text":"dataframe containing, sample collected simulation, columns \"name\", \"time\", \"id\", \"ymin\", \"xmin\", \"ymax\", \"xmax\", \"tumour_cells\", \"tumour_cells_in_bbox\". columns \"ymin\", \"xmin\", \"ymax\", \"xmax\" report boundaries sample bounding box, \"tumour_cells\" \"tumour_cells_in_bbox\" number tumour cells sample bounding box, respectively.","code":""},{"path":[]},{"path":"https://caravagnalab.github.io/ProCESS/reference/SamplesForest-cash-get_samples_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieving samples' information — SamplesForest$get_samples_info","text":"","code":"# set the seed of the random number generator set.seed(0)  # create a simulation sim <- SpatialSimulation() sim$add_mutant(name = \"A\", growth_rate = 0.2,                death_rate = 0.01) sim$place_cell(\"A\", 500, 500)  sim$death_activation_level <- 100 sim$run_up_to_size(species = \"A\", num_of_cells = 50000) #>   [████████████████████████████████████████] 100% [00m:00s] Saving snapshot        # sample the region [450,500]x[475,550] sim$sample_cells(\"S1\", lower_corner=c(450,475), upper_corner=c(500,550))  # build the samples forest forest <- sim$get_samples_forest()  # get information about the sampled whose cells # are the forest leaves, i.e, S1 and S2 forest$get_samples_info() #>   name id xmin ymin xmax ymax tumour_cells tumour_cells_in_bbox     time #> 1   S1  5  450  475  500  550         3863                 3863 215,0761"},{"path":"https://caravagnalab.github.io/ProCESS/reference/SamplesForest-cash-get_species_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Getting forest species — SamplesForest$get_species_info","title":"Getting forest species — SamplesForest$get_species_info","text":"method builds dataframe containing information simulated species.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SamplesForest-cash-get_species_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Getting forest species — SamplesForest$get_species_info","text":"dataframe reporting mutant epistate registered species.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SamplesForest-cash-get_sticks.html","id":null,"dir":"Reference","previous_headings":"","what":"Computing the forest sticks — SamplesForest$get_sticks","title":"Computing the forest sticks — SamplesForest$get_sticks","text":"method computes forest sticks.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SamplesForest-cash-get_sticks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computing the forest sticks — SamplesForest$get_sticks","text":"birth_threshold maximum birth time cells associated returned sticks (optional).","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SamplesForest-cash-get_sticks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computing the forest sticks — SamplesForest$get_sticks","text":"list forest sticks whose associated cells birth time smaller equal birth_threshold. stick represented list cell identifiers labelling nodes stick higher deeper forest.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SamplesForest-cash-get_sticks.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Computing the forest sticks — SamplesForest$get_sticks","text":"crucial node forest root forest, node whose parent belongs different species, recent common ancestor two crucial nodes. stick path forest crucial nodes first last one. method return list forest sticks. stick represented sequence cell identifiers labelling nodes stick.","code":""},{"path":[]},{"path":"https://caravagnalab.github.io/ProCESS/reference/SamplesForest-cash-get_sticks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Computing the forest sticks — SamplesForest$get_sticks","text":"","code":"# set the seed of the random number generator set.seed(0)  # create a simulation sim <- SpatialSimulation() sim$add_mutant(name = \"A\", growth_rate = 0.2,                death_rate = 0.01) sim$place_cell(\"A\", 500, 500)  sim$death_activation_level <- 100 sim$run_up_to_size(species = \"A\", num_of_cells = 100) #>   [████████████████████████████████████████] 100% [00m:00s] Saving snapshot        sim$get_clock() #> [1] 26,09398  sim$add_mutant(name = \"B\", growth_rate = 0.3, death_rate = 0.01) sim$mutate_progeny(sim$choose_cell_in(\"A\"), \"B\") sim$run_up_to_size(species = \"B\", num_of_cells = 120) #>   [████████████████████████████████████████] 100% [00m:00s] Saving snapshot        sim$get_clock() #> [1] 50,39379  sim$add_mutant(name = \"C\", growth_rate = 0.3, death_rate = 0.01) sim$mutate_progeny(sim$choose_cell_in(\"B\"), \"C\") sim$run_up_to_size(species = \"C\", num_of_cells = 200) #>   [███████████████████████-----------------] 57% [00m:00s] Cells: 67360             [██████████████████████████████----------] 74% [00m:01s] Cells: 106490            [███████████████████████████████████-----] 86% [00m:02s] Cells: 138120            [███████████████████████████████████████-] 95% [00m:03s] Cells: 164976            [████████████████████████████████████████] 100% [00m:03s] Saving snapshot        # search for a 33x33 region containing 50 cells in A and # 50 cells in B at least and sample it region <- sim$search_sample(c(A = 50, B = 50), 33, 33) sim$sample_cells(\"S1\", region$lower_corner, region$upper_corner)  # search for a 33x33 region containing 50 cells in B and # 50 cells in C at least and sample it region <- sim$search_sample(c(B = 50, C = 50), 33, 33) sim$sample_cells(\"S2\", region$lower_corner, region$upper_corner)  # build the samples forest forest <- sim$get_samples_forest()  # search for the forest sticks forest$get_sticks() #> [[1]] #>  [1]  199  256  369  461  489  656  670  768 1019 1057 1104 1110 1176 1264 1274 #> [16] 1279 1493 1586 1805 #>  #> [[2]] #> [1]   0   2   5  10  60  71 195 199 #>   # search for the forest sticks whose corresponding cells have # birth times 40 time units at most forest$get_sticks(40) #> [[1]] #> [1]   0   2   5  10  60  71 195 199 #>"},{"path":"https://caravagnalab.github.io/ProCESS/reference/SamplesForest-cash-get_subforest_for.html","id":null,"dir":"Reference","previous_headings":"","what":"Building sub-forests — SamplesForest$get_subforest_for","title":"Building sub-forests — SamplesForest$get_subforest_for","text":"method builds sub-forest using leaves original samples.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SamplesForest-cash-get_subforest_for.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Building sub-forests — SamplesForest$get_subforest_for","text":"sample_names names samples whose cells used leaves new forest","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SamplesForest-cash-get_subforest_for.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Building sub-forests — SamplesForest$get_subforest_for","text":"samples forest built samples mentioned sample_names","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SamplesForest-cash-get_subforest_for.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Building sub-forests — SamplesForest$get_subforest_for","text":"","code":"# set the seed of the random number generator set.seed(0)  # create a simulation sim <- SpatialSimulation() sim$add_mutant(name = \"A\",                growth_rate = 0.2,                death_rate = 0.01) sim$place_cell(\"A\", 500, 500)  sim$death_activation_level <- 100 sim$run_up_to_size(species = \"A\", num_of_cells = 50000) #>   [████████████████████████████████████████] 100% [00m:00s] Saving snapshot        # sample the region [450,500]x[475,550] sim$sample_cells(\"S1\", lower_corner=c(450,475), upper_corner=c(500,550))  sim$run_up_to_size(species = \"A\", num_of_cells = 60000) #>   [████████████████████████████████████████] 100% [00m:00s] Saving snapshot        # sample again the same region sim$sample_cells(\"S2\", lower_corner=c(450,475), upper_corner=c(500,550))  # build the samples forest forest <- sim$get_samples_forest()  forest$get_subforest_for(\"S2\") #> SamplesForest #>   # of trees: 1 #>   # of nodes: 9477 #>   # of leaves: 2378 #>   samples: {\"S2\"} #>"},{"path":"https://caravagnalab.github.io/ProCESS/reference/SamplesForest-cash-save.html","id":null,"dir":"Reference","previous_headings":"","what":"Saving samples forests — SamplesForest$save","title":"Saving samples forests — SamplesForest$save","text":"method saves samples forest file.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SamplesForest-cash-save.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Saving samples forests — SamplesForest$save","text":"filename path file samples forest must saved.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SamplesForest.html","id":null,"dir":"Reference","previous_headings":"","what":"The sample cell ancestor forest — SamplesForest","title":"The sample cell ancestor forest — SamplesForest","text":"class represents forest ancestors cells sampled computation. leaves forest sampled cells.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SamplesForest.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"The sample cell ancestor forest — SamplesForest","text":"get_coalescent_cells Retrieve recent common ancestors Parameter: cell_ids - list identifiers cells whose recent common ancestors aimed (optional). Return: dataframe representing, identified cells, identified (column \"cell_id\"), whenever node root, ancestor identifier (column \"ancestor\"), whenever node sampled, .e., one forest leaves, name sample containing node, (column \"sample\"), mutant (column \"mutant\"), epistate (column \"epistate\"), birth time (column \"birth_time\"). get_nodes Get forest nodes Return: dataframe representing, node forest, identified (column \"cell_id\"), whenever node root, ancestor identifier (column \"ancestor\"), whenever node sampled, .e., one forest leaves, name sample containing node, (column \"sample\"), mutant (column \"mutant\"), epistate (column \"epistate\"), birth time (column \"birth_time\"). get_samples_info Retrieve information samples Returns: dataframe containing, sample collected simulation, columns \"name\", \"time\", \"ymin\", \"xmin\", \"ymax\", \"xmax\", \"tumour_cells\", \"tumour_cells_in_bbox\". columns \"ymin\", \"xmin\", \"ymax\", \"xmax\" report boundaries sample bounding box, \"tumour_cells\" \"tumour_cells_in_bbox\" number tumour cells sample bounding box, respectively. get_species_info Gets species data Returns: dataframe reporting \"mutant\" \"epistate\" registered species. get_sticks Compute forest sticks Returns: list forest sticks. stick represented list cell identifiers labelling nodes stick higher deeper forest. get_subforest_for Build sub-forest using leaves original samples Parameter: sample_names - names samples whose cells used leaves new forest. Returns: samples forest built samples mentioned sample_names. save Save samples forest file Parameter: filename - path file samples forest must saved.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-add_mutant.html","id":null,"dir":"Reference","previous_headings":"","what":"Adding a mutant and its species — SpatialSimulation$add_mutant","title":"Adding a mutant and its species — SpatialSimulation$add_mutant","text":"method adds mutant species simulation.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-add_mutant.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adding a mutant and its species — SpatialSimulation$add_mutant","text":"mutant mutant name. epigenetic_rates epigenetic rates mutant species (optional). growth_rates duplication rates mutant species. death_rates death rates mutant species.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-add_mutant.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Adding a mutant and its species — SpatialSimulation$add_mutant","text":"optional parameter epigenetic_rate provided, two new species mutant opposite epigenetic states created. , instead, optional parameter epigenetic_rate missing, method creates one species epigenetic states.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-add_mutant.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adding a mutant and its species — SpatialSimulation$add_mutant","text":"","code":"# set the seed of the random number generator set.seed(0)  # create a simulation sim <- SpatialSimulation()  # create the two species \"A+\" and \"A-\". They both have mutant \"A\". sim$add_mutant(name = \"A\",                epigenetic_rates = c(\"+-\" = 0.01, \"-+\" = 0.01),                growth_rates = c(\"+\" = 0.2, \"-\" = 0.08),                death_rates = c(\"+\" = 0.1, \"-\" = 0.01))  # create the species \"C\" its mutant is \"C\". sim$add_mutant(name = \"C\", growth_rate = 0.2, death_rate = 0.1)"},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-border_growth_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal cells duplication — SpatialSimulation$border_growth_model","title":"Internal cells duplication — SpatialSimulation$border_growth_model","text":"property switches homogeneous border driven growth models.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-border_growth_model.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Internal cells duplication — SpatialSimulation$border_growth_model","text":"Boolean flag switches homogeneous border driven growth models. set TRUE, border-growth model used. Otherwise, homogeneous-growth model applied. set TRUE default.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-border_growth_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Internal cells duplication — SpatialSimulation$border_growth_model","text":"","code":"# set the seed of the random number generator set.seed(0)  # create a simulation sim <- SpatialSimulation()  # is the simulation using the border driven growth model # (default: TRUE) sim$border_growth_model #> [1] TRUE  # switch to the homogeneous-growth model sim$border_growth_model <- FALSE  # now it is set to `FALSE` sim$border_growth_model #> [1] FALSE  # switch back to the border-growth model sim$border_growth_model <- FALSE"},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-choose_cell_in.html","id":null,"dir":"Reference","previous_headings":"","what":"Picking one cell in a mutant — SpatialSimulation$choose_cell_in","title":"Picking one cell in a mutant — SpatialSimulation$choose_cell_in","text":"method chooses one cell among mutant.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-choose_cell_in.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Picking one cell in a mutant — SpatialSimulation$choose_cell_in","text":"mutant mutant cell choose. lower_corner lower corner rectangular selection (optional). upper_corner upper corner rectangular selection (optional).","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-choose_cell_in.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Picking one cell in a mutant — SpatialSimulation$choose_cell_in","text":"list reporting cell_id, mutant, epistate, position_x, position_y choosen cell.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-choose_cell_in.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Picking one cell in a mutant — SpatialSimulation$choose_cell_in","text":"randomly chooses one cells mutant. Optionally, lower upper corners tissue rectangular selection can provided obtain one cell rectangle.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-choose_cell_in.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Picking one cell in a mutant — SpatialSimulation$choose_cell_in","text":"","code":"# set the seed of the random number generator set.seed(0)  # create a simulation sim <- SpatialSimulation() sim$add_mutant(name = \"A\",                epigenetic_rates = c(\"+-\" = 0.01, \"-+\" = 0.01),                growth_rates = c(\"+\" = 0.2, \"-\" = 0.08),                death_rates = c(\"+\" = 0.1, \"-\" = 0.01)) sim$add_mutant(name = \"B\",                epigenetic_rates = c(\"+-\" = 0.1, \"-+\" = 0.01),                growth_rates = c(\"+\" = 0.15, \"-\" = 0.4),                death_rates = c(\"+\" = 0.1, \"-\" = 0.01)) sim$place_cell(\"A+\", 500, 500) sim$death_activation_level <- 100 sim$schedule_mutation(\"A\",\"B\",20) sim$run_up_to_size(species = \"B-\", num_of_cells = 50) #>   [████████████████████████████████████████] 100% [00m:00s] Saving snapshot        # Randomly choose one cell in \"B\" in the tissue sim$choose_cell_in(mutant = \"B\") #>   cell_id mutant epistate position_x position_y #> 1     787      B        -        490        499"},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-death_activation_level.html","id":null,"dir":"Reference","previous_headings":"","what":"Death activation level — SpatialSimulation$death_activation_level","title":"Death activation level — SpatialSimulation$death_activation_level","text":"number cells activates cell death species.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-death_activation_level.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Death activation level — SpatialSimulation$death_activation_level","text":"value minimum number cells enables cell death species. cell species $S$ can die $S$ reached death activation level least simulation.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-death_activation_level.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Death activation level — SpatialSimulation$death_activation_level","text":"","code":"# set the seed of the random number generator set.seed(0)  # create a simulation sim <- SpatialSimulation()  # get the simulation death activation level sim$death_activation_level #> [1] 1  # set the death activation level to 50 sim$death_activation_level <- 50"},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-get_added_cells.html","id":null,"dir":"Reference","previous_headings":"","what":"Getting the cells manually added to the simulation — SpatialSimulation$get_added_cells","title":"Getting the cells manually added to the simulation — SpatialSimulation$get_added_cells","text":"method returns cells manually added simulation.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-get_added_cells.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Getting the cells manually added to the simulation — SpatialSimulation$get_added_cells","text":"dataframe reporting mutant, epistate, position_x, position_y, time cells manually added simulation.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-get_added_cells.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Getting the cells manually added to the simulation — SpatialSimulation$get_added_cells","text":"","code":"# set the seed of the random number generator set.seed(0)  # create a simulation sim <- SpatialSimulation() sim$add_mutant(name = \"A\",                epigenetic_rates = c(\"+-\" = 0.01, \"-+\" = 0.01),                growth_rates = c(\"+\" = 0.2, \"-\" = 0.08),                death_rates = c(\"+\" = 0.1, \"-\" = 0.01)) sim$add_mutant(name = \"B\",                epigenetic_rates = c(\"+-\" = 0.02, \"-+\" = 0.01),                growth_rates = c(\"+\" = 0.3, \"-\" = 0.1),                death_rates = c(\"+\" = 0.1, \"-\" = 0.01)) sim$schedule_mutation(src = \"A\", dst = \"B\", time = 30) sim$place_cell(\"A+\", 500, 500) sim$run_up_to_time(50) #>   [████████████████████████████████████████] 100% [00m:00s] Saving snapshot        # counts the number of cells per species sim$get_added_cells() #>   mutant epistate position_x position_y time #> 1      A        +        500        500    0"},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-get_cell.html","id":null,"dir":"Reference","previous_headings":"","what":"Getting one of the tissue cells — SpatialSimulation$get_cell","title":"Getting one of the tissue cells — SpatialSimulation$get_cell","text":"method collects data aimed cell without altering tissue.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-get_cell.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Getting one of the tissue cells — SpatialSimulation$get_cell","text":"x position aimed cell x axis. y position aimed cell y axis.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-get_cell.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Getting one of the tissue cells — SpatialSimulation$get_cell","text":"dataframe reporting cell_id, mutant, epistate, position_x, position_y aimed cell.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-get_cell.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Getting one of the tissue cells — SpatialSimulation$get_cell","text":"","code":"# set the seed of the random number generator set.seed(0)  # create a simulation sim <- SpatialSimulation() sim$add_mutant(name = \"A\",                epigenetic_rates = c(\"+-\" = 0.01, \"-+\" = 0.01),                growth_rates = c(\"+\" = 0.2, \"-\" = 0.08),                death_rates = c(\"+\" = 0.02, \"-\" = 0.01)) sim$add_mutant(name = \"B\",                epigenetic_rates = c(\"+-\" = 0.02, \"-+\" = 0.01),                growth_rates = c(\"+\" = 0.3, \"-\" = 0.1),                death_rates = c(\"+\" = 0.02, \"-\" = 0.01)) sim$schedule_mutation(src = \"A\", dst = \"B\", time = 50) sim$place_cell(\"A+\", 500, 500) sim$run_up_to_time(40) #>   [████████████████████████████████████████] 100% [00m:00s] Saving snapshot        # collect all the cells in the tissue sim$get_cell(501, 502) #>   cell_id mutant epistate position_x position_y #> 1     459      A        +        501        502"},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-get_cells.html","id":null,"dir":"Reference","previous_headings":"","what":"Getting the tissue cells — SpatialSimulation$get_cells","title":"Getting the tissue cells — SpatialSimulation$get_cells","text":"method returns information tumour tissue cells","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-get_cells.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Getting the tissue cells — SpatialSimulation$get_cells","text":"lower_corner lower-left corner selection frame (optional). upper_corner upper-right corner selection frame (optional). mutant_filter vector --selected mutant names (optional). epigenetic_filter vector --selected epigenetic states (optional).","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-get_cells.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Getting the tissue cells — SpatialSimulation$get_cells","text":"dataframe reporting \"cell_id\", \"mutant\", \"epistate\", \"position_x\", \"position_y\" cells satisfying provided filters laying input frame.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-get_cells.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Getting the tissue cells — SpatialSimulation$get_cells","text":"collects data cells tissue without altering tissue . pairs optional parameters lower_corner upper_corner define frame tissue data sampled. optional parameters mutant_filter epigenetic_filter filter collected cell data according cell mutant epigenetic state.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-get_cells.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Getting the tissue cells — SpatialSimulation$get_cells","text":"","code":"# set the seed of the random number generator set.seed(0)  # create a simulation sim <- SpatialSimulation() sim$add_mutant(name = \"A\",                epigenetic_rates = c(\"+-\" = 0.01, \"-+\" = 0.01),                growth_rates = c(\"+\" = 0.2, \"-\" = 0.08),                death_rates = c(\"+\" = 0.1, \"-\" = 0.01)) sim$add_mutant(name = \"B\",                epigenetic_rates = c(\"+-\" = 0.02, \"-+\" = 0.01),                growth_rates = c(\"+\" = 0.3, \"-\" = 0.1),                death_rates = c(\"+\" = 0.1, \"-\" = 0.01)) sim$schedule_mutation(src = \"A\", dst = \"B\", time = 50) sim$place_cell(\"A+\", 500, 500) sim$run_up_to_time(30) #>   [████████████████████████████████████████] 100% [00m:00s] Saving snapshot        # collect all the cells in the tissue sim$get_cells() #>    cell_id mutant epistate position_x position_y #> 1       44      A        -        499        502 #> 2       19      A        -        500        500 #> 3       43      A        -        500        501 #> 4       27      A        -        500        503 #> 5       48      A        +        501        498 #> 6       39      A        +        501        499 #> 7       35      A        -        501        501 #> 8       33      A        -        501        502 #> 9       42      A        -        501        503 #> 10      47      A        +        502        498 #> 11      30      A        -        502        499 #> 12      36      A        -        502        500 #> 13      37      A        -        502        502 #> 14      41      A        -        502        503 #> 15      29      A        -        503        499 #> 16      45      A        -        503        502 #> 17      38      A        -        503        503 #> 18      46      A        -        504        502  # get the cells in the frame [495,505]x[490,500] sim$get_cells(lower_corner=c(495,490), upper_corner=c(505,500)) #>   cell_id mutant epistate position_x position_y #> 1      19      A        -        500        500 #> 2      48      A        +        501        498 #> 3      39      A        +        501        499 #> 4      47      A        +        502        498 #> 5      30      A        -        502        499 #> 6      36      A        -        502        500 #> 7      29      A        -        503        499  # cells can be filtered by mutant name... sim$get_cells(mutant_filter=c(\"A\"),epigenetic_filter=c(\"+\",\"-\")) #>    cell_id mutant epistate position_x position_y #> 1       44      A        -        499        502 #> 2       19      A        -        500        500 #> 3       43      A        -        500        501 #> 4       27      A        -        500        503 #> 5       48      A        +        501        498 #> 6       39      A        +        501        499 #> 7       35      A        -        501        501 #> 8       33      A        -        501        502 #> 9       42      A        -        501        503 #> 10      47      A        +        502        498 #> 11      30      A        -        502        499 #> 12      36      A        -        502        500 #> 13      37      A        -        502        502 #> 14      41      A        -        502        503 #> 15      29      A        -        503        499 #> 16      45      A        -        503        502 #> 17      38      A        -        503        503 #> 18      46      A        -        504        502  # ...or by epigenetic state sim$get_cells(mutant_filter=c(\"A\",\"B\"),epigenetic_filter=c(\"-\")) #>    cell_id mutant epistate position_x position_y #> 1       44      A        -        499        502 #> 2       19      A        -        500        500 #> 3       43      A        -        500        501 #> 4       27      A        -        500        503 #> 5       35      A        -        501        501 #> 6       33      A        -        501        502 #> 7       42      A        -        501        503 #> 8       30      A        -        502        499 #> 9       36      A        -        502        500 #> 10      37      A        -        502        502 #> 11      41      A        -        502        503 #> 12      29      A        -        503        499 #> 13      45      A        -        503        502 #> 14      38      A        -        503        503 #> 15      46      A        -        504        502  # cells can be filtered by frame, mutant, and epigenetic states sim$get_cells(lower_corner=c(495,495), upper_corner=c(505,505),               mutant_filter=c(\"A\"),epigenetic_filter=c(\"+\",\"-\")) #>    cell_id mutant epistate position_x position_y #> 1       44      A        -        499        502 #> 2       19      A        -        500        500 #> 3       43      A        -        500        501 #> 4       27      A        -        500        503 #> 5       48      A        +        501        498 #> 6       39      A        +        501        499 #> 7       35      A        -        501        501 #> 8       33      A        -        501        502 #> 9       42      A        -        501        503 #> 10      47      A        +        502        498 #> 11      30      A        -        502        499 #> 12      36      A        -        502        500 #> 13      37      A        -        502        502 #> 14      41      A        -        502        503 #> 15      29      A        -        503        499 #> 16      45      A        -        503        502 #> 17      38      A        -        503        503 #> 18      46      A        -        504        502"},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-get_clock.html","id":null,"dir":"Reference","previous_headings":"","what":"Getting the simulated time — SpatialSimulation$get_clock","title":"Getting the simulated time — SpatialSimulation$get_clock","text":"method returns current simulation time.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-get_clock.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Getting the simulated time — SpatialSimulation$get_clock","text":"time simulated simulation.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-get_clock.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Getting the simulated time — SpatialSimulation$get_clock","text":"","code":"# set the seed of the random number generator set.seed(0)  # create a simulation sim <- SpatialSimulation() sim$add_mutant(name = \"A\",                epigenetic_rates = c(\"+-\" = 0.01, \"-+\" = 0.01),                growth_rates = c(\"+\" = 0.2, \"-\" = 0.08),                death_rates = c(\"+\" = 0.1, \"-\" = 0.01)) sim$place_cell(\"A+\", 500, 500) sim$run_up_to_event(\"switch\", \"A+\", 100) #>   [████████████████████████████████████████] 100% [00m:00s] Saving snapshot        # get the simulated time sim$get_clock() #> [1] 109,6863"},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-get_count_history.html","id":null,"dir":"Reference","previous_headings":"","what":"Getting the history of the number of cells per species — SpatialSimulation$get_count_history","title":"Getting the history of the number of cells per species — SpatialSimulation$get_count_history","text":"method returns dataframe reporting number species cells sampled simulation time.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-get_count_history.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Getting the history of the number of cells per species — SpatialSimulation$get_count_history","text":"dataframe reporting mutant, epistate, counts, time species, sampled time.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-get_count_history.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Getting the history of the number of cells per species — SpatialSimulation$get_count_history","text":"","code":"# set the seed of the random number generator set.seed(0)  # create a simulation sim <- SpatialSimulation() sim$add_mutant(\"A\", growth_rate = 0.2, death_rate = 0.1) sim$add_mutant(\"B\", growth_rate = 0.15, death_rate = 0.05) sim$schedule_mutation(src = \"A\", dst = \"B\", time = 50) sim$place_cell(\"A\", 500, 500) sim$history_delta <- 20 sim$run_up_to_time(70) #>   [████████████████████████████████████████] 100% [00m:00s] Saving snapshot        # get the history of species counts sim$get_count_history() #>   mutant epistate count     time #> 1      A              7 20,00000 #> 2      B              0 20,00000 #> 3      A             97 40,00000 #> 4      B              0 40,00000 #> 5      A            287 60,00000 #> 6      B              2 60,00000 #> 7      A            513 70,00668 #> 8      B              3 70,00668"},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-get_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"Counting the cell number — SpatialSimulation$get_counts","title":"Counting the cell number — SpatialSimulation$get_counts","text":"method returns current number cells per species since simulation began.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-get_counts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Counting the cell number — SpatialSimulation$get_counts","text":"dataframe reporting mutant, epistate, counts, overall species simulation.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-get_counts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Counting the cell number — SpatialSimulation$get_counts","text":"","code":"# set the seed of the random number generator set.seed(0)  # create a simulation sim <- SpatialSimulation() sim$add_mutant(\"A\", growth_rate = 0.2, death_rate = 0.1) sim$add_mutant(\"B\", growth_rate = 0.15, death_rate = 0.05) sim$schedule_mutation(src = \"A\", dst = \"B\", time = 50) sim$place_cell(\"A\", 500, 500) sim$run_up_to_time(70) #>   [████████████████████████████████████████] 100% [00m:00s] Saving snapshot        # counts the number of cells per species sim$get_counts() #>   mutant epistate counts overall #> 1      A             513    2719 #> 2      B               3       7"},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-get_firing_history.html","id":null,"dir":"Reference","previous_headings":"","what":"Getting the fired event history — SpatialSimulation$get_firing_history","title":"Getting the fired event history — SpatialSimulation$get_firing_history","text":"method returns dataframe reporting number events fired sampled simulation time.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-get_firing_history.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Getting the fired event history — SpatialSimulation$get_firing_history","text":"dataframe reporting event, mutant, epistate, fired, time event type, species, sampled time.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-get_firing_history.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Getting the fired event history — SpatialSimulation$get_firing_history","text":"","code":"# set the seed of the random number generator set.seed(0)  # create a simulation sim <- SpatialSimulation() sim$add_mutant(name = \"A\",                epigenetic_rates = c(\"+-\" = 0.01, \"-+\" = 0.01),                growth_rates = c(\"+\" = 0.2, \"-\" = 0.08),                death_rates = c(\"+\" = 0.1, \"-\" = 0.01)) sim$place_cell(\"A+\", 500, 500) sim$history_delta <- 20 sim$run_up_to_time(70) #>   [████████████████████████████████████████] 100% [00m:00s] Saving snapshot        # get the number of event fired per event and species sim$get_firing_history() #>     event mutant epistate fired     time #> 1   death      A        -     1 20,00000 #> 2  growth      A        -     7 20,00000 #> 3  switch      A        -     0 20,00000 #> 4   death      A        +     5 20,00000 #> 5  growth      A        +     8 20,00000 #> 6  switch      A        +     3 20,00000 #> 7   death      A        -     5 40,00000 #> 8  growth      A        -    37 40,00000 #> 9  switch      A        -     5 40,00000 #> 10  death      A        +     8 40,00000 #> 11 growth      A        +    15 40,00000 #> 12 switch      A        +     3 40,00000 #> 13  death      A        -    18 60,00000 #> 14 growth      A        -    91 60,00000 #> 15 switch      A        -    14 60,00000 #> 16  death      A        +    63 60,00000 #> 17 growth      A        +   105 60,00000 #> 18 switch      A        +     7 60,00000 #> 19  death      A        -    25 70,00287 #> 20 growth      A        -   151 70,00287 #> 21 switch      A        -    24 70,00287 #> 22  death      A        +   129 70,00287 #> 23 growth      A        +   239 70,00287 #> 24 switch      A        +    10 70,00287"},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-get_firings.html","id":null,"dir":"Reference","previous_headings":"","what":"Getting the number of fired events — SpatialSimulation$get_firings","title":"Getting the number of fired events — SpatialSimulation$get_firings","text":"method returns dataframe reporting current number simulated events per species.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-get_firings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Getting the number of fired events — SpatialSimulation$get_firings","text":"dataframe reporting event, mutant, epistate, fired event type, mutant, epigenetic states.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-get_firings.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Getting the number of fired events — SpatialSimulation$get_firings","text":"","code":"# set the seed of the random number generator set.seed(0)  # create a simulation sim <- SpatialSimulation() sim$add_mutant(name = \"A\",                epigenetic_rates = c(\"+-\" = 0.01, \"-+\" = 0.01),                growth_rates = c(\"+\" = 0.2, \"-\" = 0.08),                death_rates = c(\"+\" = 0.1, \"-\" = 0.01)) sim$place_cell(\"A+\", 500, 500) sim$run_up_to_event(\"switch\", \"A+\", 100) #>   [████████████████████████████████████████] 100% [00m:00s] Saving snapshot        # get the number of event fired per event and species sim$get_firings() #>    event mutant epistate fired #> 1  death      A        -   168 #> 2 growth      A        -   905 #> 3 switch      A        -   106 #> 4  death      A        +  1539 #> 5 growth      A        +  2202 #> 6 switch      A        +   100"},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-get_lineage_graph.html","id":null,"dir":"Reference","previous_headings":"","what":"Getting the simulation lineage graph — SpatialSimulation$get_lineage_graph","title":"Getting the simulation lineage graph — SpatialSimulation$get_lineage_graph","text":"method returns lineage graph simulation.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-get_lineage_graph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Getting the simulation lineage graph — SpatialSimulation$get_lineage_graph","text":"dataframe reporting ancestor, progeny, first_occurrence species--species transition.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-get_lineage_graph.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Getting the simulation lineage graph — SpatialSimulation$get_lineage_graph","text":"beginning computation species added cells present tissue. simulation proceeds new species arise consequence either mutant mutations epigenetic switches. lineage graph stores species evolutions reports first occurrence time species--species transition.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-get_lineage_graph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Getting the simulation lineage graph — SpatialSimulation$get_lineage_graph","text":"","code":"# set the seed of the random number generator set.seed(0)  # create a simulation sim <- SpatialSimulation() sim$add_mutant(name = \"A\",                epigenetic_rates = c(\"+-\" = 0.01, \"-+\" = 0.01),                growth_rates = c(\"+\" = 0.2, \"-\" = 0.08),                death_rates = c(\"+\" = 0.1, \"-\" = 0.01)) sim$add_mutant(name = \"B\",                epigenetic_rates = c(\"+-\" = 0.02, \"-+\" = 0.01),                growth_rates = c(\"+\" = 0.3, \"-\" = 0.1),                death_rates = c(\"+\" = 0.1, \"-\" = 0.01)) sim$schedule_mutation(src = \"A\", dst = \"B\", time = 20) sim$run_up_to_time(50) #>   [█---------------------------------------] 0% [00m:00s] Saving snapshot           [█---------------------------------------] 0% [00m:00s] Cells: 0                  [█---------------------------------------] 0% [00m:00s] Cells: 0                  [█---------------------------------------] 0% [00m:00s] Cells: 0                 sim$get_lineage_graph() #> [1] ancestor    progeny     first_cross #> <0 rows> (or 0-length row.names)"},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-get_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Getting the simulation name — SpatialSimulation$get_name","title":"Getting the simulation name — SpatialSimulation$get_name","text":"method returns simulation name","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-get_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Getting the simulation name — SpatialSimulation$get_name","text":"simulation name, corresponds name directory simulation saving progresses.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-get_name.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Getting the simulation name — SpatialSimulation$get_name","text":"","code":"# set the seed of the random number generator set.seed(0)  # create a simulation sim <- SpatialSimulation()  # Expecting \"test\" sim$get_name() #> [1] \"/var/folders/tb/jqmdpgxs2t5129bny6pb96680000gn/T/ProCESS_alberto_e6b899dd\""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-get_rates.html","id":null,"dir":"Reference","previous_headings":"","what":"Getting the species rates — SpatialSimulation$get_rates","title":"Getting the species rates — SpatialSimulation$get_rates","text":"method return rates species.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-get_rates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Getting the species rates — SpatialSimulation$get_rates","text":"species species whose rates aimed.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-get_rates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Getting the species rates — SpatialSimulation$get_rates","text":"list species rates.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-get_rates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Getting the species rates — SpatialSimulation$get_rates","text":"","code":"# set the seed of the random number generator set.seed(0)  # create a simulation sim <- SpatialSimulation() sim$add_mutant(name = \"A\",                epigenetic_rates = c(\"+-\" = 0.01, \"-+\" = 0.02),                growth_rates = c(\"+\" = 0.2, \"-\" = 0.08),                death_rates = c(\"+\" = 0.1, \"-\" = 0.01))  # Get the rates of \"A-\". In this case c(\"growth\"=0.08, \"death\"=0.01, # \"switch\"=0.02) is expected sim$get_rates(\"A-\") #> $growth #> [1] 0,08 #>  #> $death #> [1] 0,01 #>  #> $switch #> [1] 0,02 #>"},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-get_rates_update_history.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieving the rates update history — SpatialSimulation$get_rates_update_history","title":"Retrieving the rates update history — SpatialSimulation$get_rates_update_history","text":"method retrieves simulation rates update history.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-get_rates_update_history.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieving the rates update history — SpatialSimulation$get_rates_update_history","text":"dataframe containing event rates updates. dataframe contains columns \"time\", \"mutant\", \"epistate\", \"event\", \"rate\". row reports update rate event species.","code":""},{"path":[]},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-get_rates_update_history.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieving the rates update history — SpatialSimulation$get_rates_update_history","text":"","code":"# set the seed of the random number generator set.seed(0)  # create a simulation sim <- SpatialSimulation() sim$add_mutant(name = \"A\",                epigenetic_rates = c(\"+-\" = 0.01, \"-+\" = 0.01),                growth_rates = c(\"+\" = 0.2, \"-\" = 0.08),                death_rates = c(\"+\" = 0.1, \"-\" = 0.01))  sim$place_cell(\"A+\", 500, 500)  sim$death_activation_level <- 100 sim$run_up_to_size(species = \"A-\", num_of_cells = 5000) #>   [████████████████████████████████████████] 100% [00m:00s] Saving snapshot        # Set the death and epigenetic switch rates of \"A-\" to 0 sim$update_rates(\"A-\", c(switch=0, death=0))  sim$run_up_to_size(species = \"A+\", num_of_cells = 5000) #>   [████████████████████████████████████████] 100% [00m:00s] Saving snapshot        # Set the death rate of \"A+\" to 0.5 sim$update_rates(\"A+\", c(death=0.5))  sim$run_up_to_time(sim$get_clock()+1) #>   [████████████████████████████████████████] 100% [00m:00s] Saving snapshot        # get the rates update history sim$get_rates_update_history() #>       time mutant epistate  event rate #> 1   0,0000      A        -  death 0,01 #> 2   0,0000      A        - growth 0,08 #> 3   0,0000      A        +  death 0,10 #> 4   0,0000      A        + growth 0,20 #> 5 147,5146      A        -  death 0,00 #> 6 147,5146      A        - switch 0,00 #> 7 250,4049      A        +  death 0,50"},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-get_samples_forest.html","id":null,"dir":"Reference","previous_headings":"","what":"Getting the samples forest — SpatialSimulation$get_samples_forest","title":"Getting the samples forest — SpatialSimulation$get_samples_forest","text":"method returns samples forest.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-get_samples_forest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Getting the samples forest — SpatialSimulation$get_samples_forest","text":"samples forest leaves sampled cells","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-get_samples_forest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Getting the samples forest — SpatialSimulation$get_samples_forest","text":"","code":"# set the seed of the random number generator set.seed(0)  # create a simulation sim <- SpatialSimulation() sim$add_mutant(name = \"A\",                growth_rate = 0.2,                death_rate = 0.01) sim$place_cell(\"A\", 500, 500)  sim$death_activation_level <- 100 sim$run_up_to_size(species = \"A\", num_of_cells = 50000) #>   [█████████████████████████████████████---] 91% [00m:00s] Cells: 45503             [████████████████████████████████████████] 100% [00m:00s] Saving snapshot        # sample the region [450,500]x[475,550] sim$sample_cells(\"S1\", lower_corner=c(450,475), upper_corner=c(500,550))  # build the samples forest forest <- sim$get_samples_forest()  forest #> SamplesForest #>   # of trees: 1 #>   # of nodes: 12077 #>   # of leaves: 3863 #>   samples: {\"S1\"} #>"},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-get_samples_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieving sample information — SpatialSimulation$get_samples_info","title":"Retrieving sample information — SpatialSimulation$get_samples_info","text":"method retrieves information samples collected along simulation.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-get_samples_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieving sample information — SpatialSimulation$get_samples_info","text":"dataframe containing, sample collected simulation, columns \"name\", \"time\", \"id\", \"ymin\", \"xmin\", \"ymax\", \"xmax\", \"tumour_cells\", \"tumour_cells_in_bbox\". columns \"ymin\", \"xmin\", \"ymax\", \"xmax\" report boundaries sample bounding box, \"tumour_cells\" \"tumour_cells_in_bbox\" number tumour cells sample bounding box, respectively.","code":""},{"path":[]},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-get_samples_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieving sample information — SpatialSimulation$get_samples_info","text":"","code":"# set the seed of the random number generator set.seed(0)  # create a simulation sim <- SpatialSimulation() sim$add_mutant(name = \"A\",                growth_rate = 0.2,                death_rate = 0.01) sim$place_cell(\"A\", 500, 500)  sim$death_activation_level <- 100 sim$run_up_to_size(species = \"A\", num_of_cells = 50000) #>   [████████████████████████████████████████] 100% [00m:00s] Saving snapshot        # sample the region [450,500]x[475,550] sim$sample_cells(\"S1\", lower_corner=c(450,475), upper_corner=c(500,550))  # simulate 1 time unit more sim$run_up_to_time(sim$get_clock()+1) #>   [████████████████████████████████████████] 100% [00m:00s] Saving snapshot        # sample the region [500,520]x[525,550] sim$sample_cells(\"S2\", lower_corner=c(500,525), upper_corner=c(520,550))  # get information about all the collected # samples, i.e, S1 and S2 sim$get_samples_info() #>   name id xmin ymin xmax ymax tumour_cells tumour_cells_in_bbox     time #> 1   S1 11  450  475  500  550         3863                 3863 215,0761 #> 2   S2 12  500  525  520  550          531                  531 216,0767"},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-get_species.html","id":null,"dir":"Reference","previous_headings":"","what":"Getting the species — SpatialSimulation$get_species","title":"Getting the species — SpatialSimulation$get_species","text":"method returns simulated species.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-get_species.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Getting the species — SpatialSimulation$get_species","text":"dataframe reporting mutant, epistate, growth_rate, death_rate, switch_rate registered species.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-get_species.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Getting the species — SpatialSimulation$get_species","text":"","code":"# set the seed of the random number generator set.seed(0)  # create a simulation sim <- SpatialSimulation() sim$add_mutant(\"A\", growth_rate = 0.2, death_rate = 0.1) sim$add_mutant(\"B\", growth_rate = 0.15, death_rate = 0.05)  # get the added species and their rates. In this case, \"A\" # and \"B\" sim$get_species() #>   mutant epistate growth_rate death_rate switch_rate #> 1      A                 0,20       0,10          NA #> 2      B                 0,15       0,05          NA"},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-get_tissue_size.html","id":null,"dir":"Reference","previous_headings":"","what":"Getting the simulated tissue size — SpatialSimulation$get_tissue_size","title":"Getting the simulated tissue size — SpatialSimulation$get_tissue_size","text":"method returns size simulated tissue.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-get_tissue_size.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Getting the simulated tissue size — SpatialSimulation$get_tissue_size","text":"vector c(x_size, y_size) simulated tissue.","code":""},{"path":[]},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-get_tissue_size.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Getting the simulated tissue size — SpatialSimulation$get_tissue_size","text":"","code":"# set the seed of the random number generator set.seed(0)  # create a simulation having size 1200x900 sim <- SpatialSimulation(width=1200, height=900)  # get the tissue size, i.e., expecting c(1200,900) sim$get_tissue_size() #> [1] 1200  900"},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-history_delta.html","id":null,"dir":"Reference","previous_headings":"","what":"The delta time between time series samples — SpatialSimulation$history_delta","title":"The delta time between time series samples — SpatialSimulation$history_delta","text":"value maximum time two successive time series data samples.","code":""},{"path":[]},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-history_delta.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The delta time between time series samples — SpatialSimulation$history_delta","text":"","code":"# set the seed of the random number generator set.seed(0)  # create a simulation sim <- SpatialSimulation()  # get the delta time between two time series samples (0 by default) sim$history_delta #> [1] 0  # set the delta time between two time series samples sim$death_activation_level <- 20"},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-mutate_progeny.html","id":null,"dir":"Reference","previous_headings":"","what":"Generating a mutated progeny — SpatialSimulation$mutate_progeny","title":"Generating a mutated progeny — SpatialSimulation$mutate_progeny","text":"method generates mutated progeny.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-mutate_progeny.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generating a mutated progeny — SpatialSimulation$mutate_progeny","text":"cell_position position cell whose offspring mutate. mutated_mutant mutant mutated cell.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-mutate_progeny.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generating a mutated progeny — SpatialSimulation$mutate_progeny","text":"simulates duplication cell specified position birth one cells given mutant preserves epigenetic status original cell. mutated cell located position parent.","code":""},{"path":[]},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-mutate_progeny.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generating a mutated progeny — SpatialSimulation$mutate_progeny","text":"","code":"# set the seed of the random number generator set.seed(0)  # create a simulation sim <- SpatialSimulation() sim$add_mutant(name = \"A\",                epigenetic_rates = c(\"+-\" = 0.01, \"-+\" = 0.01),                growth_rates = c(\"+\" = 0.2, \"-\" = 0.08),                death_rates = c(\"+\" = 0.01, \"-\" = 0.01)) sim$place_cell(\"A+\", 500, 500) sim$run_up_to_time(30) #>   [████████████████████████████████████████] 100% [00m:00s] Saving snapshot        sim$add_mutant(name = \"B\",                epigenetic_rates = c(\"+-\" = 0.1, \"-+\" = 0.01),                growth_rates = c(\"+\" = 0.15, \"-\" = 0.3),                death_rates = c(\"+\" = 0.1, \"-\" = 0.01))  # duplicate the cell in position (503, 492). One of # its direct descendents will have mutant \"B\" # sim$mutate_progeny(503, 492, \"B\")  # the output of `choose_cell_in` and `get_cell` can also be used # as input for `mutate_progeny` sim$mutate_progeny(sim$choose_cell_in(\"A\"), \"B\")"},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-place_cell.html","id":null,"dir":"Reference","previous_headings":"","what":"Placing one cell in the tissue — SpatialSimulation$place_cell","title":"Placing one cell in the tissue — SpatialSimulation$place_cell","text":"method places cell tissue.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-place_cell.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Placing one cell in the tissue — SpatialSimulation$place_cell","text":"species name new cell species. x position x axis cell. y position y axis cell.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-place_cell.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Placing one cell in the tissue — SpatialSimulation$place_cell","text":"","code":"# set the seed of the random number generator set.seed(0)  # create a tissue simulation sim <- SpatialSimulation() sim$add_mutant(name = \"A\",                epigenetic_rates = c(\"+-\" = 0.01, \"-+\" = 0.01),                growth_rates = c(\"+\" = 0.2, \"-\" = 0.08),                death_rates = c(\"+\" = 0.1, \"-\" = 0.01))  # add into the tissue a cell of species \"A+\" in position (500,500) sim$place_cell(\"A+\", 500, 500)"},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-run_until.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulating cell evolution — SpatialSimulation$run_until","title":"Simulating cell evolution — SpatialSimulation$run_until","text":"method simulates cell evolution formula hold.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-run_until.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulating cell evolution — SpatialSimulation$run_until","text":"formula formula satisfied end simulation. quiet optional  Boolean flag avoid progress bar (default: FALSE).","code":""},{"path":[]},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-run_until.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulating cell evolution — SpatialSimulation$run_until","text":"","code":"# set the seed of the random number generator set.seed(0)  # create a simulation sim <- SpatialSimulation() sim$add_mutant(name = \"A\",                epigenetic_rates = c(\"+-\" = 0.01, \"-+\" = 0.01),                growth_rates = c(\"+\" = 0.2, \"-\" = 0.08),                death_rates = c(\"+\" = 0.1, \"-\" = 0.01)) sim$place_cell(\"A+\", 500, 500)  # get the variable representing the simulation time v_time <- sim$var(\"Time\")  # get the variable representing the cardinality of A+ va_p <- sim$var(\"A+\")  # get the variable representing the cardinality of A- va_m <- sim$var(\"A-\")  # get the variable representing the number of epigenetic # switches from A+ va_ps <- sim$var(\"A+.switches\")  # build a condition stating that the cardinality of A+ doubles # that of A- c1 <- va_p >= 2*va_m  # build a condition that holds when there are more than # 100000 live cells of mutant A c2 <- va_p + va_m > 1e5  # build a condition that holds when less than 4000 switched # from A+ have occurred c3 <- va_ps < 4000  # build a condition that holds when 40 time unit have been # simulated at least c4 <- v_time >= 40  # build a condition that holds when c4 and at least one # among c1, c2, and c3 hold c5 <- c4 & (c1 | c2 | c3) c5 #> Time>=40 and (|A+|>=2*|A-| or |A+|+|A-|>100000 or 4000>|A+.switches|)  # run the simulation while c5 does not hold sim$run_until(c5) #>   [████████████████████████████████████████] 100% [00m:00s] Saving snapshot        sim #> ──  ProCESS   D   S   M  /var/folders/tb/jqmdpgxs2t5129bny6pb96680000gn/T/ProCES #>  #> ── Species: 2, with epigenetics  #>     #>    =======  ====  ====  ====  ======  === #>    species   λ      δ    ε    counts   %  #>    =======  ====  ====  ====  ======  === #>         A-  0,08  0,01  0,01    30    75  #>         A+  0,20  0,10  0,01    10    25  #>    =======  ====  ====  ====  ======  === #>  #> ── Firings: 73 total  #>  #> \tSpecies [A-]:  5 (deaths), 37 (duplications) and  5 (switches) #> \tSpecies [A+]:  8 (deaths), 15 (duplications) and  3 (switches) #> ✖ The simulation has no samples yet! sim$get_clock() #> [1] 40,34598"},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-run_up_to_event.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulating cell evolution — SpatialSimulation$run_up_to_event","title":"Simulating cell evolution — SpatialSimulation$run_up_to_event","text":"method simulates cell evolution number events occurred cells species reaches specified threshold.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-run_up_to_event.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulating cell evolution — SpatialSimulation$run_up_to_event","text":"event considered event, .e., growth, death, switch. species species whose event number considered. num_of_events threshold event number. quiet optional  Boolean flag avoid progress bar (default: FALSE).","code":""},{"path":[]},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-run_up_to_event.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulating cell evolution — SpatialSimulation$run_up_to_event","text":"","code":"# set the seed of the random number generator set.seed(0)  # create a simulation sim <- SpatialSimulation() sim$add_mutant(name = \"A\",                epigenetic_rates = c(\"+-\" = 0.01, \"-+\" = 0.01),                growth_rates = c(\"+\" = 0.2, \"-\" = 0.08),                death_rates = c(\"+\" = 0.1, \"-\" = 0.01)) sim$place_cell(\"A+\", 500, 500)  # simulate the cell evolution until the number of epigenetic events from # the species \"A+\" is less than 100. sim$run_up_to_event(event = \"switch\", species = \"A+\", num_of_events = 100) #>   [████████████████████████████████████████] 100% [00m:00s] Saving snapshot"},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-run_up_to_size.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulating cell evolution — SpatialSimulation$run_up_to_size","title":"Simulating cell evolution — SpatialSimulation$run_up_to_size","text":"method simulates cell evolution number cells species reaches specified threshold.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-run_up_to_size.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulating cell evolution — SpatialSimulation$run_up_to_size","text":"species species whose number cells considered. num_of_cells threshold cell number. quiet optional  Boolean flag avoid progress bar (default: FALSE).","code":""},{"path":[]},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-run_up_to_size.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulating cell evolution — SpatialSimulation$run_up_to_size","text":"","code":"# set the seed of the random number generator set.seed(0)  # create a simulation sim <- SpatialSimulation() sim$add_mutant(name = \"A\",                epigenetic_rates = c(\"+-\" = 0.01, \"-+\" = 0.01),                growth_rates = c(\"+\" = 0.2, \"-\" = 0.08),                death_rates = c(\"+\" = 0.1, \"-\" = 0.01)) sim$place_cell(\"A+\", 500, 500)  # simulate the tissue until the species \"A+\" account for 100 # contemporary cells sim$run_up_to_size(species = \"A+\", num_of_cells = 100) #>   [████████████████████████████████████████] 100% [00m:00s] Saving snapshot"},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-run_up_to_time.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulates cell evolution — SpatialSimulation$run_up_to_time","title":"Simulates cell evolution — SpatialSimulation$run_up_to_time","text":"Simulates cell evolution","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-run_up_to_time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulates cell evolution — SpatialSimulation$run_up_to_time","text":"time final simulation time. quiet optional  Boolean flag avoid progress bar (default: FALSE).","code":""},{"path":[]},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-run_up_to_time.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulates cell evolution — SpatialSimulation$run_up_to_time","text":"","code":"# set the seed of the random number generator set.seed(0)  # create a simulation sim <- SpatialSimulation() sim$add_mutant(\"A\", growth_rate = 0.2, death_rate = 0.1) sim$place_cell(\"A\", 500, 500)  # simulate the tissue up to simulate timed 100 sim$run_up_to_time(40) #>   [████████████████████████████████████████] 100% [00m:00s] Saving snapshot"},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-sample_cells.html","id":null,"dir":"Reference","previous_headings":"","what":"Sampling a set of cells — SpatialSimulation$sample_cells","title":"Sampling a set of cells — SpatialSimulation$sample_cells","text":"method samples set tumour cells.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-sample_cells.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sampling a set of cells — SpatialSimulation$sample_cells","text":"sample_name name sample. lower_corner lower corner sample bounding box (optional pair upper_corner). upper_corner upper corner sample bounding box (optional pair lower_corner). num_of_cells maximum number tumour cells collect (optional).","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-sample_cells.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sampling a set of cells — SpatialSimulation$sample_cells","text":"removes cells simulated tissue stores sample can subsequently retrieved build samples forest.","code":""},{"path":[]},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-sample_cells.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sampling a set of cells — SpatialSimulation$sample_cells","text":"","code":"# set the seed of the random number generator set.seed(0)  # create a simulation sim <- SpatialSimulation() sim$add_mutant(name = \"A\",                growth_rate = 0.2,                death_rate = 0.01) sim$place_cell(\"A\", 500, 500)  sim$death_activation_level <- 100 sim$run_up_to_size(species = \"A\", num_of_cells = 50000) #>   [████████████████████████████████████████] 100% [00m:00s] Saving snapshot        # randomly sample 50 tumour cells from the tissue sim$sample_cells(\"S1\", num_of_cells=50)  # sample the region [450,500]x[475,550] sim$sample_cells(\"S2\", lower_corner=c(450,475), upper_corner=c(500,550))  # randomly sample 50 tumour cells from the tissue region [500,550]x[500,550] sim$sample_cells(\"S3\", lower_corner=c(500,500), upper_corner=c(550,550),                  num_of_cells=50)  sim$get_samples_info() #>   name id xmin ymin xmax ymax tumour_cells tumour_cells_in_bbox     time #> 1   S1 13    0    0  999  999           50                50000 215,0761 #> 2   S2 14  450  475  500  550         3856                 3856 215,0761 #> 3   S3 15  500  500  550  550           50                 2543 215,0761"},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-schedule_mutation.html","id":null,"dir":"Reference","previous_headings":"","what":"Scheduling a mutant mutation — SpatialSimulation$schedule_mutation","title":"Scheduling a mutant mutation — SpatialSimulation$schedule_mutation","text":"method schedules mutant mutation","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-schedule_mutation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scheduling a mutant mutation — SpatialSimulation$schedule_mutation","text":"src name mutant mutation occurs. dest name mutant mutation leads. time simulated time mutation occurs.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-schedule_mutation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Scheduling a mutant mutation — SpatialSimulation$schedule_mutation","text":"mutation can occur species source mutant species destination mutant consistent epigenetic state. sake example, mutation \"\" \"B\" scheduled, three possible situations: mutant \"\" consists species \"\". , one duplication cell \"\", one cell \"B\" arise. mutant \"\" consists species \"+\" \"-\" one duplication cell \"+\", one cell \"B+\" arise. mutant \"\" consists species \"+\" \"-\" one duplication cell \"-\", one cell \"B-\" arise. scenario can occur.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-schedule_mutation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scheduling a mutant mutation — SpatialSimulation$schedule_mutation","text":"","code":"# set the seed of the random number generator set.seed(0)  # create a simulation sim <- SpatialSimulation() sim$add_mutant(name = \"A\",                epigenetic_rates = c(\"+-\" = 0.01, \"-+\" = 0.01),                growth_rates = c(\"+\" = 0.2, \"-\" = 0.08),                death_rates = c(\"+\" = 0.1, \"-\" = 0.01)) sim$add_mutant(name = \"B\",                epigenetic_rates = c(\"+-\" = 0.02, \"-+\" = 0.01),                growth_rates = c(\"+\" = 0.3, \"-\" = 0.1),                death_rates = c(\"+\" = 0.1, \"-\" = 0.01))  # schedule an evolution from mutant \"A\" to mutant \"B\" at time 50 sim$schedule_mutation(src = \"A\", dst = \"B\", time = 50)"},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-search_sample.html","id":null,"dir":"Reference","previous_headings":"","what":"Searching a rectangular tissue sample — SpatialSimulation$search_sample","title":"Searching a rectangular tissue sample — SpatialSimulation$search_sample","text":"method searches rectangular tissue sample.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-search_sample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Searching a rectangular tissue sample — SpatialSimulation$search_sample","text":"min_num_of_cells named integer vector reporting minimum number cells per species mutant. num_of_cells number cells searched sample. width width searched sample. height height searched sample.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-search_sample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Searching a rectangular tissue sample — SpatialSimulation$search_sample","text":"rectangular sample satisfying provided constraints can found, corresponding rectangle.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-search_sample.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Searching a rectangular tissue sample — SpatialSimulation$search_sample","text":"aimed sample mush satisfy specified number cells. sizes samples also provided parameter method. complexity method \\(O(|\\textrm{tissue width}|*|\\textrm{tissue height}|)\\).","code":""},{"path":[]},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-search_sample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Searching a rectangular tissue sample — SpatialSimulation$search_sample","text":"","code":"# set the seed of the random number generator set.seed(0)  # create a simulation sim <- SpatialSimulation() sim$death_activation_level <- 50 sim$add_mutant(name = \"A\", growth_rate = 0.2, death_rate = 0.01) sim$place_cell(\"A\", 500, 500) sim$run_up_to_size(species = \"A\", num_of_cells = 500) #>   [████████████████████████████████████████] 100% [00m:00s] Saving snapshot        sim$add_mutant(name = \"B\", growth_rate = 0.3, death_rate = 0.01) sim$mutate_progeny(sim$choose_cell_in(\"A\"), \"B\") sim$run_up_to_size(species = \"B\", num_of_cells = 1000) #>   [████------------------------------------] 8% [00m:00s] Cells: 49125              [████------------------------------------] 9% [00m:00s] Cells: 64119              [█████-----------------------------------] 12% [00m:01s] Cells: 84469             [██████----------------------------------] 14% [00m:02s] Cells: 89622             [███████---------------------------------] 17% [00m:03s] Cells: 110772            [████████--------------------------------] 19% [00m:04s] Cells: 121899            [█████████-------------------------------] 22% [00m:05s] Cells: 135585            [███████████-----------------------------] 26% [00m:06s] Cells: 153945            [████████████----------------------------] 29% [00m:07s] Cells: 173435            [█████████████---------------------------] 32% [00m:08s] Cells: 188027            [██████████████--------------------------] 34% [00m:09s] Cells: 199560            [███████████████-------------------------] 36% [00m:10s] Cells: 216137            [████████████████------------------------] 39% [00m:11s] Cells: 230701            [█████████████████-----------------------] 41% [00m:12s] Cells: 240371            [██████████████████----------------------] 44% [00m:13s] Cells: 255529            [███████████████████---------------------] 47% [00m:14s] Cells: 269896            [█████████████████████-------------------] 50% [00m:15s] Cells: 283162            [██████████████████████------------------] 54% [00m:16s] Cells: 296847            [███████████████████████-----------------] 57% [00m:17s] Cells: 309854            [█████████████████████████---------------] 60% [00m:18s] Cells: 320436            [█████████████████████████---------------] 62% [00m:19s] Cells: 330225            [███████████████████████████-------------] 66% [00m:20s] Cells: 342417            [█████████████████████████████-----------] 70% [00m:21s] Cells: 355321            [█████████████████████████████-----------] 72% [00m:22s] Cells: 367678            [██████████████████████████████----------] 74% [00m:23s] Cells: 379541            [███████████████████████████████---------] 77% [00m:24s] Cells: 391323            [█████████████████████████████████-------] 80% [00m:25s] Cells: 402662            [█████████████████████████████████-------] 82% [00m:26s] Cells: 414632            [███████████████████████████████████-----] 86% [00m:27s] Cells: 425812            [████████████████████████████████████----] 89% [00m:28s] Cells: 437588            [█████████████████████████████████████---] 92% [00m:29s] Cells: 448445            [███████████████████████████████████████-] 96% [00m:30s] Cells: 459770            [████████████████████████████████████████] 99% [00m:31s] Cells: 470868            [████████████████████████████████████████] 100% [00m:32s] Saving snapshot        # find a 50x50 sample containing 80 \"B\" cells and 10 \"A\" cells at least sim$search_sample(c(\"A\" = 10, \"B\" = 80), 50, 50) #> TissueRectangle((413,365),(462,414))"},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-search_samples.html","id":null,"dir":"Reference","previous_headings":"","what":"Searching rectangular tissue samples — SpatialSimulation$search_samples","title":"Searching rectangular tissue samples — SpatialSimulation$search_samples","text":"method searches set rectangular tissue samples.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-search_samples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Searching rectangular tissue samples — SpatialSimulation$search_samples","text":"min_num_of_cells named integer vector reporting minimum number cells per species mutant. num_of_cells number cells searched sample. width width searched sample. height height searched sample. n_samples number searched samples. seed seed random generator select samples among satisfying constraints (optional).","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-search_samples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Searching rectangular tissue samples — SpatialSimulation$search_samples","text":"vector n_samples rectangular tissue samples satisfy aimed constraints.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-search_samples.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Searching rectangular tissue samples — SpatialSimulation$search_samples","text":"aimed samples mush satisfy specified number cells. sizes samples also provided parameter method. method takes asymptotic time \\(\\Theta(|\\textrm{tissue width}|*|\\textrm{tissue height}|)\\).","code":""},{"path":[]},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-search_samples.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Searching rectangular tissue samples — SpatialSimulation$search_samples","text":"","code":"# set the seed of the random number generator set.seed(0)  # create a simulation sim <- SpatialSimulation() sim$death_activation_level <- 50 sim$add_mutant(name = \"A\", growth_rate = 0.2, death_rate = 0.01) sim$place_cell(\"A\", 500, 500) sim$run_up_to_size(species = \"A\", num_of_cells = 50) #>   [████████████████████████████████████████] 100% [00m:00s] Saving snapshot        sim$add_mutant(name = \"B\", growth_rate = 0.3, death_rate = 0.01) sim$mutate_progeny(sim$choose_cell_in(\"A\"), \"B\") sim$run_up_to_size(species = \"B\", num_of_cells = 40000) #>   [████████████████████████----------------] 58% [00m:00s] Cells: 56545             [████████████████████████████████████████] 100% [00m:00s] Saving snapshot        plot <- plot_tissue(sim, num_of_bins = 1000)  # find 3 50x50 samples containing 80 \"B\" cells and 100 \"A\" cells # at least bboxes <- sim$search_samples(c(\"A\" = 100, \"B\" = 80), 50, 50,                              n_samples=3) bboxes #> [[1]] #> TissueRectangle((452,470),(501,519)) #>  #> [[2]] #> TissueRectangle((402,520),(451,569)) #>  #> [[3]] #> TissueRectangle((452,420),(501,469)) #>   # plot the bbox of the found samples for (bbox in bboxes) {   plot <- plot +     ggplot2::geom_rect(xmin = bbox$lower_corner[1],                        xmax = bbox$upper_corner[1],                        ymin = bbox$lower_corner[2],                        ymax = bbox$upper_corner[2],                        fill = NA, color = \"black\") }  plot"},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-update_rates.html","id":null,"dir":"Reference","previous_headings":"","what":"Updating species rates — SpatialSimulation$update_rates","title":"Updating species rates — SpatialSimulation$update_rates","text":"method updates rates species.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-update_rates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Updating species rates — SpatialSimulation$update_rates","text":"species species whose rates must updated. rates list rates updated.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-update_rates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Updating species rates — SpatialSimulation$update_rates","text":"","code":"# set the seed of the random number generator set.seed(0)  # create a simulation sim <- SpatialSimulation() sim$add_mutant(name = \"A\",                epigenetic_rates = c(\"+-\" = 0.01, \"-+\" = 0.01),                growth_rates = c(\"+\" = 0.2, \"-\" = 0.08),                death_rates = c(\"+\" = 0.1, \"-\" = 0.01))  # Set the death and epigenetic switch rates of \"A-\" to 0 sim$update_rates(\"A-\", c(switch=0, death=0))"},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-var.html","id":null,"dir":"Reference","previous_headings":"","what":"Building a simulation status variable — SpatialSimulation$var","title":"Building a simulation status variable — SpatialSimulation$var","text":"method builds simulation status variable.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-var.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Building a simulation status variable — SpatialSimulation$var","text":"variable_description description variable built. variable_description string \"Time\", elapsed simulation time variable returned. variable_description set species name, variable representing cardinality species built. Finally, parameter species name followed . one among duplications, deaths, switches, variable representing number event specified type occurred since computation beginning species.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-var.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Building a simulation status variable — SpatialSimulation$var","text":"variable representing simulation quantity according parameter variable_description.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-var.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Building a simulation status variable — SpatialSimulation$var","text":"method builds logic variable representing one simulation quantities among: cardinality species number event among duplications, deaths, epigenetic switches elapsed evolution time","code":""},{"path":[]},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation-cash-var.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Building a simulation status variable — SpatialSimulation$var","text":"","code":"# build a simulation and add two species to it # set the seed of the random number generator set.seed(0)  # create a simulation sim <- SpatialSimulation() sim$add_mutant(name = \"A\",                epigenetic_rates = c(\"+-\" = 0.01, \"-+\" = 0.01),                growth_rates = c(\"+\" = 0.2, \"-\" = 0.08),                death_rates = c(\"+\" = 0.1, \"-\" = 0.01))  # get the variable representing the simulation time sim$var(\"Time\") #> Time  # get the variable representing the cardinality of A+ sim$var(\"A+\") #> |A+|  # get the variable representing the cardinality of A- sim$var(\"A-\") #> |A-|  # get the variable representing the number of epigenetic # switches from A+ sim$var(\"A+.switches\") #> |A+.switches|  # get the variable representing the number of duplications # in A+ sim$var(\"A+.duplications\") #> |A+.duplications|  # get the variable representing the number of deaths in A+ sim$var(\"A+.deaths\") #> |A+.deaths|"},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulating the cell evolution on a tissue — SpatialSimulation","title":"Simulating the cell evolution on a tissue — SpatialSimulation","text":"class simulates cell evolution tissue. method builds new simulation.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulating the cell evolution on a tissue — SpatialSimulation","text":"name name simulation (default: \"races_<year>_<hour><minute><second>\"). width width simulated tissue (default: 1000). height height simulated tissue (default: 1000). save_snapshots flag save simulation snapshots disk (default: FALSE). seed seed pseudo-random generator (optional).","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulating the cell evolution on a tissue — SpatialSimulation","text":"objects class can simulate evolution many cells belonging different species tissue. cell can duplicate die according rates delineate cell species. Simulation supports epigenetic evolutions, lets users define species pairs belong mutant (even though, genomic characterization unknown) differ epigenetic state (.e., either \"+\" \"-\"). Simulation models epigenetic mutations allows cell one mutant species generate new cell belonging species mutant specified rate. Simulation also allows users schedule mutations one mutant different mutant.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"Simulating the cell evolution on a tissue — SpatialSimulation","text":"add_mutant Adds mutant species Parameter: mutant - mutant name. Parameter: epigenetic_rates - epigenetic rates mutant species (optional). Parameter: growth_rates - duplication rates mutant species. Parameter: death_rates - death rates mutant species. choose_cell_in Chooses one cell mutant Parameter: mutant - mutant cell choose. Parameter: lower_corner - lower left corner rectangular selection (optional). Parameter: upper_corner - upper right corner rectangular selection (optional). Returns: list reporting \"cell_id\", \"mutant\", \"epistate\", \"position_x\", \"position_y\" choosen cell. death_activation_level number cells activates cell death species. border_growth_model Switch homogeneous border driven growth models. get_added_cells Gets cells manually added simulation Returns: dataframe reporting \"mutant\", \"epistate\", \"position_x\", \"position_y\", \"time\" cells manually added simulation. search_sample Seach rectangular sample minimum number cells Parameter: mutant_name - mutant searched cells. Parameter: num_of_cells - number cells searched sample. Parameter: width - width searched sample. Parameter: height - height searched sample. Returns: rectangular sample satisfying provided constraints can found, corresponding rectangle. get_cell Gets one tissue cells Parameter: x - position aimed cell x axis. Parameter: y - position aimed cell y axis. Returns: dataframe reporting \"cell_id\", \"mutant\", \"epistate\", \"position_x\", \"position_y\" aimed cell. get_cells Gets tissue cells Parameter: lower_corner - lower-left corner selection frame (optional). Parameter: upper_corner - upper-right corner selection frame (optional). Parameter: mutant_filter - vector --selected mutant names (optional). Parameter: epigenetic_filter - vector --selected epigenetic states (optional). Returns: dataframe reporting \"cell_id\", \"mutant\", \"epistate\", \"position_x\", \"position_y\" cells satisfying provided filters laying input frame. get_clock Gets simulated time Returns: time simulated simulation. get_count_history Gets history number cells per species Returns: dataframe reporting \"mutant\", \"epistate\", \"counts\", \"time\" species sampled time. get_counts Counts number cells per species Returns: dataframe reporting \"mutant\", \"epistate\", \"counts\", \"overall\" species simulation. get_firing_history Gets history number fired events Returns: dataframe reporting \"event\", \"mutant\", \"epistate\", \"fired\", \"time\" event type, species, sampled time. get_firings Gets number fired events Returns: dataframe reporting \"event\", \"mutant\", \"epistate\", \"fired\" event type species. get_name Gets simulation name Returns: simulation name, corresponds name directory simulation saving progresses. get_lineage_graph Gets simulation lineage graph Returns: dataframe reporting \"ancestor\", \"progeny\", \"first_occurrence\" species--species transition. get_rates Gets rates species Parameter: species - species whose rates aimed. Returns: list species names. get_samples_forest Get samples forest Returns: descendants forest leaves sampled cells. get_samples_info Retrieve information samples Returns: dataframe containing, sample collected simulation, columns \"name\", \"time\", \"ymin\", \"xmin\", \"ymax\", \"xmax\", \"tumour_cells\", \"tumour_cells_in_bbox\". columns \"ymin\", \"xmin\", \"ymax\", \"xmax\" report boundaries sample bounding box, \"tumour_cells\" \"tumour_cells_in_bbox\" number tumour cells sample bounding box, respectively. get_species Gets species Returns: dataframe describing registered species. get_tissue_size Gets size simulated tissue Returns: vector c(x_size, y_size) simulated tissue. mutate_progeny Generate mutated offspring Parameter: cell_position - position cell whose offspring mutate. Parameter: mutated_mutant - mutant mutated cell. Parameter: x - position cell whose progeny mutate x axis. Parameter: y - position cell whose progeny mutate y axis. Parameter: mutated_mutant - mutant mutated cell. place_cell Place one cell tissue Parameter: species - name new cell species. Parameter: x - position x axis cell. Parameter: y - position y axis cell. schedule_mutation Schedules mutant mutation Parameter: src - name mutant mutation occurs. Parameter: dest - name mutant mutation leads. Parameter: time - simulated time mutation occurs. run_up_to_event Simulates cell evolution Parameter: event - considered event type, .e., \"growth\", \"death\", \"switch\". Parameter: species - species whose event number considered. Parameter: num_of_events - threshold event number. Parameter: quiet - Boolean flag avoid progress bar (optional). run_up_to_size Simulates cell evolution Parameter: species - species whose number cells considered. Parameter: num_of_cells - threshold cell number. Parameter: quiet - Boolean flag avoid progress bar (optional). run_up_to_time Simulates cell evolution Parameter: time - final simulation time. Parameter: quiet - Boolean flag avoid progress bar (optional). run_until Simulating cell evolution Parameter: formula - formula satisfied end simulation. Parameter: quiet - Boolean flag avoid progress bar (optional). sample_cells Sample tissue rectangle region Parameter: name - sample name. Parameter: lower_corner - bottom-left corner rectangle. Parameter: upper_corner - top-right corner rectangle. update_rates Updates rates species Parameter: species - species whose rates must updated. Parameter: rates - list rates updated. Returns: vector species names. var Builds variable representing simulation quantity Parameter: variable_description - description variable built. Returns: variable representing simulation quantity according parameter variable_description.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/SpatialSimulation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulating the cell evolution on a tissue — SpatialSimulation","text":"","code":"# create a SpatialSimulation object storing binary dump in a temporary # directory. The data are deleted from the disk as soon as the object # is destroyed. sim <- SpatialSimulation(\"test\")  # add a new species, place a cell in the tissue, and let the simulation # evolve. sim$add_mutant(name = \"A\", growth_rate = 0.3, death_rate = 0.02) sim$place_cell(\"A\", 500, 500) sim$run_up_to_time(30) #>   [████████████████████████████████████████] 100% [00m:00s] Saving snapshot        # no directory \"test\" has been created \"test\" %in% list.files(\".\") #> [1] FALSE  # By using the optional parameter `save_snapshots`, we force the # simulation to save its progresses in a local directory whose name # is the name of the simulation, i.e., \"test\". This data will be # preserved when the simulation object will be destroyed. sim <- SpatialSimulation(\"test\", save_snapshots=TRUE)  # as done above, we add a new species, place a cell in the tissue, # and let the simulation evolve. sim$add_mutant(name = \"A\", growth_rate = 0.3, death_rate = 0.02) sim$place_cell(\"A\", 500, 500) sim$run_up_to_time(30) #>   [████████████████████████████████████████] 100% [00m:00s] Saving snapshot        # the directory \"test\" exists and contains a binary dump of # the simulation. \"test\" %in% list.files(\".\") #> [1] TRUE  # let us manually delete the \"test\" directory unlink(\"test\", recursive = TRUE)  # we can also provide a random seed to the simulation... sim <- SpatialSimulation(\"test\", seed=13)  # ...or creating a simulation without providing any name. By default, the # simulation name will have the following format `races_<date>_<hour>`. sim <- SpatialSimulation(seed=13)  # finally we can also specify the size of the simulated space # by using the optional parameters `width` and `height` sim <- SpatialSimulation(width=1200, height=900)"},{"path":"https://caravagnalab.github.io/ProCESS/reference/TissueRectangle-cash-lower_corner.html","id":null,"dir":"Reference","previous_headings":"","what":"The tissue rectangle lower corner — TissueRectangle$lower_corner","title":"The tissue rectangle lower corner — TissueRectangle$lower_corner","text":"vector minima among rectangle dimensions.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/TissueRectangle-cash-lower_corner.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The tissue rectangle lower corner — TissueRectangle$lower_corner","text":"","code":"rect <- new(TissueRectangle, c(500, 500), c(550, 550))  # get the simulation death activation level rect$lower_corner #> [1] 500 500"},{"path":"https://caravagnalab.github.io/ProCESS/reference/TissueRectangle-cash-new.html","id":null,"dir":"Reference","previous_headings":"","what":"Build a new rectangle of tissue. — TissueRectangle$new","title":"Build a new rectangle of tissue. — TissueRectangle$new","text":"Build new rectangle tissue.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/TissueRectangle-cash-new.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Build a new rectangle of tissue. — TissueRectangle$new","text":"","code":"# build the rectangle [500,550]x[450,475] rect <- new(TissueRectangle, c(500, 450), c(550, 475))  rect #> TissueRectangle((500,450),(550,475))  # build the rectangle [500,550]x[450,475] rect <- new(TissueRectangle, c(500, 450), 50, 25)  rect #> TissueRectangle((500,450),(549,474))"},{"path":"https://caravagnalab.github.io/ProCESS/reference/TissueRectangle-cash-upper_corner.html","id":null,"dir":"Reference","previous_headings":"","what":"The tissue rectangle upper corner — TissueRectangle$upper_corner","title":"The tissue rectangle upper corner — TissueRectangle$upper_corner","text":"vector maxima among rectangle dimensions.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/TissueRectangle-cash-upper_corner.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The tissue rectangle upper corner — TissueRectangle$upper_corner","text":"","code":"rect <- new(TissueRectangle, c(500, 500), c(550, 550))  # get the simulation death activation level rect$upper_corner #> [1] 550 550"},{"path":"https://caravagnalab.github.io/ProCESS/reference/TissueRectangle.html","id":null,"dir":"Reference","previous_headings":"","what":"A rectangle in the tissue — TissueRectangle","title":"A rectangle in the tissue — TissueRectangle","text":"rectangle tissue","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/TissueRectangle.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"A rectangle in the tissue — TissueRectangle","text":"get_lower_corner Get rectangle lower corner get_upper_corner Get rectangle upper corner","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/Variable.html","id":null,"dir":"Reference","previous_headings":"","what":"Represent a simulation quantity — Variable","title":"Represent a simulation quantity — Variable","text":"objects class represent one among following quantities: cardinality species; number fired event among deaths, duplications switches species; elapse simulation time.","code":""},{"path":[]},{"path":"https://caravagnalab.github.io/ProCESS/reference/Variable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Represent a simulation quantity — Variable","text":"","code":"# build a simulation and add two species to it # set the seed of the random number generator set.seed(0)  # create a simulation sim <- SpatialSimulation() sim$add_mutant(name = \"A\",                epigenetic_rates = c(\"+-\" = 0.01, \"-+\" = 0.01),                growth_rates = c(\"+\" = 0.2, \"-\" = 0.08),                death_rates = c(\"+\" = 0.1, \"-\" = 0.01))  # get the variable representing the cardinality of A+ in sim sim$var(\"A+\") #> |A+|  # get the variable representing the number of duplications in A+ sim$var(\"A+.duplications\") #> |A+.duplications|  # get the variable representing the simulation time sim$var(\"Time\") #> Time  # the logic variables can be stored in an R variable va_p <- sim$var(\"A+\") va_p #> |A+|"},{"path":"https://caravagnalab.github.io/ProCESS/reference/WholeGenomeDoubling.html","id":null,"dir":"Reference","previous_headings":"","what":"Whole genome doubling events — WholeGenomeDoubling","title":"Whole genome doubling events — WholeGenomeDoubling","text":"whole genome doubling event (WGD) produces simultaneous duplication chromosome allele genome.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/annotate_forest.html","id":null,"dir":"Reference","previous_headings":"","what":"Annotate a plot of cell divisions. — annotate_forest","title":"Annotate a plot of cell divisions. — annotate_forest","text":"annotates plot cell divisions information sampling times MRCAs available samples","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/annotate_forest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Annotate a plot of cell divisions. — annotate_forest","text":"","code":"annotate_forest(   tree_plot,   forest,   samples = TRUE,   MRCAs = TRUE,   exposures = FALSE,   facet_signatures = TRUE,   drivers = TRUE,   add_driver_label = TRUE )"},{"path":"https://caravagnalab.github.io/ProCESS/reference/annotate_forest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Annotate a plot of cell divisions. — annotate_forest","text":"tree_plot output plot_forest. forest original forest object input plot_forest derived. samples TRUE annotates samples. MRCAs TRUE annotates MRCAs. exposures TRUE annotates exposures mutational signatures. facet_signatures TRUE exposures TRUE creates faceted forest plot exposure signature annotated separated plot. drivers TRUE annotates drivers node originated. add_driver_label TRUE drivers TRUE annotates driver name.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/annotate_forest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Annotate a plot of cell divisions. — annotate_forest","text":"ggraph tree plot.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/annotate_forest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Annotate a plot of cell divisions. — annotate_forest","text":"","code":"sim <- SpatialSimulation() sim$add_mutant(name = \"A\", growth_rates = 0.08, death_rates = 0.01) sim$place_cell(\"A\", 500, 500) sim$run_up_to_time(60) #>   [████████████████████████████████████████] 100% [00m:00s] Saving snapshot       sim$sample_cells(\"MySample\", c(500, 500), c(510, 510)) m_engine = MutationEngine(setup_code = \"demo\") #>   [█---------------------------------------] 0% [00m:00s] Loading context index     [████████████████████████████████████████] 100% [00m:00s] Context index loaded  #>   [█---------------------------------------] 0% [00m:00s] Loading RS index          [████████████████------------------------] 39% [00m:01s] Loading RS index         [██████████████████████████████----------] 74% [00m:02s] Loading RS index         [████████████████████████████████████████] 100% [00m:02s] RS index loaded       #>   [█---------------------------------------] 0% [00m:00s] Loading germline          [████████████████████████████████████████] 100% [00m:00s] Germline loaded        m_engine$add_mutant(mutant_name = \"A\",                     passenger_rates = c(SNV = 1e-9),                     drivers = list(SNV(\"22\", 10510210, \"C\"),                                    CNA(type = \"A\", \"22\", chr_pos = 10303470,                                        len = 200000))) #>   [█---------------------------------------] 0% [00m:00s] Retrieving \"A\" SNVs       [█---------------------------------------] 0% [00m:00s] Found 22                  [█---------------------------------------] 0% [00m:00s] Reading 22                [█---------------------------------------] 0% [00m:01s] Reading 22                [████████████████████████████████████████] 100% [00m:01s] \"A\" SNVs retrieved    m_engine$add_exposure(coefficients = c(SBS13 = 0.2, SBS1 = 0.8)) m_engine$add_exposure(time=50, coefficients = c(SBS17b = 0.2, SBS3 = 0.8))  forest = sim$get_samples_forest() forest$get_samples_info() #>       name id xmin ymin xmax ymax tumour_cells tumour_cells_in_bbox     time #> 1 MySample 16  500  500  510  510           14                   14 60,15479 forest_muts = m_engine$place_mutations(forest, 1000, 500) #>   [█---------------------------------------] 0% [00m:00s] Placing mutations         [████████████████████████████████████████] 100% [00m:00s] Mutations placed      tree_plot = plot_forest(forest) annotate_forest(tree_plot, forest_muts, samples = T, MRCAs = T,                 exposures = T, drivers=T, add_driver_label = T)"},{"path":"https://caravagnalab.github.io/ProCESS/reference/bbox_sampler.html","id":null,"dir":"Reference","previous_headings":"","what":"Bounding box sampler — bbox_sampler","title":"Bounding box sampler — bbox_sampler","text":"simulation object, function samples bounding boxes custom size number cells certain species sampled. never happens, fixed number attempts best box returned.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/bbox_sampler.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bounding box sampler — bbox_sampler","text":"","code":"bbox_sampler(simulation, which, n, n_w, n_h, nattempts = 100)"},{"path":"https://caravagnalab.github.io/ProCESS/reference/bbox_sampler.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bounding box sampler — bbox_sampler","text":"simulation simulation object. species name. n desired number cells species . n_w Width box. n_h Height box. nattempts maximum number attempts.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/bbox_sampler.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bounding box sampler — bbox_sampler","text":"coordinates bounding box.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/bbox_sampler.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bounding box sampler — bbox_sampler","text":"","code":"sim <- SpatialSimulation() sim$add_mutant(name = \"A\", growth_rates = 0.08, death_rates = 0.01) sim$place_cell(\"A\", 500, 500) sim$run_up_to_time(60) #>   [████████████████████████████████████████] 100% [00m:00s] Saving snapshot       bbox <- bbox_sampler(sim, \"A\", n = 15, n_w = 5, n_h = 5) sim$sample_cells(\"A\", bbox$p, bbox$q) plot_tissue(sim)"},{"path":"https://caravagnalab.github.io/ProCESS/reference/get_available_tumours_in.html","id":null,"dir":"Reference","previous_headings":"","what":"Getting the tumour types and studies available for a set-up code. — get_available_tumours_in","title":"Getting the tumour types and studies available for a set-up code. — get_available_tumours_in","text":"method returns tumour types studies available set-code.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/get_available_tumours_in.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Getting the tumour types and studies available for a set-up code. — get_available_tumours_in","text":"setup_code set-code whose available tumour types studies requested.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/get_available_tumours_in.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Getting the tumour types and studies available for a set-up code. — get_available_tumours_in","text":"dataframe reporting types studies available set-code.","code":""},{"path":[]},{"path":"https://caravagnalab.github.io/ProCESS/reference/get_available_tumours_in.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Getting the tumour types and studies available for a set-up code. — get_available_tumours_in","text":"","code":"# get the types and studies available for the \"demo\" set-up code get_available_tumours_in(\"demo\") #>    type study #> 1  BLCA    US #> 2  BOCA    UK #> 3  BRCA    EU #> 4  BRCA    UK #> 5  BRCA    US #> 6  BTCA    SG #> 7  CESC    US #> 8  CLLE    ES #> 9  CMDI    UK #> 10 COAD    US #> 11 DLBC    US #> 12 EOPC    DE #> 13 ESAD    UK #> 14 GACA    CN #> 15  GBM    US #> 16 HNSC    US #> 17 KICH    US #> 18 KIRC    US #> 19 KIRP    US #> 20 LAML    KR #> 21  LGG    US #> 22 LICA    FR #> 23 LIHC    US #> 24 LINC    JP #> 25 LIRI    JP #> 26 LUAD    US #> 27 LUSC    US #> 28 MALY    DE #> 29 MELA    AU #> 30 ORCA    IN #> 31   OV    AU #> 32   OV    US #> 33 PACA    AU #> 34 PACA    CA #> 35 PAEN    AU #> 36 PAEN    IT #> 37 PBCA    DE #> 38 PRAD    CA #> 39 PRAD    UK #> 40 PRAD    US #> 41 READ    US #> 42 RECA    EU #> 43 SARC    US #> 44 SKCM    US #> 45 STAD    US #> 46 THCA    US #> 47 UCEC    US"},{"path":"https://caravagnalab.github.io/ProCESS/reference/get_mutation_engine_codes.html","id":null,"dir":"Reference","previous_headings":"","what":"Getting the supported set-up codes — get_mutation_engine_codes","title":"Getting the supported set-up codes — get_mutation_engine_codes","text":"method returns supported codes predefined set-.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/get_mutation_engine_codes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Getting the supported set-up codes — get_mutation_engine_codes","text":"dataframe reporting code description supported predefined set-.","code":""},{"path":[]},{"path":"https://caravagnalab.github.io/ProCESS/reference/get_mutation_engine_codes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Getting the supported set-up codes — get_mutation_engine_codes","text":"","code":"# get the list of supported mutation engine set-up codes get_mutation_engine_codes() #>     name           description #> 1 GRCh37 Homo sapiens (GRCh37) #> 2 GRCh38 Homo sapiens (GRCh38) #> 3   demo  A demostative set-up"},{"path":"https://caravagnalab.github.io/ProCESS/reference/get_relevant_branches.html","id":null,"dir":"Reference","previous_headings":"","what":"Get relevant branch dataframe — get_relevant_branches","title":"Get relevant branch dataframe — get_relevant_branches","text":"Get subset forest nodes corresponding phylogenetic branches containing relevant biological events (drivers)","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/get_relevant_branches.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get relevant branch dataframe — get_relevant_branches","text":"","code":"get_relevant_branches(forest)"},{"path":"https://caravagnalab.github.io/ProCESS/reference/get_relevant_branches.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get relevant branch dataframe — get_relevant_branches","text":"forest forest","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/get_relevant_branches.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get relevant branch dataframe — get_relevant_branches","text":"dataframe reporting forest nodes corresponding phylogenetic branches containing relevant biological events (drivers).","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/get_relevant_branches.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get relevant branch dataframe — get_relevant_branches","text":"","code":"# set the seed of the random number generator set.seed(0)  sim <- SpatialSimulation()  sim$add_mutant(name = \"A\",                growth_rates = 1,                death_rates = 0) sim$place_cell(\"A\", 500, 500)  sim$run_up_to_size(\"A\",1e4) #>   [████████████████████████████████████████] 100% [00m:00s] Saving snapshot        sim$add_mutant(name = \"B\",                growth_rates = 3.5,                death_rates = 0) sim$mutate_progeny(sim$choose_cell_in(\"A\"), \"B\")  sim$run_up_to_size(\"B\",1e4) #>   [████████████████████████████████████████] 100% [00m:00s] Saving snapshot        bbox <- sim$search_sample(c(\"A\" = 100,\"B\" = 100), 50, 50) sim$sample_cells(\"Sampling\", bbox$lower_corner, bbox$upper_corner)  forest = sim$get_samples_forest() get_relevant_branches(forest) #> # A tibble: 4,345 × 7 #>    cell_id ancestor mutant epistate sample birth_time label     #>      <dbl>    <int> <chr>  <chr>    <chr>       <dbl> <chr>     #>  1       0       NA A      \"\"       NA          0     Truncal   #>  2       1        0 A      \"\"       NA          0.574 Subclonal #>  3       2        0 A      \"\"       NA          0.574 B         #>  4       3        1 A      \"\"       NA          0.855 Subclonal #>  5       6        2 A      \"\"       NA          1.36  B         #>  6       7        3 A      \"\"       NA          1.41  Subclonal #>  7      11        7 A      \"\"       NA          1.83  Subclonal #>  8      20        6 A      \"\"       NA          2.59  B         #>  9      22       11 A      \"\"       NA          2.70  Subclonal #> 10      25       20 A      \"\"       NA          2.84  B         #> # ℹ 4,335 more rows"},{"path":"https://caravagnalab.github.io/ProCESS/reference/label_mutations.html","id":null,"dir":"Reference","previous_headings":"","what":"Label mutations using phylogenetic forest data — label_mutations","title":"Label mutations using phylogenetic forest data — label_mutations","text":"function labels mutations using data cell occurs first time.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/label_mutations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Label mutations using phylogenetic forest data — label_mutations","text":"","code":"label_mutations(seq_results, phylo_forest)"},{"path":"https://caravagnalab.github.io/ProCESS/reference/label_mutations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Label mutations using phylogenetic forest data — label_mutations","text":"seq_results output simulate_seq(). phylo_forest phylogenetic forest sequencing simulated.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/label_mutations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Label mutations using phylogenetic forest data — label_mutations","text":"copy data frame seq_results added identifier cell mutation occurs first time (column \"cell_id\"), identifier ancestor (column \"ancestor\"), mutant (column \"mutant\"), epigenetic state (column \"epistate\"), birth time (column \"birth_time\"), sample collected cell whenever available (column \"sample\"), cell classification based phylogenetic sticks (column \"label\").","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/label_mutations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Label mutations using phylogenetic forest data — label_mutations","text":"","code":"# set the seed of the random number generator set.seed(0)  # simulate a tissue sim <- SpatialSimulation()  sim$add_mutant(name = \"A\",                growth_rates = 1,                death_rates = 0) sim$place_cell(\"A\", 500, 500) sim$run_up_to_size(\"A\",1e4) #>   [████████████████████████████████████████] 100% [00m:00s] Saving snapshot       sim$add_mutant(name = \"B\",                growth_rates = 3.5,                death_rates = 0) sim$mutate_progeny(sim$choose_cell_in(\"A\"), \"B\")  sim$run_up_to_size(\"B\",1e4) #>   [████████████████████████████████████████] 100% [00m:00s] Saving snapshot        # sample the tissue and build the sample forest bbox <- sim$search_sample(c(\"A\" = 100,\"B\" = 100), 50, 50) sim$sample_cells(\"Sampling\", bbox$lower_corner, bbox$upper_corner) forest = sim$get_samples_forest()  # place the mutations m_engine = MutationEngine(setup_code = \"demo\") #>   [█---------------------------------------] 0% [00m:00s] Loading context index     [████████████████████████████████████████] 100% [00m:00s] Context index loaded  #>   [█---------------------------------------] 0% [00m:00s] Loading RS index          [█████████████████-----------------------] 40% [00m:01s] Loading RS index         [████████████████████████████████--------] 79% [00m:02s] Loading RS index         [████████████████████████████████████████] 100% [00m:02s] RS index loaded       #>   [█---------------------------------------] 0% [00m:00s] Loading germline          [████████████████████████████████████████] 100% [00m:00s] Germline loaded       m_engine$add_mutant(mutant_name = \"A\",                     passenger_rates = c(SNV = 5e-8)) #>   [█---------------------------------------] 0% [00m:00s] Retrieving \"A\" SNVs       [████████████████████████████████████████] 100% [00m:00s] \"A\" SNVs retrieved    m_engine$add_mutant(mutant_name = \"B\",                     passenger_rates = c(SNV = 5e-8)) #>   [█---------------------------------------] 0% [00m:00s] Retrieving \"B\" SNVs       [████████████████████████████████████████] 100% [00m:00s] \"B\" SNVs retrieved     m_engine$add_exposure(time = 0, c(SBS1 = 0.2,SBS5 = 0.8))  phylo_forest <- m_engine$place_mutations(forest, 100, 10) #>   [█---------------------------------------] 0% [00m:00s] Placing mutations         [████████████████████████████████████████] 100% [00m:00s] Mutations placed       # simulate sequencing without the normal sample seq_results <- simulate_seq(phylo_forest, coverage = 100, write_SAM = F,                             with_normal_sample = FALSE) #>   [█---------------------------------------] 0% [00m:00s] Found 22                  [█---------------------------------------] 0% [00m:00s] Reading 22                [█---------------------------------------] 0% [00m:01s] Reading 22                [█---------------------------------------] 0% [00m:01s] Processing chr. 22        [█---------------------------------------] 0% [00m:02s] Processing chr. 22        [█---------------------------------------] 0% [00m:03s] Processing chr. 22        [█---------------------------------------] 0% [00m:04s] Processing chr. 22        [█---------------------------------------] 1% [00m:05s] Processing chr. 22        [█---------------------------------------] 1% [00m:06s] Processing chr. 22        [█---------------------------------------] 1% [00m:07s] Processing chr. 22        [█---------------------------------------] 2% [00m:08s] Processing chr. 22        [█---------------------------------------] 2% [00m:09s] Processing chr. 22        [█---------------------------------------] 2% [00m:10s] Processing chr. 22        [██--------------------------------------] 3% [00m:11s] Processing chr. 22        [██--------------------------------------] 3% [00m:12s] Processing chr. 22        [██--------------------------------------] 3% [00m:13s] Processing chr. 22        [██--------------------------------------] 4% [00m:14s] Processing chr. 22        [██--------------------------------------] 4% [00m:15s] Processing chr. 22        [██--------------------------------------] 4% [00m:16s] Processing chr. 22        [███-------------------------------------] 5% [00m:17s] Processing chr. 22        [███-------------------------------------] 5% [00m:18s] Processing chr. 22        [███-------------------------------------] 6% [00m:19s] Processing chr. 22        [███-------------------------------------] 6% [00m:20s] Processing chr. 22        [███-------------------------------------] 6% [00m:21s] Processing chr. 22        [███-------------------------------------] 7% [00m:22s] Processing chr. 22        [███-------------------------------------] 7% [00m:23s] Processing chr. 22        [███-------------------------------------] 7% [00m:24s] Processing chr. 22        [████------------------------------------] 8% [00m:25s] Processing chr. 22        [████------------------------------------] 8% [00m:26s] Processing chr. 22        [████------------------------------------] 8% [00m:27s] Processing chr. 22        [████------------------------------------] 9% [00m:28s] Processing chr. 22        [████------------------------------------] 9% [00m:29s] Processing chr. 22        [█████-----------------------------------] 10% [00m:30s] Processing chr. 22       [█████-----------------------------------] 10% [00m:31s] Processing chr. 22       [█████-----------------------------------] 10% [00m:32s] Processing chr. 22       [█████-----------------------------------] 11% [00m:33s] Processing chr. 22       [█████-----------------------------------] 11% [00m:34s] Processing chr. 22       [█████-----------------------------------] 11% [00m:35s] Processing chr. 22       [█████-----------------------------------] 11% [00m:36s] Processing chr. 22       [█████-----------------------------------] 12% [00m:37s] Processing chr. 22       [█████-----------------------------------] 12% [00m:38s] Processing chr. 22       [█████-----------------------------------] 12% [00m:39s] Processing chr. 22       [██████----------------------------------] 13% [00m:40s] Processing chr. 22       [██████----------------------------------] 13% [00m:41s] Processing chr. 22       [██████----------------------------------] 14% [00m:42s] Processing chr. 22       [██████----------------------------------] 14% [00m:43s] Processing chr. 22       [██████----------------------------------] 14% [00m:44s] Processing chr. 22       [███████---------------------------------] 15% [00m:45s] Processing chr. 22       [███████---------------------------------] 15% [00m:46s] Processing chr. 22       [███████---------------------------------] 15% [00m:47s] Processing chr. 22       [███████---------------------------------] 16% [00m:48s] Processing chr. 22       [███████---------------------------------] 16% [00m:49s] Processing chr. 22       [███████---------------------------------] 16% [00m:50s] Processing chr. 22       [███████---------------------------------] 17% [00m:51s] Processing chr. 22       [███████---------------------------------] 17% [00m:52s] Processing chr. 22       [████████--------------------------------] 18% [00m:53s] Processing chr. 22       [████████--------------------------------] 18% [00m:54s] Processing chr. 22       [████████--------------------------------] 18% [00m:55s] Processing chr. 22       [████████--------------------------------] 18% [00m:56s] Processing chr. 22       [████████--------------------------------] 19% [00m:57s] Processing chr. 22       [████████--------------------------------] 19% [00m:58s] Processing chr. 22       [████████--------------------------------] 19% [00m:59s] Processing chr. 22       [█████████-------------------------------] 20% [01m:00s] Processing chr. 22       [█████████-------------------------------] 20% [01m:01s] Processing chr. 22       [█████████-------------------------------] 20% [01m:02s] Processing chr. 22       [█████████-------------------------------] 21% [01m:03s] Processing chr. 22       [█████████-------------------------------] 21% [01m:04s] Processing chr. 22       [█████████-------------------------------] 21% [01m:05s] Processing chr. 22       [█████████-------------------------------] 22% [01m:06s] Processing chr. 22       [█████████-------------------------------] 22% [01m:07s] Processing chr. 22       [█████████-------------------------------] 22% [01m:08s] Processing chr. 22       [█████████-------------------------------] 22% [01m:09s] Processing chr. 22       [██████████------------------------------] 23% [01m:10s] Processing chr. 22       [██████████------------------------------] 23% [01m:11s] Processing chr. 22       [██████████------------------------------] 23% [01m:12s] Processing chr. 22       [██████████------------------------------] 24% [01m:13s] Processing chr. 22       [██████████------------------------------] 24% [01m:14s] Processing chr. 22       [██████████------------------------------] 24% [01m:15s] Processing chr. 22       [██████████------------------------------] 24% [01m:16s] Processing chr. 22       [███████████-----------------------------] 25% [01m:17s] Processing chr. 22       [███████████-----------------------------] 25% [01m:18s] Processing chr. 22       [███████████-----------------------------] 25% [01m:19s] Processing chr. 22       [███████████-----------------------------] 26% [01m:20s] Processing chr. 22       [███████████-----------------------------] 26% [01m:21s] Processing chr. 22       [███████████-----------------------------] 27% [01m:22s] Processing chr. 22       [███████████-----------------------------] 27% [01m:23s] Processing chr. 22       [███████████-----------------------------] 27% [01m:24s] Processing chr. 22       [████████████----------------------------] 28% [01m:25s] Processing chr. 22       [████████████----------------------------] 28% [01m:26s] Processing chr. 22       [████████████----------------------------] 28% [01m:27s] Processing chr. 22       [████████████----------------------------] 29% [01m:28s] Processing chr. 22       [████████████----------------------------] 29% [01m:29s] Processing chr. 22       [████████████----------------------------] 29% [01m:30s] Processing chr. 22       [█████████████---------------------------] 30% [01m:31s] Processing chr. 22       [█████████████---------------------------] 30% [01m:32s] Processing chr. 22       [█████████████---------------------------] 30% [01m:33s] Processing chr. 22       [█████████████---------------------------] 31% [01m:34s] Processing chr. 22       [█████████████---------------------------] 31% [01m:35s] Processing chr. 22       [█████████████---------------------------] 32% [01m:36s] Processing chr. 22       [█████████████---------------------------] 32% [01m:37s] Processing chr. 22       [█████████████---------------------------] 32% [01m:38s] Processing chr. 22       [██████████████--------------------------] 33% [01m:39s] Processing chr. 22       [██████████████--------------------------] 33% [01m:40s] Processing chr. 22       [██████████████--------------------------] 33% [01m:41s] Processing chr. 22       [██████████████--------------------------] 34% [01m:42s] Processing chr. 22       [██████████████--------------------------] 34% [01m:43s] Processing chr. 22       [██████████████--------------------------] 34% [01m:44s] Processing chr. 22       [███████████████-------------------------] 35% [01m:45s] Processing chr. 22       [███████████████-------------------------] 35% [01m:46s] Processing chr. 22       [███████████████-------------------------] 36% [01m:47s] Processing chr. 22       [███████████████-------------------------] 36% [01m:48s] Processing chr. 22       [███████████████-------------------------] 36% [01m:49s] Processing chr. 22       [███████████████-------------------------] 37% [01m:50s] Processing chr. 22       [███████████████-------------------------] 37% [01m:51s] Processing chr. 22       [███████████████-------------------------] 37% [01m:52s] Processing chr. 22       [████████████████------------------------] 38% [01m:53s] Processing chr. 22       [████████████████------------------------] 38% [01m:54s] Processing chr. 22       [████████████████------------------------] 38% [01m:55s] Processing chr. 22       [████████████████------------------------] 39% [01m:56s] Processing chr. 22       [████████████████------------------------] 39% [01m:57s] Processing chr. 22       [████████████████------------------------] 39% [01m:58s] Processing chr. 22       [█████████████████-----------------------] 40% [01m:59s] Processing chr. 22       [█████████████████-----------------------] 40% [02m:00s] Processing chr. 22       [█████████████████-----------------------] 41% [02m:01s] Processing chr. 22       [█████████████████-----------------------] 41% [02m:02s] Processing chr. 22       [█████████████████-----------------------] 41% [02m:03s] Processing chr. 22       [█████████████████-----------------------] 42% [02m:04s] Processing chr. 22       [█████████████████-----------------------] 42% [02m:05s] Processing chr. 22       [█████████████████-----------------------] 42% [02m:06s] Processing chr. 22       [██████████████████----------------------] 43% [02m:07s] Processing chr. 22       [██████████████████----------------------] 43% [02m:08s] Processing chr. 22       [██████████████████----------------------] 43% [02m:09s] Processing chr. 22       [██████████████████----------------------] 44% [02m:10s] Processing chr. 22       [██████████████████----------------------] 44% [02m:11s] Processing chr. 22       [███████████████████---------------------] 45% [02m:12s] Processing chr. 22       [███████████████████---------------------] 45% [02m:13s] Processing chr. 22       [███████████████████---------------------] 45% [02m:14s] Processing chr. 22       [███████████████████---------------------] 46% [02m:15s] Processing chr. 22       [███████████████████---------------------] 46% [02m:16s] Processing chr. 22       [███████████████████---------------------] 46% [02m:17s] Processing chr. 22       [███████████████████---------------------] 47% [02m:18s] Processing chr. 22       [███████████████████---------------------] 47% [02m:19s] Processing chr. 22       [████████████████████--------------------] 48% [02m:20s] Processing chr. 22       [████████████████████--------------------] 48% [02m:21s] Processing chr. 22       [████████████████████--------------------] 48% [02m:22s] Processing chr. 22       [████████████████████--------------------] 49% [02m:23s] Processing chr. 22       [████████████████████--------------------] 49% [02m:24s] Processing chr. 22       [████████████████████--------------------] 49% [02m:25s] Processing chr. 22       [█████████████████████-------------------] 50% [02m:26s] Processing chr. 22       [█████████████████████-------------------] 50% [02m:27s] Processing chr. 22       [█████████████████████-------------------] 50% [02m:28s] Processing chr. 22       [█████████████████████-------------------] 51% [02m:29s] Processing chr. 22       [█████████████████████-------------------] 51% [02m:30s] Processing chr. 22       [█████████████████████-------------------] 52% [02m:31s] Processing chr. 22       [█████████████████████-------------------] 52% [02m:32s] Processing chr. 22       [█████████████████████-------------------] 52% [02m:33s] Processing chr. 22       [██████████████████████------------------] 52% [02m:34s] Processing chr. 22       [██████████████████████------------------] 52% [02m:35s] Processing chr. 22       [██████████████████████------------------] 52% [02m:36s] Processing chr. 22       [██████████████████████------------------] 54% [02m:37s] Processing chr. 22       [██████████████████████------------------] 54% [02m:38s] Processing chr. 22       [██████████████████████------------------] 54% [02m:39s] Processing chr. 22       [███████████████████████-----------------] 55% [02m:40s] Processing chr. 22       [███████████████████████-----------------] 55% [02m:41s] Processing chr. 22       [███████████████████████-----------------] 56% [02m:42s] Processing chr. 22       [███████████████████████-----------------] 56% [02m:43s] Processing chr. 22       [███████████████████████-----------------] 56% [02m:44s] Processing chr. 22       [███████████████████████-----------------] 57% [02m:45s] Processing chr. 22       [███████████████████████-----------------] 57% [02m:46s] Processing chr. 22       [███████████████████████-----------------] 57% [02m:47s] Processing chr. 22       [████████████████████████----------------] 58% [02m:48s] Processing chr. 22       [████████████████████████----------------] 58% [02m:49s] Processing chr. 22       [████████████████████████----------------] 58% [02m:50s] Processing chr. 22       [████████████████████████----------------] 58% [02m:51s] Processing chr. 22       [████████████████████████----------------] 58% [02m:52s] Processing chr. 22       [████████████████████████----------------] 58% [02m:53s] Processing chr. 22       [█████████████████████████---------------] 60% [02m:54s] Processing chr. 22       [█████████████████████████---------------] 60% [02m:55s] Processing chr. 22       [█████████████████████████---------------] 61% [02m:56s] Processing chr. 22       [█████████████████████████---------------] 61% [02m:57s] Processing chr. 22       [█████████████████████████---------------] 61% [02m:58s] Processing chr. 22       [█████████████████████████---------------] 62% [02m:59s] Processing chr. 22       [█████████████████████████---------------] 62% [03m:00s] Processing chr. 22       [█████████████████████████---------------] 62% [03m:01s] Processing chr. 22       [██████████████████████████--------------] 63% [03m:02s] Processing chr. 22       [██████████████████████████--------------] 63% [03m:03s] Processing chr. 22       [██████████████████████████--------------] 64% [03m:04s] Processing chr. 22       [██████████████████████████--------------] 64% [03m:05s] Processing chr. 22       [██████████████████████████--------------] 64% [03m:06s] Processing chr. 22       [███████████████████████████-------------] 65% [03m:07s] Processing chr. 22       [███████████████████████████-------------] 65% [03m:08s] Processing chr. 22       [███████████████████████████-------------] 65% [03m:09s] Processing chr. 22       [███████████████████████████-------------] 66% [03m:10s] Processing chr. 22       [███████████████████████████-------------] 66% [03m:11s] Processing chr. 22       [███████████████████████████-------------] 66% [03m:12s] Processing chr. 22       [███████████████████████████-------------] 67% [03m:13s] Processing chr. 22       [███████████████████████████-------------] 67% [03m:14s] Processing chr. 22       [████████████████████████████------------] 68% [03m:15s] Processing chr. 22       [████████████████████████████------------] 68% [03m:16s] Processing chr. 22       [████████████████████████████------------] 68% [03m:17s] Processing chr. 22       [████████████████████████████------------] 69% [03m:18s] Processing chr. 22       [████████████████████████████------------] 69% [03m:19s] Processing chr. 22       [████████████████████████████------------] 69% [03m:20s] Processing chr. 22       [█████████████████████████████-----------] 70% [03m:21s] Processing chr. 22       [█████████████████████████████-----------] 70% [03m:22s] Processing chr. 22       [█████████████████████████████-----------] 70% [03m:23s] Processing chr. 22       [█████████████████████████████-----------] 71% [03m:24s] Processing chr. 22       [█████████████████████████████-----------] 71% [03m:25s] Processing chr. 22       [█████████████████████████████-----------] 71% [03m:26s] Processing chr. 22       [█████████████████████████████-----------] 72% [03m:27s] Processing chr. 22       [█████████████████████████████-----------] 72% [03m:28s] Processing chr. 22       [██████████████████████████████----------] 73% [03m:29s] Processing chr. 22       [██████████████████████████████----------] 73% [03m:30s] Processing chr. 22       [██████████████████████████████----------] 73% [03m:31s] Processing chr. 22       [██████████████████████████████----------] 74% [03m:32s] Processing chr. 22       [██████████████████████████████----------] 74% [03m:33s] Processing chr. 22       [██████████████████████████████----------] 74% [03m:34s] Processing chr. 22       [███████████████████████████████---------] 75% [03m:35s] Processing chr. 22       [███████████████████████████████---------] 75% [03m:36s] Processing chr. 22       [███████████████████████████████---------] 76% [03m:37s] Processing chr. 22       [███████████████████████████████---------] 76% [03m:38s] Processing chr. 22       [███████████████████████████████---------] 76% [03m:39s] Processing chr. 22       [███████████████████████████████---------] 77% [03m:40s] Processing chr. 22       [███████████████████████████████---------] 77% [03m:41s] Processing chr. 22       [███████████████████████████████---------] 77% [03m:42s] Processing chr. 22       [████████████████████████████████--------] 78% [03m:43s] Processing chr. 22       [████████████████████████████████--------] 78% [03m:44s] Processing chr. 22       [████████████████████████████████--------] 78% [03m:45s] Processing chr. 22       [████████████████████████████████--------] 79% [03m:46s] Processing chr. 22       [████████████████████████████████--------] 79% [03m:47s] Processing chr. 22       [█████████████████████████████████-------] 80% [03m:48s] Processing chr. 22       [█████████████████████████████████-------] 80% [03m:49s] Processing chr. 22       [█████████████████████████████████-------] 80% [03m:50s] Processing chr. 22       [█████████████████████████████████-------] 81% [03m:51s] Processing chr. 22       [█████████████████████████████████-------] 81% [03m:52s] Processing chr. 22       [█████████████████████████████████-------] 81% [03m:53s] Processing chr. 22       [█████████████████████████████████-------] 82% [03m:54s] Processing chr. 22       [█████████████████████████████████-------] 82% [03m:55s] Processing chr. 22       [█████████████████████████████████-------] 82% [03m:56s] Processing chr. 22       [██████████████████████████████████------] 83% [03m:57s] Processing chr. 22       [██████████████████████████████████------] 83% [03m:58s] Processing chr. 22       [██████████████████████████████████------] 84% [03m:59s] Processing chr. 22       [██████████████████████████████████------] 84% [04m:00s] Processing chr. 22       [██████████████████████████████████------] 84% [04m:01s] Processing chr. 22       [███████████████████████████████████-----] 85% [04m:02s] Processing chr. 22       [███████████████████████████████████-----] 85% [04m:03s] Processing chr. 22       [███████████████████████████████████-----] 85% [04m:04s] Processing chr. 22       [███████████████████████████████████-----] 86% [04m:05s] Processing chr. 22       [███████████████████████████████████-----] 86% [04m:06s] Processing chr. 22       [███████████████████████████████████-----] 86% [04m:07s] Processing chr. 22       [███████████████████████████████████-----] 87% [04m:08s] Processing chr. 22       [███████████████████████████████████-----] 87% [04m:09s] Processing chr. 22       [████████████████████████████████████----] 88% [04m:10s] Processing chr. 22       [████████████████████████████████████----] 88% [04m:11s] Processing chr. 22       [████████████████████████████████████----] 88% [04m:12s] Processing chr. 22       [████████████████████████████████████----] 89% [04m:13s] Processing chr. 22       [████████████████████████████████████----] 89% [04m:14s] Processing chr. 22       [████████████████████████████████████----] 89% [04m:15s] Processing chr. 22       [█████████████████████████████████████---] 90% [04m:16s] Processing chr. 22       [█████████████████████████████████████---] 90% [04m:17s] Processing chr. 22       [█████████████████████████████████████---] 91% [04m:18s] Processing chr. 22       [█████████████████████████████████████---] 91% [04m:19s] Processing chr. 22       [█████████████████████████████████████---] 91% [04m:20s] Processing chr. 22       [█████████████████████████████████████---] 92% [04m:21s] Processing chr. 22       [█████████████████████████████████████---] 92% [04m:22s] Processing chr. 22       [█████████████████████████████████████---] 92% [04m:23s] Processing chr. 22       [██████████████████████████████████████--] 93% [04m:24s] Processing chr. 22       [██████████████████████████████████████--] 93% [04m:25s] Processing chr. 22       [██████████████████████████████████████--] 93% [04m:26s] Processing chr. 22       [██████████████████████████████████████--] 94% [04m:27s] Processing chr. 22       [██████████████████████████████████████--] 94% [04m:28s] Processing chr. 22       [███████████████████████████████████████-] 95% [04m:29s] Processing chr. 22       [███████████████████████████████████████-] 95% [04m:30s] Processing chr. 22       [███████████████████████████████████████-] 95% [04m:31s] Processing chr. 22       [███████████████████████████████████████-] 96% [04m:32s] Processing chr. 22       [███████████████████████████████████████-] 96% [04m:33s] Processing chr. 22       [███████████████████████████████████████-] 96% [04m:34s] Processing chr. 22       [███████████████████████████████████████-] 97% [04m:35s] Processing chr. 22       [███████████████████████████████████████-] 97% [04m:36s] Processing chr. 22       [███████████████████████████████████████-] 97% [04m:37s] Processing chr. 22       [████████████████████████████████████████] 98% [04m:38s] Processing chr. 22       [████████████████████████████████████████] 98% [04m:39s] Processing chr. 22       [████████████████████████████████████████] 99% [04m:40s] Processing chr. 22       [████████████████████████████████████████] 99% [04m:41s] Processing chr. 22       [████████████████████████████████████████] 99% [04m:42s] Processing chr. 22       [████████████████████████████████████████] 100% [04m:43s] Reads simulated        library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union  # filter germinal mutations f_seq <- seq_results$mutations %>% dplyr::filter(classes!=\"germinal\")  # label filtered mutations using phylogenetic forest data labels <- label_mutations(f_seq, phylo_forest) labels #> # A tibble: 3,746 × 16 #>    chr    chr_pos ref   alt   causes classes   Sampling.occurrences #>    <chr>    <int> <chr> <chr> <chr>  <chr>                    <int> #>  1 22    16071677 T     C     SBS5   passenger                    7 #>  2 22    16073144 C     T     SBS5   passenger                    1 #>  3 22    16076443 C     A     SBS5   passenger                    2 #>  4 22    16117746 T     G     SBS5   passenger                    2 #>  5 22    16137844 T     C     SBS5   passenger                    1 #>  6 22    16144272 T     C     SBS5   passenger                    1 #>  7 22    16146123 C     T     SBS5   passenger                   11 #>  8 22    16156717 G     A     SBS5   passenger                    4 #>  9 22    16158283 A     G     SBS5   passenger                   10 #> 10 22    16161869 A     G     SBS5   passenger                    1 #> # ℹ 3,736 more rows #> # ℹ 9 more variables: Sampling.coverage <int>, Sampling.VAF <dbl>, #> #   cell_id <dbl>, ancestor <int>, mutant <chr>, epistate <chr>, sample <chr>, #> #   birth_time <dbl>, label <chr>  # plotting histogram of the VAF with phylogenetic labels plot_VAF_histogram(f_seq, labels = labels[\"label\"], cuts = c(0.02, 1))"},{"path":"https://caravagnalab.github.io/ProCESS/reference/load_phylogenetic_forest.html","id":null,"dir":"Reference","previous_headings":"","what":"Loading a phylogenetic forest — load_phylogenetic_forest","title":"Loading a phylogenetic forest — load_phylogenetic_forest","text":"method loads phylogenetic forest file.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/load_phylogenetic_forest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Loading a phylogenetic forest — load_phylogenetic_forest","text":"filename path file phylogenetic forest must load. quiet optional  Boolean flag avoid progress bar (default: FALSE).","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/load_phylogenetic_forest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Loading a phylogenetic forest — load_phylogenetic_forest","text":"load phylogenetic forest","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/load_samples_forest.html","id":null,"dir":"Reference","previous_headings":"","what":"Loading samples forests — load_samples_forest","title":"Loading samples forests — load_samples_forest","text":"method loads samples forest file.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/load_samples_forest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Loading samples forests — load_samples_forest","text":"filename path file samples forest must load.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/load_samples_forest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Loading samples forests — load_samples_forest","text":"load samples forest","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/plot_BAF.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the genome-wide B-Allele Frequency (BAF) — plot_BAF","title":"Plot the genome-wide B-Allele Frequency (BAF) — plot_BAF","text":"function plots genome-wide B-Allele Frequency (BAF) specific sample.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/plot_BAF.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the genome-wide B-Allele Frequency (BAF) — plot_BAF","text":"","code":"plot_BAF(seq_result, sample, chromosomes = NULL, cuts = c(0, 1), N = 5000)"},{"path":"https://caravagnalab.github.io/ProCESS/reference/plot_BAF.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the genome-wide B-Allele Frequency (BAF) — plot_BAF","text":"seq_result data frame containing sequencing results. sample name sample plot generated. chromosomes character vector specifying chromosomes include plot (default: NULL, .e., chromosomes). cuts numeric vector specifying range BAF values include plot (default: c(0, 1)). N number mutations sample plotting (default: 5000).","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/plot_BAF.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the genome-wide B-Allele Frequency (BAF) — plot_BAF","text":"ggplot2 object showing BAF distribution across genome.","code":""},{"path":[]},{"path":"https://caravagnalab.github.io/ProCESS/reference/plot_BAF.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the genome-wide B-Allele Frequency (BAF) — plot_BAF","text":"","code":"# set the seed of the random number generator set.seed(0)  sim <- SpatialSimulation() sim$add_mutant(name = \"A\",                growth_rates = 0.2,                death_rates = 0.0) sim$place_cell(\"A\", 500, 500) sim$run_up_to_time(100) #>   [████████████████████████████████████████] 100% [00m:00s] Saving snapshot        n_w <- n_h <- 10 ncells <- 0.8 * n_w * n_h bbox <- sim$search_sample(c(\"A\" = ncells), n_w, n_h)  sim$sample_cells(\"Sample\", bbox$lower_corner, bbox$upper_corner)  forest <- sim$get_samples_forest() m_engine <- MutationEngine(setup_code = \"demo\") #>   [█---------------------------------------] 0% [00m:00s] Loading context index     [████████████████████████████████████████] 100% [00m:00s] Context index loaded  #>   [█---------------------------------------] 0% [00m:00s] Loading RS index          [█████████████████-----------------------] 41% [00m:01s] Loading RS index         [█████████████████████████████-----------] 72% [00m:02s] Loading RS index         [████████████████████████████████████████] 100% [00m:02s] RS index loaded       #>   [█---------------------------------------] 0% [00m:00s] Loading germline          [████████████████████████████████████████] 100% [00m:00s] Germline loaded        m_engine$add_mutant(mutant_name=\"A\", passenger_rates=c(SNV=5e-8)) #>   [█---------------------------------------] 0% [00m:00s] Retrieving \"A\" SNVs       [████████████████████████████████████████] 100% [00m:00s] \"A\" SNVs retrieved    m_engine$add_exposure(c(SBS1 = 0.2, SBS5 = 0.8))  phylo_forest <- m_engine$place_mutations(forest, 10, 10) #>   [█---------------------------------------] 0% [00m:00s] Placing mutations         [████████████████████████████████████████] 100% [00m:00s] Mutations placed       seq_results <- simulate_seq(   phylo_forest,   chromosomes = c('22'),   coverage = 10,   write_SAM = F ) #>   [█---------------------------------------] 0% [00m:00s] Found 22                  [█---------------------------------------] 0% [00m:00s] Reading 22                [█---------------------------------------] 0% [00m:01s] Reading 22                [█---------------------------------------] 0% [00m:02s] Reading 22                [█---------------------------------------] 0% [00m:02s] Processing chr. 22        [█---------------------------------------] 2% [00m:03s] Processing chr. 22        [███-------------------------------------] 6% [00m:04s] Processing chr. 22        [█████-----------------------------------] 10% [00m:05s] Processing chr. 22       [██████----------------------------------] 13% [00m:06s] Processing chr. 22       [███████---------------------------------] 17% [00m:07s] Processing chr. 22       [█████████-------------------------------] 20% [00m:08s] Processing chr. 22       [██████████------------------------------] 24% [00m:09s] Processing chr. 22       [████████████----------------------------] 28% [00m:10s] Processing chr. 22       [█████████████---------------------------] 31% [00m:11s] Processing chr. 22       [███████████████-------------------------] 35% [00m:12s] Processing chr. 22       [████████████████------------------------] 38% [00m:13s] Processing chr. 22       [█████████████████-----------------------] 42% [00m:14s] Processing chr. 22       [███████████████████---------------------] 46% [00m:15s] Processing chr. 22       [████████████████████--------------------] 49% [00m:16s] Processing chr. 22       [██████████████████████------------------] 52% [00m:17s] Processing chr. 22       [███████████████████████-----------------] 57% [00m:18s] Processing chr. 22       [█████████████████████████---------------] 60% [00m:19s] Processing chr. 22       [██████████████████████████--------------] 64% [00m:20s] Processing chr. 22       [███████████████████████████-------------] 67% [00m:21s] Processing chr. 22       [█████████████████████████████-----------] 71% [00m:22s] Processing chr. 22       [███████████████████████████████---------] 75% [00m:23s] Processing chr. 22       [████████████████████████████████--------] 78% [00m:24s] Processing chr. 22       [█████████████████████████████████-------] 82% [00m:25s] Processing chr. 22       [███████████████████████████████████-----] 85% [00m:26s] Processing chr. 22       [████████████████████████████████████----] 89% [00m:27s] Processing chr. 22       [█████████████████████████████████████---] 92% [00m:28s] Processing chr. 22       [███████████████████████████████████████-] 96% [00m:29s] Processing chr. 22       [████████████████████████████████████████] 98% [00m:30s] Processing chr. 22       [████████████████████████████████████████] 99% [00m:31s] Processing chr. 22       [████████████████████████████████████████] 99% [00m:32s] Processing chr. 22       [████████████████████████████████████████] 99% [00m:33s] Processing chr. 22       [████████████████████████████████████████] 99% [00m:34s] Processing chr. 22       [████████████████████████████████████████] 99% [00m:35s] Processing chr. 22       [████████████████████████████████████████] 99% [00m:36s] Processing chr. 22       [████████████████████████████████████████] 99% [00m:37s] Processing chr. 22       [████████████████████████████████████████] 99% [00m:38s] Processing chr. 22       [████████████████████████████████████████] 99% [00m:39s] Processing chr. 22       [████████████████████████████████████████] 99% [00m:40s] Processing chr. 22       [████████████████████████████████████████] 99% [00m:41s] Processing chr. 22       [████████████████████████████████████████] 99% [00m:42s] Processing chr. 22       [████████████████████████████████████████] 99% [00m:43s] Processing chr. 22       [████████████████████████████████████████] 99% [00m:44s] Processing chr. 22       [████████████████████████████████████████] 99% [00m:45s] Processing chr. 22       [████████████████████████████████████████] 99% [00m:46s] Processing chr. 22       [████████████████████████████████████████] 99% [00m:47s] Processing chr. 22       [████████████████████████████████████████] 99% [00m:48s] Processing chr. 22       [████████████████████████████████████████] 99% [00m:49s] Processing chr. 22       [████████████████████████████████████████] 99% [00m:50s] Processing chr. 22       [████████████████████████████████████████] 99% [00m:51s] Processing chr. 22       [████████████████████████████████████████] 99% [00m:52s] Processing chr. 22       [████████████████████████████████████████] 99% [00m:53s] Processing chr. 22       [████████████████████████████████████████] 99% [00m:54s] Processing chr. 22       [████████████████████████████████████████] 99% [00m:55s] Processing chr. 22       [████████████████████████████████████████] 99% [00m:56s] Processing chr. 22       [████████████████████████████████████████] 99% [00m:57s] Processing chr. 22       [████████████████████████████████████████] 100% [00m:57s] Reads simulated        library(dplyr)  # filter germinal mutations f_seq <- seq_results$mutations %>% filter(classes!=\"germinal\")  plot_BAF(f_seq, sample=\"Sample\")   unlink('demo', recursive = T)"},{"path":"https://caravagnalab.github.io/ProCESS/reference/plot_DR.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the genome-wide Depth Ratio (DR) — plot_DR","title":"Plot the genome-wide Depth Ratio (DR) — plot_DR","text":"function plots genome-wide Depth Ratio (DR) specific sample.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/plot_DR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the genome-wide Depth Ratio (DR) — plot_DR","text":"","code":"plot_DR(seq_result, sample, chromosomes = NULL, N = 5000)"},{"path":"https://caravagnalab.github.io/ProCESS/reference/plot_DR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the genome-wide Depth Ratio (DR) — plot_DR","text":"seq_result data frame containing sequencing results. sample name sample plot generated. chromosomes character vector specifying chromosomes include plot (default: NULL, .e., chromosomes). N number mutations sample plotting (default: 5000).","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/plot_DR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the genome-wide Depth Ratio (DR) — plot_DR","text":"ggplot2 object showing DR distribution across genome.","code":""},{"path":[]},{"path":"https://caravagnalab.github.io/ProCESS/reference/plot_DR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the genome-wide Depth Ratio (DR) — plot_DR","text":"","code":"# set the seed of the random number generator set.seed(0)  sim <- SpatialSimulation() sim$add_mutant(name = \"A\",                growth_rates = 0.2,                death_rates = 0.0) sim$place_cell(\"A\", 500, 500) sim$run_up_to_time(100) #>   [████████████████████████████████████████] 100% [00m:00s] Saving snapshot        n_w <- n_h <- 10 ncells <- 0.8 * n_w * n_h bbox <- sim$search_sample(c(\"A\" = ncells), n_w, n_h)  sim$sample_cells(\"Sample\", bbox$lower_corner, bbox$upper_corner)  forest <- sim$get_samples_forest() m_engine <- MutationEngine(setup_code = \"demo\") #> Downloading reference genome... #> Reference genome downloaded #> Decompressing reference file...done #> Downloading SBS file... #> SBS file downloaded #> Downloading indel file... #> indel file downloaded #> Downloading driver mutation file... #> Driver mutation file downloaded #> Downloading passenger CNAs file... #> Passenger CNAs file downloaded #> Downloading germline mutations... #> Germline mutations downloaded #> Building context index... #>   [█---------------------------------------] 0% [00m:00s] Processing chr. 22        [█████████████████-----------------------] 40% [00m:01s] Processing chr. 22       [█████████████████████████████████-------] 81% [00m:02s] Processing chr. 22       [████████████████████████████████████████] 100% [00m:02s] Context index built   #>   [█---------------------------------------] 0% [00m:00s] Saving context index      [████████████████████████████████████████] 100% [00m:00s] Context index saved   #> done #> Building repeated sequence index... #>   [█---------------------------------------] 0% [00m:00s] Processing chr. 22        [█---------------------------------------] 0% [00m:03s] Processing chr. 22        [█---------------------------------------] 0% [00m:04s] Processing chr. 22        [█---------------------------------------] 0% [00m:05s] Processing chr. 22        [█---------------------------------------] 0% [00m:06s] Processing chr. 22        [█---------------------------------------] 0% [00m:08s] Processing chr. 22        [█---------------------------------------] 0% [00m:11s] Processing chr. 22        [████████████████████████████████████████] 100% [00m:11s] RS index built        #>   [█---------------------------------------] 0% [00m:00s] Saving RS index           [█---------------------------------------] 0% [16m:58s] Saving RS index           [███████---------------------------------] 15% [16m:59s] Saving RS index        done #>   [████████████████████████████████████████] 100% [17m:00s] RS index saved        #>   [█---------------------------------------] 0% [00m:00s] Loading germline          [████████████████████████████████████████] 100% [00m:00s] Germline loaded       #>   [█---------------------------------------] 0% [00m:00s] Saving germline           [████████████████████████████████████████] 100% [00m:00s] Germline saved         m_engine$add_mutant(mutant_name=\"A\", passenger_rates=c(SNV=5e-8)) #>   [█---------------------------------------] 0% [00m:00s] Retrieving \"A\" SNVs       [████████████████████████████████████████] 100% [00m:00s] \"A\" SNVs retrieved    m_engine$add_exposure(c(SBS1 = 0.2, SBS5 = 0.8))  phylo_forest <- m_engine$place_mutations(forest, 10, 10) #>   [█---------------------------------------] 0% [00m:00s] Placing mutations         [████████████████████████████████████████] 100% [00m:00s] Mutations placed       seq_results <- simulate_seq(   phylo_forest,   chromosomes = c('22'),   coverage = 10,   write_SAM = F ) #>   [█---------------------------------------] 0% [00m:00s] Found 22                  [█---------------------------------------] 0% [00m:00s] Reading 22                [█---------------------------------------] 0% [00m:01s] Reading 22                [█---------------------------------------] 0% [00m:01s] Processing chr. 22        [█---------------------------------------] 0% [00m:02s] Processing chr. 22        [██--------------------------------------] 3% [00m:03s] Processing chr. 22        [███-------------------------------------] 7% [00m:04s] Processing chr. 22        [█████-----------------------------------] 10% [00m:05s] Processing chr. 22       [██████----------------------------------] 14% [00m:06s] Processing chr. 22       [████████--------------------------------] 18% [00m:07s] Processing chr. 22       [█████████-------------------------------] 21% [00m:08s] Processing chr. 22       [███████████-----------------------------] 25% [00m:09s] Processing chr. 22       [████████████----------------------------] 28% [00m:10s] Processing chr. 22       [█████████████---------------------------] 32% [00m:11s] Processing chr. 22       [███████████████-------------------------] 35% [00m:12s] Processing chr. 22       [████████████████------------------------] 39% [00m:13s] Processing chr. 22       [██████████████████----------------------] 43% [00m:14s] Processing chr. 22       [███████████████████---------------------] 46% [00m:15s] Processing chr. 22       [█████████████████████-------------------] 50% [00m:16s] Processing chr. 22       [██████████████████████------------------] 52% [00m:17s] Processing chr. 22       [███████████████████████-----------------] 57% [00m:18s] Processing chr. 22       [█████████████████████████---------------] 61% [00m:19s] Processing chr. 22       [██████████████████████████--------------] 64% [00m:20s] Processing chr. 22       [████████████████████████████------------] 68% [00m:21s] Processing chr. 22       [█████████████████████████████-----------] 72% [00m:22s] Processing chr. 22       [███████████████████████████████---------] 75% [00m:23s] Processing chr. 22       [████████████████████████████████--------] 79% [00m:24s] Processing chr. 22       [█████████████████████████████████-------] 82% [00m:25s] Processing chr. 22       [███████████████████████████████████-----] 86% [00m:26s] Processing chr. 22       [████████████████████████████████████----] 89% [00m:27s] Processing chr. 22       [██████████████████████████████████████--] 93% [00m:28s] Processing chr. 22       [███████████████████████████████████████-] 96% [00m:29s] Processing chr. 22       [████████████████████████████████████████] 98% [00m:30s] Processing chr. 22       [████████████████████████████████████████] 99% [00m:31s] Processing chr. 22       [████████████████████████████████████████] 99% [00m:32s] Processing chr. 22       [████████████████████████████████████████] 99% [00m:33s] Processing chr. 22       [████████████████████████████████████████] 99% [00m:34s] Processing chr. 22       [████████████████████████████████████████] 99% [00m:35s] Processing chr. 22       [████████████████████████████████████████] 99% [00m:36s] Processing chr. 22       [████████████████████████████████████████] 99% [00m:37s] Processing chr. 22       [████████████████████████████████████████] 99% [00m:38s] Processing chr. 22       [████████████████████████████████████████] 99% [00m:39s] Processing chr. 22       [████████████████████████████████████████] 99% [00m:40s] Processing chr. 22       [████████████████████████████████████████] 99% [00m:41s] Processing chr. 22       [████████████████████████████████████████] 99% [00m:42s] Processing chr. 22       [████████████████████████████████████████] 99% [00m:43s] Processing chr. 22       [████████████████████████████████████████] 99% [00m:44s] Processing chr. 22       [████████████████████████████████████████] 99% [00m:45s] Processing chr. 22       [████████████████████████████████████████] 99% [00m:46s] Processing chr. 22       [████████████████████████████████████████] 99% [00m:47s] Processing chr. 22       [████████████████████████████████████████] 99% [00m:48s] Processing chr. 22       [████████████████████████████████████████] 99% [00m:49s] Processing chr. 22       [████████████████████████████████████████] 99% [00m:50s] Processing chr. 22       [████████████████████████████████████████] 99% [00m:51s] Processing chr. 22       [████████████████████████████████████████] 99% [00m:52s] Processing chr. 22       [████████████████████████████████████████] 99% [00m:53s] Processing chr. 22       [████████████████████████████████████████] 99% [00m:54s] Processing chr. 22       [████████████████████████████████████████] 99% [00m:55s] Processing chr. 22       [████████████████████████████████████████] 99% [00m:56s] Processing chr. 22       [████████████████████████████████████████] 100% [00m:57s] Reads simulated        library(dplyr)  # filter germinal mutations f_seq <- seq_results$mutations %>% filter(classes!=\"germinal\")  plot_DR(f_seq, sample=\"Sample\")   unlink('demo', recursive = T)"},{"path":"https://caravagnalab.github.io/ProCESS/reference/plot_VAF.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the genome-wide Variant Allele Frequency (VAF) — plot_VAF","title":"Plot the genome-wide Variant Allele Frequency (VAF) — plot_VAF","text":"function plots genome-wide Variant Allele Frequency (VAF) specific sample.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/plot_VAF.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the genome-wide Variant Allele Frequency (VAF) — plot_VAF","text":"","code":"plot_VAF(seq_result, sample, chromosomes = NULL, cuts = c(0, 1), N = 5000)"},{"path":"https://caravagnalab.github.io/ProCESS/reference/plot_VAF.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the genome-wide Variant Allele Frequency (VAF) — plot_VAF","text":"seq_result data frame containing sequencing results. sample name sample plot generated. chromosomes character vector specifying chromosomes include plot (default: NULL, .e., chromosomes). cuts numeric vector specifying range VAF values include plot (default: c(0, 1)). N number mutations sample plotting (default: 5000).","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/plot_VAF.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the genome-wide Variant Allele Frequency (VAF) — plot_VAF","text":"ggplot2 object showing VAF distribution across genome.","code":""},{"path":[]},{"path":"https://caravagnalab.github.io/ProCESS/reference/plot_VAF.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the genome-wide Variant Allele Frequency (VAF) — plot_VAF","text":"","code":"# set the seed of the random number generator set.seed(0)  sim <- SpatialSimulation() sim$add_mutant(name = \"A\",                growth_rates = 0.2,                death_rates = 0.0) sim$place_cell(\"A\", 500, 500) sim$run_up_to_time(100) #>   [████████████████████████████████████████] 100% [00m:00s] Saving snapshot        n_w <- n_h <- 10 ncells <- 0.8 * n_w * n_h bbox <- sim$search_sample(c(\"A\" = ncells), n_w, n_h)  sim$sample_cells(\"Sample\", bbox$lower_corner, bbox$upper_corner)  forest <- sim$get_samples_forest() m_engine <- MutationEngine(setup_code = \"demo\") #> Downloading reference genome... #> Reference genome downloaded #> Decompressing reference file...done #> Downloading SBS file... #> SBS file downloaded #> Downloading indel file... #> indel file downloaded #> Downloading driver mutation file... #> Driver mutation file downloaded #> Downloading passenger CNAs file... #> Passenger CNAs file downloaded #> Downloading germline mutations... #> Germline mutations downloaded #> Building context index... #>   [█---------------------------------------] 0% [00m:00s] Processing chr. 22        [█████████████████-----------------------] 40% [00m:01s] Processing chr. 22       [█████████████████████████████████-------] 81% [00m:02s] Processing chr. 22       [████████████████████████████████████████] 100% [00m:02s] Context index built   #>   [█---------------------------------------] 0% [00m:00s] Saving context index      [████████████████████████████████████████] 100% [00m:00s] Context index saved   #> done #> Building repeated sequence index... #>   [█---------------------------------------] 0% [00m:00s] Processing chr. 22        [█---------------------------------------] 0% [00m:03s] Processing chr. 22        [█---------------------------------------] 0% [00m:04s] Processing chr. 22        [█---------------------------------------] 0% [00m:05s] Processing chr. 22        [█---------------------------------------] 0% [00m:06s] Processing chr. 22        [█---------------------------------------] 0% [00m:07s] Processing chr. 22        [█---------------------------------------] 0% [00m:11s] Processing chr. 22        [████████████████████████████████████████] 100% [00m:11s] RS index built        #>   [█---------------------------------------] 0% [00m:00s] Saving RS index           [█---------------------------------------] 0% [00m:01s] Saving RS index           [█████████████████████████████-----------] 72% [00m:02s] Saving RS index        done #>   [████████████████████████████████████████] 100% [00m:02s] RS index saved        #>   [█---------------------------------------] 0% [00m:00s] Loading germline          [████████████████████████████████████████] 100% [00m:00s] Germline loaded       #>   [█---------------------------------------] 0% [00m:00s] Saving germline           [████████████████████████████████████████] 100% [00m:00s] Germline saved         m_engine$add_mutant(mutant_name=\"A\", passenger_rates=c(SNV=5e-8)) #>   [█---------------------------------------] 0% [00m:00s] Retrieving \"A\" SNVs       [████████████████████████████████████████] 100% [00m:00s] \"A\" SNVs retrieved    m_engine$add_exposure(c(SBS1 = 0.2, SBS5 = 0.8))  phylo_forest <- m_engine$place_mutations(forest, 10, 10) #>   [█---------------------------------------] 0% [00m:00s] Placing mutations         [████████████████████████████████████████] 100% [00m:00s] Mutations placed       seq_results <- simulate_seq(   phylo_forest,   chromosomes = c('22'),   coverage = 10,   write_SAM = F ) #>   [█---------------------------------------] 0% [00m:00s] Found 22                  [█---------------------------------------] 0% [00m:00s] Reading 22                [█---------------------------------------] 0% [00m:01s] Reading 22                [█---------------------------------------] 0% [00m:01s] Processing chr. 22        [█---------------------------------------] 0% [00m:02s] Processing chr. 22        [██--------------------------------------] 4% [00m:03s] Processing chr. 22        [████------------------------------------] 8% [00m:04s] Processing chr. 22        [█████-----------------------------------] 11% [00m:05s] Processing chr. 22       [███████---------------------------------] 15% [00m:06s] Processing chr. 22       [████████--------------------------------] 19% [00m:07s] Processing chr. 22       [█████████-------------------------------] 22% [00m:08s] Processing chr. 22       [███████████-----------------------------] 26% [00m:09s] Processing chr. 22       [█████████████---------------------------] 30% [00m:10s] Processing chr. 22       [██████████████--------------------------] 33% [00m:11s] Processing chr. 22       [███████████████-------------------------] 37% [00m:12s] Processing chr. 22       [█████████████████-----------------------] 41% [00m:13s] Processing chr. 22       [██████████████████----------------------] 44% [00m:14s] Processing chr. 22       [████████████████████--------------------] 48% [00m:15s] Processing chr. 22       [█████████████████████-------------------] 52% [00m:16s] Processing chr. 22       [███████████████████████-----------------] 55% [00m:17s] Processing chr. 22       [████████████████████████----------------] 58% [00m:18s] Processing chr. 22       [██████████████████████████--------------] 63% [00m:19s] Processing chr. 22       [███████████████████████████-------------] 66% [00m:20s] Processing chr. 22       [█████████████████████████████-----------] 70% [00m:21s] Processing chr. 22       [██████████████████████████████----------] 74% [00m:22s] Processing chr. 22       [███████████████████████████████---------] 77% [00m:23s] Processing chr. 22       [█████████████████████████████████-------] 81% [00m:24s] Processing chr. 22       [██████████████████████████████████------] 84% [00m:25s] Processing chr. 22       [████████████████████████████████████----] 88% [00m:26s] Processing chr. 22       [█████████████████████████████████████---] 92% [00m:27s] Processing chr. 22       [███████████████████████████████████████-] 96% [00m:28s] Processing chr. 22       [████████████████████████████████████████] 98% [00m:29s] Processing chr. 22       [████████████████████████████████████████] 99% [00m:30s] Processing chr. 22       [████████████████████████████████████████] 99% [00m:31s] Processing chr. 22       [████████████████████████████████████████] 99% [00m:32s] Processing chr. 22       [████████████████████████████████████████] 99% [00m:33s] Processing chr. 22       [████████████████████████████████████████] 99% [00m:34s] Processing chr. 22       [████████████████████████████████████████] 99% [00m:35s] Processing chr. 22       [████████████████████████████████████████] 99% [00m:36s] Processing chr. 22       [████████████████████████████████████████] 99% [00m:37s] Processing chr. 22       [████████████████████████████████████████] 99% [00m:38s] Processing chr. 22       [████████████████████████████████████████] 99% [00m:39s] Processing chr. 22       [████████████████████████████████████████] 99% [00m:40s] Processing chr. 22       [████████████████████████████████████████] 99% [00m:41s] Processing chr. 22       [████████████████████████████████████████] 99% [00m:42s] Processing chr. 22       [████████████████████████████████████████] 99% [00m:43s] Processing chr. 22       [████████████████████████████████████████] 99% [00m:44s] Processing chr. 22       [████████████████████████████████████████] 99% [00m:45s] Processing chr. 22       [████████████████████████████████████████] 99% [00m:46s] Processing chr. 22       [████████████████████████████████████████] 99% [00m:47s] Processing chr. 22       [████████████████████████████████████████] 99% [00m:48s] Processing chr. 22       [████████████████████████████████████████] 99% [00m:49s] Processing chr. 22       [████████████████████████████████████████] 99% [00m:50s] Processing chr. 22       [████████████████████████████████████████] 99% [00m:51s] Processing chr. 22       [████████████████████████████████████████] 99% [00m:52s] Processing chr. 22       [████████████████████████████████████████] 99% [00m:53s] Processing chr. 22       [████████████████████████████████████████] 99% [00m:54s] Processing chr. 22       [████████████████████████████████████████] 99% [00m:55s] Processing chr. 22       [████████████████████████████████████████] 99% [00m:56s] Processing chr. 22       [████████████████████████████████████████] 99% [00m:57s] Processing chr. 22       [████████████████████████████████████████] 100% [00m:58s] Reads simulated        library(dplyr)  # filter germinal mutations f_seq <- seq_results$mutations %>% filter(classes!=\"germinal\")  plot_VAF(f_seq, sample=\"Sample\")   unlink('demo', recursive = T)"},{"path":"https://caravagnalab.github.io/ProCESS/reference/plot_VAF_histogram.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Histogram of Variant Allele Frequency (VAF) — plot_VAF_histogram","title":"Plot Histogram of Variant Allele Frequency (VAF) — plot_VAF_histogram","text":"function generates histogram showing distribution Variant Allele Frequency (VAF) across samples chromosomes.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/plot_VAF_histogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Histogram of Variant Allele Frequency (VAF) — plot_VAF_histogram","text":"","code":"plot_VAF_histogram(   seq_result,   chromosomes = NULL,   samples = NULL,   labels = NULL,   binwidth = NULL,   cuts = c(0, 1) )"},{"path":"https://caravagnalab.github.io/ProCESS/reference/plot_VAF_histogram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Histogram of Variant Allele Frequency (VAF) — plot_VAF_histogram","text":"seq_result data frame containing sequencing results. chromosomes character vector specifying chromosomes include plot (default: chromosomes seq_res). samples character vector specifying sample names include plot. set NULL, function includes samples except \"normal_sample\" (default: NULL). binwidth width plot bins. set NULL, function computes convinient bin width according maximum coverage reported dataframe (default: NULL). cuts numeric vector specifying range VAF values include plot (default: c(0, 1)). colour_by character indicating whether color histogram bars \"causes\" \"classes\" (default: \"causes\").","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/plot_VAF_histogram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Histogram of Variant Allele Frequency (VAF) — plot_VAF_histogram","text":"ggplot2 object showing VAF histogram.","code":""},{"path":[]},{"path":"https://caravagnalab.github.io/ProCESS/reference/plot_VAF_histogram.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Histogram of Variant Allele Frequency (VAF) — plot_VAF_histogram","text":"","code":"# set the seed of the random number generator set.seed(0)  sim <- SpatialSimulation() sim$add_mutant(name = \"A\",                growth_rates = 0.1,                death_rates = 0.0) sim$place_cell(\"A\", 500, 500) sim$run_up_to_time(100) #>   [████████████████████████████████████████] 100% [00m:00s] Saving snapshot        # sampling tissue n_w <- n_h <- 10 ncells <- 0.8 * n_w * n_h bbox <- sim$search_sample(c(\"A\" = ncells), n_w, n_h) sim$sample_cells(\"SampleA\", bbox$lower_corner, bbox$upper_corner)  # adding second mutant sim$add_mutant(name = \"B\",                growth_rates = 0.3,                death_rates = 0.0) sim$mutate_progeny(sim$choose_cell_in(\"A\"), \"B\") sim$run_up_to_time(300) #>   [████████████████████████████████████████] 100% [00m:00s] Saving snapshot        # sampling tissue again bbox <- sim$search_sample(c(\"B\" = ncells), n_w, n_h) sim$sample_cells(\"SampleB\", bbox$lower_corner, bbox$upper_corner)  forest <- sim$get_samples_forest()  # placing mutations m_engine <- MutationEngine(setup_code = \"demo\") #> Downloading reference genome... #> Reference genome downloaded #> Decompressing reference file...done #> Downloading SBS file... #> SBS file downloaded #> Downloading indel file... #> indel file downloaded #> Downloading driver mutation file... #> Driver mutation file downloaded #> Downloading passenger CNAs file... #> Passenger CNAs file downloaded #> Downloading germline mutations... #> Germline mutations downloaded #> Building context index... #>   [█---------------------------------------] 0% [00m:00s] Processing chr. 22        [█████████████████-----------------------] 40% [00m:01s] Processing chr. 22       [█████████████████████████████████-------] 81% [00m:02s] Processing chr. 22       [████████████████████████████████████████] 100% [00m:02s] Context index built   #>   [█---------------------------------------] 0% [00m:00s] Saving context index      [████████████████████████████████████████] 100% [00m:00s] Context index saved   #> done #> Building repeated sequence index... #>   [█---------------------------------------] 0% [00m:00s] Processing chr. 22        [█---------------------------------------] 0% [00m:03s] Processing chr. 22        [█---------------------------------------] 0% [00m:04s] Processing chr. 22        [█---------------------------------------] 0% [00m:05s] Processing chr. 22        [█---------------------------------------] 0% [00m:06s] Processing chr. 22        [█---------------------------------------] 0% [00m:08s] Processing chr. 22        [█---------------------------------------] 0% [00m:11s] Processing chr. 22        [████████████████████████████████████████] 100% [00m:11s] RS index built        #>   [█---------------------------------------] 0% [00m:00s] Saving RS index           [█---------------------------------------] 0% [00m:01s] Saving RS index           [█████████████████████████████-----------] 71% [00m:02s] Saving RS index        done #>   [████████████████████████████████████████] 100% [00m:02s] RS index saved        #>   [█---------------------------------------] 0% [00m:00s] Loading germline          [████████████████████████████████████████] 100% [00m:00s] Germline loaded       #>   [█---------------------------------------] 0% [00m:00s] Saving germline           [████████████████████████████████████████] 100% [00m:00s] Germline saved         m_engine$add_mutant(mutant_name=\"A\", passenger_rates=c(SNV=5e-8)) #>   [█---------------------------------------] 0% [00m:00s] Retrieving \"A\" SNVs       [████████████████████████████████████████] 100% [00m:00s] \"A\" SNVs retrieved    m_engine$add_mutant(mutant_name=\"B\", passenger_rates=c(SNV=5e-9)) #>   [█---------------------------------------] 0% [00m:00s] Retrieving \"B\" SNVs       [████████████████████████████████████████] 100% [00m:00s] \"B\" SNVs retrieved    m_engine$add_exposure(c(SBS1 = 0.2, SBS5 = 0.8))  phylo_forest <- m_engine$place_mutations(forest, 10, 10) #>   [█---------------------------------------] 0% [00m:00s] Placing mutations         [████████████████████████████████████████] 100% [00m:00s] Mutations placed       # simulating sequencing without the normal sample seq_results <- simulate_seq(phylo_forest, coverage = 10, write_SAM = F,                             with_normal_sample = FALSE) #>   [█---------------------------------------] 0% [00m:00s] Found 22                  [█---------------------------------------] 0% [00m:00s] Reading 22                [█---------------------------------------] 0% [00m:01s] Reading 22                [█---------------------------------------] 0% [00m:01s] Processing chr. 22        [█---------------------------------------] 0% [00m:02s] Processing chr. 22        [█---------------------------------------] 2% [00m:03s] Processing chr. 22        [██--------------------------------------] 3% [00m:04s] Processing chr. 22        [███-------------------------------------] 5% [00m:05s] Processing chr. 22        [███-------------------------------------] 7% [00m:06s] Processing chr. 22        [████------------------------------------] 9% [00m:07s] Processing chr. 22        [█████-----------------------------------] 11% [00m:08s] Processing chr. 22       [██████----------------------------------] 13% [00m:09s] Processing chr. 22       [██████----------------------------------] 14% [00m:10s] Processing chr. 22       [███████---------------------------------] 16% [00m:11s] Processing chr. 22       [████████--------------------------------] 18% [00m:12s] Processing chr. 22       [████████--------------------------------] 19% [00m:13s] Processing chr. 22       [█████████-------------------------------] 21% [00m:14s] Processing chr. 22       [█████████-------------------------------] 22% [00m:15s] Processing chr. 22       [██████████------------------------------] 24% [00m:16s] Processing chr. 22       [███████████-----------------------------] 25% [00m:17s] Processing chr. 22       [███████████-----------------------------] 27% [00m:18s] Processing chr. 22       [████████████----------------------------] 29% [00m:19s] Processing chr. 22       [█████████████---------------------------] 30% [00m:20s] Processing chr. 22       [█████████████---------------------------] 32% [00m:21s] Processing chr. 22       [██████████████--------------------------] 34% [00m:22s] Processing chr. 22       [███████████████-------------------------] 35% [00m:23s] Processing chr. 22       [███████████████-------------------------] 37% [00m:24s] Processing chr. 22       [████████████████------------------------] 39% [00m:25s] Processing chr. 22       [█████████████████-----------------------] 41% [00m:26s] Processing chr. 22       [█████████████████-----------------------] 42% [00m:27s] Processing chr. 22       [██████████████████----------------------] 44% [00m:28s] Processing chr. 22       [███████████████████---------------------] 46% [00m:29s] Processing chr. 22       [███████████████████---------------------] 47% [00m:30s] Processing chr. 22       [████████████████████--------------------] 48% [00m:31s] Processing chr. 22       [████████████████████--------------------] 49% [00m:32s] Processing chr. 22       [█████████████████████-------------------] 50% [00m:33s] Processing chr. 22       [█████████████████████-------------------] 52% [00m:34s] Processing chr. 22       [██████████████████████------------------] 52% [00m:35s] Processing chr. 22       [██████████████████████------------------] 54% [00m:36s] Processing chr. 22       [███████████████████████-----------------] 56% [00m:37s] Processing chr. 22       [███████████████████████-----------------] 57% [00m:38s] Processing chr. 22       [████████████████████████----------------] 58% [00m:39s] Processing chr. 22       [█████████████████████████---------------] 60% [00m:40s] Processing chr. 22       [█████████████████████████---------------] 62% [00m:41s] Processing chr. 22       [██████████████████████████--------------] 63% [00m:42s] Processing chr. 22       [███████████████████████████-------------] 65% [00m:43s] Processing chr. 22       [███████████████████████████-------------] 67% [00m:44s] Processing chr. 22       [████████████████████████████------------] 68% [00m:45s] Processing chr. 22       [█████████████████████████████-----------] 70% [00m:46s] Processing chr. 22       [█████████████████████████████-----------] 71% [00m:47s] Processing chr. 22       [█████████████████████████████-----------] 72% [00m:48s] Processing chr. 22       [██████████████████████████████----------] 73% [00m:49s] Processing chr. 22       [██████████████████████████████----------] 74% [00m:50s] Processing chr. 22       [██████████████████████████████----------] 74% [00m:51s] Processing chr. 22       [███████████████████████████████---------] 75% [00m:52s] Processing chr. 22       [███████████████████████████████---------] 77% [00m:53s] Processing chr. 22       [████████████████████████████████--------] 79% [00m:54s] Processing chr. 22       [█████████████████████████████████-------] 80% [00m:55s] Processing chr. 22       [█████████████████████████████████-------] 82% [00m:56s] Processing chr. 22       [█████████████████████████████████-------] 82% [00m:57s] Processing chr. 22       [██████████████████████████████████------] 83% [00m:58s] Processing chr. 22       [██████████████████████████████████------] 84% [00m:59s] Processing chr. 22       [███████████████████████████████████-----] 86% [01m:00s] Processing chr. 22       [███████████████████████████████████-----] 87% [01m:01s] Processing chr. 22       [████████████████████████████████████----] 88% [01m:02s] Processing chr. 22       [████████████████████████████████████----] 89% [01m:03s] Processing chr. 22       [█████████████████████████████████████---] 90% [01m:04s] Processing chr. 22       [█████████████████████████████████████---] 91% [01m:05s] Processing chr. 22       [█████████████████████████████████████---] 92% [01m:06s] Processing chr. 22       [██████████████████████████████████████--] 93% [01m:07s] Processing chr. 22       [███████████████████████████████████████-] 95% [01m:08s] Processing chr. 22       [███████████████████████████████████████-] 97% [01m:09s] Processing chr. 22       [████████████████████████████████████████] 99% [01m:10s] Processing chr. 22       [████████████████████████████████████████] 100% [01m:11s] Reads simulated        library(dplyr)  # filter germinal mutations f_seq <- seq_results$mutations %>% dplyr::filter(classes!=\"germinal\")  # plotting the VAF histogram plot_VAF_histogram(f_seq, cuts = c(0.02, 1))   # plotting the VAF histogram with labels plot_VAF_histogram(f_seq, labels = f_seq[\"causes\"], cuts = c(0.02, 1))   # deleting the mutation engine directory unlink('demo', recursive = T)"},{"path":"https://caravagnalab.github.io/ProCESS/reference/plot_VAF_marginals.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Marginals of Variant Allele Frequency (VAF) — plot_VAF_marginals","title":"Plot Marginals of Variant Allele Frequency (VAF) — plot_VAF_marginals","text":"function generates scatter plots showing marginal distributions Variant Allele Frequency (VAF) pairs samples specific chromosome.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/plot_VAF_marginals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Marginals of Variant Allele Frequency (VAF) — plot_VAF_marginals","text":"","code":"plot_VAF_marginals(   seq_result,   chromosomes = NULL,   samples = NULL,   labels = NULL,   cuts = c(0, 1) )"},{"path":"https://caravagnalab.github.io/ProCESS/reference/plot_VAF_marginals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Marginals of Variant Allele Frequency (VAF) — plot_VAF_marginals","text":"seq_result data frame containing sequencing results wide format. samples character vector specifying sample names include plot. (default: NULL. includes samples except \"normal_sample\"). cuts numeric vector specifying range VAF values include plot (default: c(0, 1)). chromosome character specifying chromosome analyze (default: chromosomes seq_res). colour_by character indicating whether color scatter points \"causes\" \"classes\" (default: \"causes\").","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/plot_VAF_marginals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Marginals of Variant Allele Frequency (VAF) — plot_VAF_marginals","text":"list ggplot2 objects showing scatter plots VAF marginals pairs samples.","code":""},{"path":[]},{"path":"https://caravagnalab.github.io/ProCESS/reference/plot_VAF_marginals.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Marginals of Variant Allele Frequency (VAF) — plot_VAF_marginals","text":"","code":"# set the seed of the random number generator set.seed(0)  sim <- SpatialSimulation() sim$add_mutant(name = \"A\",                growth_rates = 0.1,                death_rates = 0.0) sim$place_cell(\"A\", 500, 500) sim$run_up_to_time(100) #>   [████████████████████████████████████████] 100% [00m:00s] Saving snapshot        # sampling tissue n_w <- n_h <- 10 ncells <- 0.8 * n_w * n_h bbox <- sim$search_sample(c(\"A\" = ncells), n_w, n_h) sim$sample_cells(\"SampleA\", bbox$lower_corner, bbox$upper_corner)  # adding second mutant sim$add_mutant(name = \"B\",                growth_rates = 0.3,                death_rates = 0.0) sim$mutate_progeny(sim$choose_cell_in(\"A\"), \"B\") sim$run_up_to_time(300) #>   [████████████████████████████████████████] 100% [00m:00s] Saving snapshot        # sampling tissue again bbox <- sim$search_sample(c(\"B\" = ncells), n_w, n_h) sim$sample_cells(\"SampleB\", bbox$lower_corner, bbox$upper_corner)  forest <- sim$get_samples_forest()  # placing mutations m_engine <- MutationEngine(setup_code = \"demo\") #> Downloading reference genome... #> Reference genome downloaded #> Decompressing reference file...done #> Downloading SBS file... #> SBS file downloaded #> Downloading indel file... #> indel file downloaded #> Downloading driver mutation file... #> Driver mutation file downloaded #> Downloading passenger CNAs file... #> Passenger CNAs file downloaded #> Downloading germline mutations... #> Germline mutations downloaded #> Building context index... #>   [█---------------------------------------] 0% [00m:00s] Processing chr. 22        [█████████████████-----------------------] 40% [00m:01s] Processing chr. 22       [█████████████████████████████████-------] 81% [00m:02s] Processing chr. 22       [████████████████████████████████████████] 100% [00m:02s] Context index built   #>   [█---------------------------------------] 0% [00m:00s] Saving context index      [████████████████████████████████████████] 100% [00m:00s] Context index saved   #> done #> Building repeated sequence index... #>   [█---------------------------------------] 0% [00m:00s] Processing chr. 22        [█---------------------------------------] 0% [00m:03s] Processing chr. 22        [█---------------------------------------] 0% [00m:04s] Processing chr. 22        [█---------------------------------------] 0% [00m:05s] Processing chr. 22        [█---------------------------------------] 0% [00m:07s] Processing chr. 22        [█---------------------------------------] 0% [00m:09s] Processing chr. 22        [█---------------------------------------] 0% [00m:12s] Processing chr. 22        [████████████████████████████████████████] 100% [00m:12s] RS index built        #>   [█---------------------------------------] 0% [00m:00s] Saving RS index           [█---------------------------------------] 0% [00m:01s] Saving RS index           [███████████████████████████-------------] 65% [00m:02s] Saving RS index        done #>   [████████████████████████████████████████] 100% [00m:02s] RS index saved        #>   [█---------------------------------------] 0% [00m:00s] Loading germline          [████████████████████████████████████████] 100% [00m:00s] Germline loaded       #>   [█---------------------------------------] 0% [00m:00s] Saving germline           [████████████████████████████████████████] 100% [00m:00s] Germline saved         m_engine$add_mutant(mutant_name=\"A\", passenger_rates=c(SNV=5e-8)) #>   [█---------------------------------------] 0% [00m:00s] Retrieving \"A\" SNVs       [████████████████████████████████████████] 100% [00m:00s] \"A\" SNVs retrieved    m_engine$add_mutant(mutant_name=\"B\", passenger_rates=c(SNV=5e-9)) #>   [█---------------------------------------] 0% [00m:00s] Retrieving \"B\" SNVs       [████████████████████████████████████████] 100% [00m:00s] \"B\" SNVs retrieved    m_engine$add_exposure(c(SBS1 = 0.2, SBS5 = 0.8))  phylo_forest <- m_engine$place_mutations(forest, 10, 10) #>   [█---------------------------------------] 0% [00m:00s] Placing mutations         [████████████████████████████████████████] 100% [00m:00s] Mutations placed       # simulating sequencing without the normal sample seq_results <- simulate_seq(phylo_forest, coverage = 10, write_SAM = F,                             with_normal_sample = FALSE) #>   [█---------------------------------------] 0% [00m:00s] Found 22                  [█---------------------------------------] 0% [00m:00s] Reading 22                [█---------------------------------------] 0% [00m:01s] Reading 22                [█---------------------------------------] 0% [00m:01s] Processing chr. 22        [█---------------------------------------] 0% [00m:02s] Processing chr. 22        [█---------------------------------------] 2% [00m:03s] Processing chr. 22        [██--------------------------------------] 3% [00m:04s] Processing chr. 22        [███-------------------------------------] 5% [00m:05s] Processing chr. 22        [███-------------------------------------] 7% [00m:06s] Processing chr. 22        [████------------------------------------] 9% [00m:07s] Processing chr. 22        [█████-----------------------------------] 10% [00m:08s] Processing chr. 22       [█████-----------------------------------] 12% [00m:09s] Processing chr. 22       [██████----------------------------------] 14% [00m:10s] Processing chr. 22       [███████---------------------------------] 16% [00m:11s] Processing chr. 22       [████████--------------------------------] 18% [00m:12s] Processing chr. 22       [████████--------------------------------] 19% [00m:13s] Processing chr. 22       [█████████-------------------------------] 21% [00m:14s] Processing chr. 22       [██████████------------------------------] 23% [00m:15s] Processing chr. 22       [███████████-----------------------------] 25% [00m:16s] Processing chr. 22       [███████████-----------------------------] 27% [00m:17s] Processing chr. 22       [████████████----------------------------] 28% [00m:18s] Processing chr. 22       [█████████████---------------------------] 30% [00m:19s] Processing chr. 22       [█████████████---------------------------] 32% [00m:20s] Processing chr. 22       [██████████████--------------------------] 33% [00m:21s] Processing chr. 22       [███████████████-------------------------] 35% [00m:22s] Processing chr. 22       [███████████████-------------------------] 37% [00m:23s] Processing chr. 22       [████████████████------------------------] 39% [00m:24s] Processing chr. 22       [█████████████████-----------------------] 40% [00m:25s] Processing chr. 22       [█████████████████-----------------------] 42% [00m:26s] Processing chr. 22       [██████████████████----------------------] 44% [00m:27s] Processing chr. 22       [███████████████████---------------------] 46% [00m:28s] Processing chr. 22       [███████████████████---------------------] 47% [00m:29s] Processing chr. 22       [████████████████████--------------------] 49% [00m:30s] Processing chr. 22       [█████████████████████-------------------] 51% [00m:31s] Processing chr. 22       [██████████████████████------------------] 52% [00m:32s] Processing chr. 22       [███████████████████████-----------------] 55% [00m:33s] Processing chr. 22       [███████████████████████-----------------] 56% [00m:34s] Processing chr. 22       [████████████████████████----------------] 58% [00m:35s] Processing chr. 22       [█████████████████████████---------------] 60% [00m:36s] Processing chr. 22       [█████████████████████████---------------] 62% [00m:37s] Processing chr. 22       [██████████████████████████--------------] 64% [00m:38s] Processing chr. 22       [███████████████████████████-------------] 66% [00m:39s] Processing chr. 22       [███████████████████████████-------------] 67% [00m:40s] Processing chr. 22       [████████████████████████████------------] 69% [00m:41s] Processing chr. 22       [█████████████████████████████-----------] 71% [00m:42s] Processing chr. 22       [██████████████████████████████----------] 73% [00m:43s] Processing chr. 22       [███████████████████████████████---------] 75% [00m:44s] Processing chr. 22       [███████████████████████████████---------] 77% [00m:45s] Processing chr. 22       [████████████████████████████████--------] 78% [00m:46s] Processing chr. 22       [█████████████████████████████████-------] 80% [00m:47s] Processing chr. 22       [█████████████████████████████████-------] 82% [00m:48s] Processing chr. 22       [██████████████████████████████████------] 83% [00m:49s] Processing chr. 22       [███████████████████████████████████-----] 85% [00m:50s] Processing chr. 22       [███████████████████████████████████-----] 87% [00m:51s] Processing chr. 22       [████████████████████████████████████----] 88% [00m:52s] Processing chr. 22       [█████████████████████████████████████---] 90% [00m:53s] Processing chr. 22       [█████████████████████████████████████---] 92% [00m:54s] Processing chr. 22       [██████████████████████████████████████--] 94% [00m:55s] Processing chr. 22       [███████████████████████████████████████-] 96% [00m:56s] Processing chr. 22       [███████████████████████████████████████-] 97% [00m:57s] Processing chr. 22       [████████████████████████████████████████] 99% [00m:58s] Processing chr. 22       [████████████████████████████████████████] 100% [00m:59s] Reads simulated        library(dplyr)  # filter germinal mutations f_seq <- seq_results$mutations %>% filter(classes!=\"germinal\")  # plotting the VAR marginals plot_VAF_marginals(f_seq) #> [[1]]  #>   # plotting the VAF marginals and labelling it plot_VAF_marginals(f_seq, labels = f_seq[\"causes\"]) #> [[1]]  #>   # deleting the mutation engine directory unlink('demo', recursive = T)"},{"path":"https://caravagnalab.github.io/ProCESS/reference/plot_exposure_timeline.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a signatures exposures — plot_exposure_timeline","title":"Plot a signatures exposures — plot_exposure_timeline","text":"Plots signatures exposure changes along phylogenetic forest.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/plot_exposure_timeline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a signatures exposures — plot_exposure_timeline","text":"","code":"plot_exposure_timeline(   phylogenetic_forest,   linewidth = 0.8,   emphatize_switches = FALSE )"},{"path":"https://caravagnalab.github.io/ProCESS/reference/plot_exposure_timeline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a signatures exposures — plot_exposure_timeline","text":"phylogenetic_forest phylogenetic forest. linewidth width lines plot. emphatize_switches Boolean flag emphatize exposure switches.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/plot_exposure_timeline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a signatures exposures — plot_exposure_timeline","text":"editable ggplot plot.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/plot_exposure_timeline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a signatures exposures — plot_exposure_timeline","text":"","code":"sim <- SpatialSimulation()  sim$add_mutant(name = \"A\",                growth_rates = 0.2,                death_rates = 0.0) sim$place_cell(\"A\", 500, 500)  sim$run_up_to_time(150) #>   [████████████████████████████████████████] 100% [00m:00s] Saving snapshot        # sampling tissue  n_w <- n_h <- 50 ncells <- 0.8 * n_w * n_h bbox <- sim$search_sample(c(\"A\" = ncells), n_w, n_h)  sim$sample_cells(\"Sampling\", bbox$lower_corner, bbox$upper_corner)  forest <- sim$get_samples_forest()  # placing mutations  m_engine <- MutationEngine(setup_code = \"demo\") #> Downloading reference genome... #> Reference genome downloaded #> Decompressing reference file...done #> Downloading SBS file... #> SBS file downloaded #> Downloading indel file... #> indel file downloaded #> Downloading driver mutation file... #> Driver mutation file downloaded #> Downloading passenger CNAs file... #> Passenger CNAs file downloaded #> Downloading germline mutations... #> Germline mutations downloaded #> Building context index... #>   [█---------------------------------------] 0% [00m:00s] Processing chr. 22        [█████████████████-----------------------] 40% [00m:01s] Processing chr. 22       [█████████████████████████████████-------] 81% [00m:02s] Processing chr. 22       [████████████████████████████████████████] 100% [00m:02s] Context index built   #>   [█---------------------------------------] 0% [00m:00s] Saving context index      [████████████████████████████████████████] 100% [00m:00s] Context index saved   #> done #> Building repeated sequence index... #>   [█---------------------------------------] 0% [00m:00s] Processing chr. 22        [█---------------------------------------] 0% [00m:03s] Processing chr. 22        [█---------------------------------------] 0% [00m:04s] Processing chr. 22        [█---------------------------------------] 0% [00m:05s] Processing chr. 22        [█---------------------------------------] 0% [00m:06s] Processing chr. 22        [█---------------------------------------] 0% [00m:08s] Processing chr. 22        [█---------------------------------------] 0% [00m:11s] Processing chr. 22        [████████████████████████████████████████] 100% [00m:11s] RS index built        #>   [█---------------------------------------] 0% [00m:00s] Saving RS index           [█---------------------------------------] 0% [00m:00s] Saving RS index           [█████████████████████████████-----------] 72% [00m:02s] Saving RS index        done #>   [████████████████████████████████████████] 100% [00m:02s] RS index saved        #>   [█---------------------------------------] 0% [00m:00s] Loading germline          [████████████████████████████████████████] 100% [00m:00s] Germline loaded       #>   [█---------------------------------------] 0% [00m:00s] Saving germline           [████████████████████████████████████████] 100% [00m:00s] Germline saved         m_engine$add_mutant(mutant_name = \"A\",                     passenger_rates = c(SNV = 8e-8)) #>   [█---------------------------------------] 0% [00m:00s] Retrieving \"A\" SNVs       [████████████████████████████████████████] 100% [00m:00s] \"A\" SNVs retrieved     m_engine$add_exposure(c(SBS1 = 0.2, SBS5 = 0.8, ID3 = 1)) m_engine$add_exposure(time = 50,                       c(SBS5 = 0.3, SBS2 = 0.2, SBS3 = 0.5,                         ID2 = 0.8, ID21 = 0.2)) phylo_forest <- m_engine$place_mutations(forest, 500, 10) #>   [█---------------------------------------] 0% [00m:00s] Placing mutations         [████████████████████████████████████████] 100% [00m:00s] Mutations placed       # plotting the phylogenetic forest plot_exposure_timeline(phylo_forest)   # plotting the phylogenetic forest emphatizing the exposure switches plot_exposure_timeline(phylo_forest, emphatize_switches=TRUE)   # deleting the mutation engine directory unlink(\"demo\", recursive=TRUE)"},{"path":"https://caravagnalab.github.io/ProCESS/reference/plot_firings.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the number of stochastic events in the simulation. — plot_firings","title":"Plot the number of stochastic events in the simulation. — plot_firings","text":"pie chart events split type, mutant epigentic state occurred. also provides annotations simulation information.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/plot_firings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the number of stochastic events in the simulation. — plot_firings","text":"","code":"plot_firings(simulation)"},{"path":"https://caravagnalab.github.io/ProCESS/reference/plot_firings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the number of stochastic events in the simulation. — plot_firings","text":"simulation simulation.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/plot_firings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the number of stochastic events in the simulation. — plot_firings","text":"ggplot plot.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/plot_firings.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the number of stochastic events in the simulation. — plot_firings","text":"","code":"sim <- SpatialSimulation() sim$add_mutant(name = \"A\",                epigenetic_rates = c(\"+-\" = 0.01, \"-+\" = 0.02),                growth_rates = c(\"+\" = 0.2, \"-\" = 0.08),                death_rates = c(\"+\" = 0.1, \"-\" = 0.01)) sim$place_cell(\"A+\", 500, 500) sim$run_up_to_time(60) #>   [████████████████████████████████████████] 100% [00m:00s] Saving snapshot       plot_firings(sim)"},{"path":"https://caravagnalab.github.io/ProCESS/reference/plot_forest.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot samples cell division forest. — plot_forest","title":"Plot samples cell division forest. — plot_forest","text":"Plot samples cell division forest. plot carried using ggraph simplicity visualisation forest plot set trees connected generic wildtype cell.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/plot_forest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot samples cell division forest. — plot_forest","text":"","code":"plot_forest(forest, highlight_sample = NULL, color_map = NULL)"},{"path":"https://caravagnalab.github.io/ProCESS/reference/plot_forest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot samples cell division forest. — plot_forest","text":"forest samples forest plot. highlight_sample sample name, path root sampled cells sample highlighted. NULL (default), nothing highlighted. color_map named vector representing simulation species color map (optional).","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/plot_forest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot samples cell division forest. — plot_forest","text":"ggraph tree plot.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/plot_forest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot samples cell division forest. — plot_forest","text":"","code":"sim <- SpatialSimulation() sim$add_mutant(name = \"A\", growth_rates = 0.08, death_rates = 0.0) sim$place_cell(\"A\", 500, 500) sim$run_up_to_time(60) #>   [████████████████████████████████████████] 100% [00m:00s] Saving snapshot       sim$sample_cells(\"MySample\", c(500, 500), c(510, 510)) forest <- sim$get_samples_forest()  plot_forest(forest)   # define a custom color map color_map <- c(\"#B2DF8A\") names(color_map) <- c(\"A\")  plot_forest(forest, color_map=color_map)"},{"path":"https://caravagnalab.github.io/ProCESS/reference/plot_muller.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a muller plot — plot_muller","title":"Plot a muller plot — plot_muller","text":"Plots muller plot simulation, using store time-series data package ggmuller.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/plot_muller.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a muller plot — plot_muller","text":"","code":"plot_muller(simulation, color_map = NULL)"},{"path":"https://caravagnalab.github.io/ProCESS/reference/plot_muller.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a muller plot — plot_muller","text":"simulation simulation object. color_map named vector representing simulation species color map (optional).","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/plot_muller.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a muller plot — plot_muller","text":"editable ggplot plot.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/plot_muller.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a muller plot — plot_muller","text":"","code":"sim <- SpatialSimulation() sim$add_mutant(name = \"A\",                epigenetic_rates = c(\"+-\" = 0.01, \"-+\" = 0.01),                growth_rates = c(\"+\" = 0.2, \"-\" = 0.08),                death_rates = c(\"+\" = 0.02, \"-\" = 0.01)) sim$history_delta = 1 sim$place_cell(\"A+\", 500, 500) sim$run_up_to_time(60) #>   [████████████████████████████████████████] 100% [00m:00s] Saving snapshot        plot_muller(sim) #> Warning: Removed 14 rows containing non-finite outside the scale range (`stat_align()`).   # define a custom color map color_map <- c(\"#B2DF8A\", \"#E31A1C\") names(color_map) <- c(\"A+\", \"A-\")  plot_muller(sim, color_map=color_map) #> Warning: Removed 14 rows containing non-finite outside the scale range (`stat_align()`)."},{"path":"https://caravagnalab.github.io/ProCESS/reference/plot_state.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the current state of the simulation. — plot_state","title":"Plot the current state of the simulation. — plot_state","text":"pie chart population counts, split species epigentic state. also provides annotations simulation data.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/plot_state.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the current state of the simulation. — plot_state","text":"","code":"plot_state(simulation, color_map = NULL)"},{"path":"https://caravagnalab.github.io/ProCESS/reference/plot_state.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the current state of the simulation. — plot_state","text":"simulation simulation. color_map named vector representing simulation species color map (optional).","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/plot_state.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the current state of the simulation. — plot_state","text":"ggplot plot.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/plot_state.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the current state of the simulation. — plot_state","text":"","code":"sim <- SpatialSimulation() sim$add_mutant(name = \"A\",                epigenetic_rates = c(\"+-\" = 0.01, \"-+\" = 0.02),                growth_rates = c(\"+\" = 0.2, \"-\" = 0.08),                death_rates = c(\"+\" = 0.1, \"-\" = 0.01)) sim$place_cell(\"A+\", 500, 500) sim$run_up_to_time(60) #>   [█████████████████████-------------------] 50% [00m:00s] Saving snapshot          [█████████████████████-------------------] 50% [00m:00s] Cells: 0                 [█████████████████████-------------------] 50% [00m:00s] Cells: 0                 [█████████████████████-------------------] 50% [00m:00s] Cells: 0                plot_state(sim)   # define a custom color map color_map <- c(\"#B2DF8A\", \"#E31A1C\") names(color_map) <- c(\"A+\", \"A-\")  plot_state(sim, color_map=color_map)"},{"path":"https://caravagnalab.github.io/ProCESS/reference/plot_sticks.html","id":null,"dir":"Reference","previous_headings":"","what":"Annotate a plot of cell divisions. — plot_sticks","title":"Annotate a plot of cell divisions. — plot_sticks","text":"annotates plot cell divisions branches containing relevant biological events colored","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/plot_sticks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Annotate a plot of cell divisions. — plot_sticks","text":"","code":"plot_sticks(forest, labels, cls = NULL)"},{"path":"https://caravagnalab.github.io/ProCESS/reference/plot_sticks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Annotate a plot of cell divisions. — plot_sticks","text":"forest original forest object derived. labels data frame annotating sticks (can output get_relevant_branches()). cls custom list colors stick. NULL deafult palette chosen.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/plot_sticks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Annotate a plot of cell divisions. — plot_sticks","text":"ggraph tree plot.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/plot_sticks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Annotate a plot of cell divisions. — plot_sticks","text":"","code":"sim <- SpatialSimulation()  sim$add_mutant(name = \"A\",                growth_rates = 1,                death_rates = 0) sim$place_cell(\"A\", 500, 500) sim$run_up_to_size(\"A\",1e4) #>   [████████████████████████████████████████] 100% [00m:00s] Saving snapshot        sim$add_mutant(name = \"B\",                growth_rates = 3.5,                death_rates = 0) sim$mutate_progeny(sim$choose_cell_in(\"A\"), \"B\")  sim$run_up_to_size(\"B\",1e4) #>   [████████████████████████████████████████] 100% [00m:00s] Saving snapshot        bbox <- sim$search_sample(c(\"A\" = 100,\"B\" = 100), 50, 50) sim$sample_cells(\"Sampling\", bbox$lower_corner, bbox$upper_corner) forest = sim$get_samples_forest()  labels = get_relevant_branches(forest) plot_sticks(forest, labels)"},{"path":"https://caravagnalab.github.io/ProCESS/reference/plot_timeseries.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the current state of the simulation. — plot_timeseries","title":"Plot the current state of the simulation. — plot_timeseries","text":"pie chart population counts, split species epigentic state. also provides annotations simulation data.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/plot_timeseries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the current state of the simulation. — plot_timeseries","text":"","code":"plot_timeseries(simulation, color_map = NULL)"},{"path":"https://caravagnalab.github.io/ProCESS/reference/plot_timeseries.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the current state of the simulation. — plot_timeseries","text":"simulation simulation. color_map named vector representing simulation species color map (optional).","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/plot_timeseries.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the current state of the simulation. — plot_timeseries","text":"ggplot plot.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/plot_timeseries.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the current state of the simulation. — plot_timeseries","text":"","code":"sim <- SpatialSimulation() sim$history_delta <- 1 sim$add_mutant(name = \"A\",                epigenetic_rates = c(\"+-\" = 0.01, \"-+\" = 0.02),                growth_rates = c(\"+\" = 0.2, \"-\" = 0.08),                death_rates = c(\"+\" = 0.1, \"-\" = 0.01)) sim$place_cell(\"A+\", 500, 500) sim$run_up_to_time(60) #>   [████████████████████████████████████████] 100% [00m:00s] Saving snapshot        plot_timeseries(sim)   # define a custom color map color_map <- c(\"#B2DF8A\", \"#E31A1C\") names(color_map) <- c(\"A+\", \"A-\")  plot_timeseries(sim, color_map=color_map)"},{"path":"https://caravagnalab.github.io/ProCESS/reference/plot_tissue.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a tissue — plot_tissue","title":"Plot a tissue — plot_tissue","text":"Plots cells distribution tissue highlighting species color. facilitate plot avoid excessive number cells, instance, simulation deals millions cells, plot draws hexagonal heatmap 2D bins.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/plot_tissue.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a tissue — plot_tissue","text":"","code":"plot_tissue(   simulation,   num_of_bins = 100,   before_sample = NULL,   at_sample = NULL,   plot_next_sample_regions = FALSE,   plot_sample_region = TRUE,   color_map = NULL,   list_all_species = FALSE )"},{"path":"https://caravagnalab.github.io/ProCESS/reference/plot_tissue.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a tissue — plot_tissue","text":"simulation simulation object. num_of_bins number bins (default: 100). before_sample sample name. provided, function represents tissue appeared just specified sampling. parameters before_sample at_sample mutually exclusive (optional). at_sample sample name. provided, function represents tissue appeared specified sampling occurred. parameters before_sample at_sample mutually exclusive (optional). plot_next_sample_regions Boolean value. before_sample set plot_next_sample_regions set TRUE, function plots regions samples collected simulated time specified sample. , instead, at_sample set plot_next_sample_regions set TRUE, function plots regions samples collected simulated time specified sample, specified sample (default: FALSE). plot_sample_region Boolean value. either at_sample before_sample set plot_sample_region set TRUE, function also plots region specified sample (default: TRUE). color_map named vector representing simulation species color map (optional). list_all_species Boolean flag show species legend (default: FALSE).","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/plot_tissue.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a tissue — plot_tissue","text":"editable ggplot plot.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/plot_tissue.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a tissue — plot_tissue","text":"","code":"set.seed(0) sim <- SpatialSimulation() sim$add_mutant(name = \"A\",                epigenetic_rates = c(\"+-\" = 0.01, \"-+\" = 0.01),                growth_rates = c(\"+\" = 0.2, \"-\" = 0.08),                death_rates = c(\"+\" = 0.1, \"-\" = 0.01)) sim$place_cell(\"A+\", 500, 500) sim$run_up_to_size(\"A-\", 60000) #>   [███████████████-------------------------] 36% [00m:00s] Cells: 28821             [█████████████████████████████-----------] 70% [00m:01s] Cells: 50853             [█████████████████████████████████████---] 91% [00m:02s] Cells: 64901             [████████████████████████████████████████] 100% [00m:02s] Saving snapshot        # collect 3 samples: \"Sample_A\", \"Sample_B\", and \"Sample_C\" sim$sample_cells(\"Sample_A\", c(425, 425), c(475, 475)) sim$sample_cells(\"Sample_B\", c(525, 525), c(575, 575)) sim$sample_cells(\"Sample_C\", c(425, 525), c(475, 575))  # let the simulation evolve until the species \"A-\" account # for 80000 cells sim$run_up_to_size(\"A-\", 80000) #>   [█████████████████████████████████-------] 82% [00m:00s] Cells: 77433             [██████████████████████████████████████--] 94% [00m:01s] Cells: 88116             [████████████████████████████████████████] 100% [00m:01s] Saving snapshot        # plot the tissue in the current status plot_tissue(sim)   # plot the tissue as it was when \"Sample_B\" was collected plot_tissue(sim, at_sample=\"Sample_B\")   # plot the tissue as it was when \"Sample_B\" was collected and # highlight the regions of the samples collected at the same # simulated time, but not before it, i.e., \"Sample_B\" and # \"Sample_C\" plot_tissue(sim, at_sample=\"Sample_B\",             plot_next_sample_regions = TRUE)   # plot the tissue as it was just before sampling \"Sample_B\" plot_tissue(sim, before_sample=\"Sample_B\")   # plot the tissue as it was just before sampling \"Sample_B\" # and highlight the regions of the samples collected at the # same simulated time, i.e., \"Sample_A\", \"Sample_B\", and # \"Sample_C\" plot_tissue(sim, before_sample=\"Sample_B\",             plot_next_sample_regions = TRUE)   # define a custom color map color_map <- c(\"#B2DF8A\", \"#E31A1C\") names(color_map) <- c(\"A+\", \"A-\")  plot_tissue(sim, color_map=color_map)"},{"path":"https://caravagnalab.github.io/ProCESS/reference/recover_simulation.html","id":null,"dir":"Reference","previous_headings":"","what":"Loading a simulation — recover_simulation","title":"Loading a simulation — recover_simulation","text":"method loads simulation disk.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/recover_simulation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Loading a simulation — recover_simulation","text":"name name simulation recovered.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/recover_simulation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Loading a simulation — recover_simulation","text":"","code":"# create a simulation having name \"recover_simulation_test\" and # save its snapshots in a local directory sim <- SpatialSimulation(\"recover_simulation_test\",            save_snapshots=TRUE)  # add the species of \"A\" sim$add_mutant(\"A\",                epigenetic_rates=c(\"+-\" = 0.01, \"-+\"=0.01),                growth_rates = c(\"+\"=0.1, \"-\"=0.01),                death_rates = c(\"+\"=0.05, \"-\"=0.005))  # place a cell in the tissue sim$place_cell(\"A+\", 500, 500)  # simulate up to time 50 sim$run_up_to_time(50) #>   [████████████████████████████████████████] 100% [00m:00s] Saving snapshot        # show the simulation sim #> ──  ProCESS   D   S   M  recover_simulation_test ───── ▣  [1000x1000]  ⏱ 51,5 ── #>  #> ── Species: 2, with epigenetics  #>     #>    =======  ====  =====  ====  ======  ======== #>    species   λ       δ    ε    counts     %     #>    =======  ====  =====  ====  ======  ======== #>         A-  0,01  0,005  0,01    3     27,27273 #>         A+  0,10  0,050  0,01    8     72,72727 #>    =======  ====  =====  ====  ======  ======== #>  #> ── Firings: 21 total  #>  #> \tSpecies [A-]:  0 (deaths),  0 (duplications) and  0 (switches) #> \tSpecies [A+]:  4 (deaths), 14 (duplications) and  3 (switches) #> ✖ The simulation has no samples yet!  # remove the object sim from the environment rm(list=c(\"sim\"))  # the object pointed by sim does not exist any more exists(\"sim\") #> [1] FALSE  # recover the simulation from the directory \"recover_simulation_test\" sim <- recover_simulation(\"recover_simulation_test\")  sim #> ──  ProCESS   D   S   M  recover_simulation_test ───── ▣  [1000x1000]  ⏱ 51,5 ── #>  #> ── Species: 2, with epigenetics  #>     #>    =======  ====  =====  ====  ======  ======== #>    species   λ       δ    ε    counts     %     #>    =======  ====  =====  ====  ======  ======== #>         A-  0,01  0,005  0,01    3     27,27273 #>         A+  0,10  0,050  0,01    8     72,72727 #>    =======  ====  =====  ====  ======  ======== #>  #> ── Firings: 21 total  #>  #> \tSpecies [A-]:  0 (deaths),  0 (duplications) and  0 (switches) #> \tSpecies [A+]:  4 (deaths), 14 (duplications) and  3 (switches) #> ✖ The simulation has no samples yet!  # delete dump directory unlink(\"recover_simulation_test\", recursive = TRUE)"},{"path":"https://caravagnalab.github.io/ProCESS/reference/seq_to_long.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Sequencing Results from Wide to Long Format — seq_to_long","title":"Convert Sequencing Results from Wide to Long Format — seq_to_long","text":"function takes sequencing results wide format converts long format data frame. extracts sample names column names, processes sample separately, binds together. Finally, renames reorders columns match desired output format.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/seq_to_long.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Sequencing Results from Wide to Long Format — seq_to_long","text":"","code":"seq_to_long(seq_results)"},{"path":"https://caravagnalab.github.io/ProCESS/reference/seq_to_long.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Sequencing Results from Wide to Long Format — seq_to_long","text":"seq_results data frame containing sequencing results wide format.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/seq_to_long.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Sequencing Results from Wide to Long Format — seq_to_long","text":"data frame long format columns \"chr\", \"\", \"\", \"ref\", \"alt\", \"NV\", \"DP\", \"VAF\", \"sample_name\".","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/seq_to_long.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert Sequencing Results from Wide to Long Format — seq_to_long","text":"","code":"# Example data frame in wide format seq_results <- data.frame(chr = c(\"chr1\", \"chr2\"),                           chr_pos = c(100, 200),                           ref = c(\"A\", \"C\"),                           alt = c(\"T\", \"G\"),                           causes = c(\"SBS5\", \"SBS1\"),                           classes = c(\"germinal\", \"passneger\"),                           Sample.A.occurrences = c(10, 90),                           Sample.A.coverage = c(100, 100),                           Sample.A.VAF = c(0.1, 0.9),                           normal_sample.occurrences = c(45, 52),                           normal_sample.coverage = c(100, 100),                           normal_sample.VAF = c(0.45, 0.52)) seq_results #>    chr chr_pos ref alt causes   classes Sample.A.occurrences Sample.A.coverage #> 1 chr1     100   A   T   SBS5  germinal                   10               100 #> 2 chr2     200   C   G   SBS1 passneger                   90               100 #>   Sample.A.VAF normal_sample.occurrences normal_sample.coverage #> 1          0,1                        45                    100 #> 2          0,9                        52                    100 #>   normal_sample.VAF #> 1              0,45 #> 2              0,52  # Convert to long format seq_to_long(seq_results) #>    chr from ref alt causes   classes NV  DP  VAF   sample_name  to #> 1 chr1  100   A   T   SBS5  germinal 10 100 0,10      Sample.A 100 #> 2 chr2  200   C   G   SBS1 passneger 90 100 0,90      Sample.A 200 #> 3 chr1  100   A   T   SBS5  germinal 45 100 0,45 normal_sample 100 #> 4 chr2  200   C   G   SBS1 passneger 52 100 0,52 normal_sample 200"},{"path":"https://caravagnalab.github.io/ProCESS/reference/simulate_normal_seq.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulating wild-type sequencing — simulate_normal_seq","title":"Simulating wild-type sequencing — simulate_normal_seq","text":"method simulates wild-type sample sequencing phylogenetic forest. Add cells wild-type sample contains germline mutations. forest pre-neoplastic mutations also added sample default. However, can avoided using parameter with_preneoplastic.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/simulate_normal_seq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulating wild-type sequencing — simulate_normal_seq","text":"phylo_forest phylogenetic forest. sequencer sequencer performs sequencing simulation (default: ErrorlessIlluminaSequencer). reference_genome reference genome (default: NULL use mutation engine reference genome). chromosomes chromosomes must considered (default: NULL, .e., reference chromosomes). coverage sequencing coverage (default: 10). read_size read size (default: 150). insert_size_mean insert size mean. Use 0 single read sequencing value greater 0 pair read sequencing (default: 0). insert_size_stddev insert size standard deviation. (default: 10). output_dir SAM output directory (default: \"ProCESS_normal_SAM\"). write_SAM Boolean flag enable/disable SAM generation (default: TRUE). update_SAM Update output directory (default: FALSE). with_preneoplastic Add forest pre-neoplastic mutations sample cells. (default: TRUE). filename_prefix prefix output SAM file name (default: \"chr_\"). template_name_prefix template name prefix (default: \"r\"). include_non_sequenced_mutations Boolean flag include resulting data frame also mutations covered simulated reads, occur one samples least (default: FALSE). seed random seed internal random generator (optional).","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/simulate_normal_seq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulating wild-type sequencing — simulate_normal_seq","text":"named list two elements: sequencing output data frame (name \"mutations\") calling parameters (name \"parameters\"). sequencing output data frame reports, observed SNVs indels, chromosome position occurs (columns chr chr_pos), SNV reference base, alternative base, causes, classes SNV (columns ref_base, alt_base, causes, classes, respectively). Moreover, sequenced samples normal_sample, returned data frame contains three columns: number reads corresponding SNV occurs (column normal_sample.occurrences), coverage SNV locus (column normal_sample.coverage), corresponding VAF (column normal_sample.VAF).","code":""},{"path":[]},{"path":"https://caravagnalab.github.io/ProCESS/reference/simulate_seq.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulating the sequencing — simulate_seq","title":"Simulating the sequencing — simulate_seq","text":"method simulates sequencing samples phylogenetic forest.","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/simulate_seq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulating the sequencing — simulate_seq","text":"phylo_forest phylogenetic forest. sequencer sequencer performs sequencing simulation (default: ErrorlessIlluminaSequencer). reference_genome reference genome (default: NULL use mutation engine reference genome). chromosomes chromosomes must considered (default: NULL, .e., reference chromosomes). coverage sequencing coverage (default: 10). read_size read size (default: 150). insert_size_mean insert size mean. Use 0 single read sequencing value greater 0 pair read sequencing (default: 0). insert_size_stddev insert size standard deviation. (default: 10). output_dir SAM output directory (default: \"ProCESS_SAM\"). write_SAM Boolean flag enable/disable SAM generation (default: FALSE). update_SAM Update output directory (default: FALSE). cell_labelling labelling function sampled cells See vignette(\"sample_partition\") details (default: NULL). purity ratio number sample tumour cell cells, .e., tumour normal ones. value must belong interval 0,1 (default: 1). with_normal_sample Boolean flag enable/disable analysis normal sample (default: TRUE). filename_prefix prefix output SAM file name (default: \"chr_\"). template_name_prefix template name prefix (default: \"r\"). include_non_sequenced_mutations Boolean flag include resulting data frame also mutations covered simulated reads, occur one samples least (default: FALSE). seed random seed internal random generator (optional).","code":""},{"path":"https://caravagnalab.github.io/ProCESS/reference/simulate_seq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulating the sequencing — simulate_seq","text":"named list two elements: sequencing output data frame (name \"mutations\") calling parameters (name \"parameters\"). sequencing output data frame reports, observed SNVs indels, chromosome position occurs (columns chr chr_pos), reference alterate sequences (columns ref alt, respectively), cause class (columns causes, classes, respectively). Moreover, sequenced samples <sample name>, returned data frame contains three columns: number reads corresponding mutation occurs (column <sample name>.occurrences), coverage mutation (column <sample name>.coverage), corresponding VAF (column <sample name>.VAF).","code":""},{"path":[]}]
